!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=44)}([function(e,t,n){e.exports=n(33)()},function(e,t,n){"use strict";e.exports=n(43)},function(e,t,n){"use strict";e.exports=function(){}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,a,i,l){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,a,i,l],s=0;(u=new Error(t.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(e,t,n){"use strict";t.__esModule=!0;t.addLeadingSlash=function(e){return"/"===e.charAt(0)?e:"/"+e},t.stripLeadingSlash=function(e){return"/"===e.charAt(0)?e.substr(1):e};var r=t.hasBasename=function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)};t.stripBasename=function(e,t){return r(e,t)?e.substr(t.length):e},t.stripTrailingSlash=function(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e},t.parsePath=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var a=t.indexOf("?");return-1!==a&&(n=t.substr(a),t=t.substr(0,a)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}},t.createPath=function(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}},function(e,t,n){"use strict";n.r(t);var r=n(2),o=n.n(r),a=n(1),i=n.n(a),l=n(0),u=n.n(l),c=n(20),s=n.n(c),f=n(3),p=n.n(f),d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function h(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var m=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=h(this,e.call.apply(e,[this].concat(a))),r.state={match:r.computeMatch(r.props.history.location.pathname)},h(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:d({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},t.prototype.computeMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}},t.prototype.componentWillMount=function(){var e=this,t=this.props,n=t.children,r=t.history;p()(null==n||1===i.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=r.listen(function(){e.setState({match:e.computeMatch(r.location.pathname)})})},t.prototype.componentWillReceiveProps=function(e){o()(this.props.history===e.history,"You cannot change <Router history>")},t.prototype.componentWillUnmount=function(){this.unlisten()},t.prototype.render=function(){var e=this.props.children;return e?i.a.Children.only(e):null},t}(i.a.Component);m.propTypes={history:u.a.object.isRequired,children:u.a.node},m.contextTypes={router:u.a.object},m.childContextTypes={router:u.a.object.isRequired};var y=m,v=y;function g(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var b=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=g(this,e.call.apply(e,[this].concat(a))),r.history=s()(r.props),g(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){o()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},t.prototype.render=function(){return i.a.createElement(v,{history:this.history,children:this.props.children})},t}(i.a.Component);b.propTypes={basename:u.a.string,forceRefresh:u.a.bool,getUserConfirmation:u.a.func,keyLength:u.a.number,children:u.a.node};var w=b,x=n(19),E=n.n(x);function k(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var C=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=k(this,e.call.apply(e,[this].concat(a))),r.history=E()(r.props),k(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){o()(!this.props.history,"<HashRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { HashRouter as Router }`.")},t.prototype.render=function(){return i.a.createElement(v,{history:this.history,children:this.props.children})},t}(i.a.Component);C.propTypes={basename:u.a.string,getUserConfirmation:u.a.func,hashType:u.a.oneOf(["hashbang","noslash","slash"]),children:u.a.node};var _=C,T=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function S(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var P=function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)},O=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=S(this,e.call.apply(e,[this].concat(a))),r.handleClick=function(e){if(r.props.onClick&&r.props.onClick(e),!e.defaultPrevented&&0===e.button&&!r.props.target&&!P(e)){e.preventDefault();var t=r.context.router.history,n=r.props,o=n.replace,a=n.to;o?t.replace(a):t.push(a)}},S(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.render=function(){var e=this.props,t=(e.replace,e.to),n=e.innerRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["replace","to","innerRef"]);p()(this.context.router,"You should not use <Link> outside a <Router>");var o=this.context.router.history.createHref("string"==typeof t?{pathname:t}:t);return i.a.createElement("a",T({},r,{onClick:this.handleClick,href:o,ref:n}))},t}(i.a.Component);O.propTypes={onClick:u.a.func,target:u.a.string,replace:u.a.bool,to:u.a.oneOfType([u.a.string,u.a.object]).isRequired,innerRef:u.a.oneOfType([u.a.string,u.a.func])},O.defaultProps={replace:!1},O.contextTypes={router:u.a.shape({history:u.a.shape({push:u.a.func.isRequired,replace:u.a.func.isRequired,createHref:u.a.func.isRequired}).isRequired}).isRequired};var R=O,N=n(18),j=n.n(N);function M(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var U=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=M(this,e.call.apply(e,[this].concat(a))),r.history=j()(r.props),M(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){o()(!this.props.history,"<MemoryRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { MemoryRouter as Router }`.")},t.prototype.render=function(){return i.a.createElement(y,{history:this.history,children:this.props.children})},t}(i.a.Component);U.propTypes={initialEntries:u.a.array,initialIndex:u.a.number,getUserConfirmation:u.a.func,keyLength:u.a.number,children:u.a.node};var L=U,I=n(17),F=n.n(I),A={},D=0,z=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};"string"==typeof t&&(t={path:t});var n=t,r=n.path,o=void 0===r?"/":r,a=n.exact,i=void 0!==a&&a,l=n.strict,u=void 0!==l&&l,c=n.sensitive,s=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=A[n]||(A[n]={});if(r[e])return r[e];var o=[],a={re:F()(e,o,t),keys:o};return D<1e4&&(r[e]=a,D++),a}(o,{end:i,strict:u,sensitive:void 0!==c&&c}),f=s.re,p=s.keys,d=f.exec(e);if(!d)return null;var h=d[0],m=d.slice(1),y=e===h;return i&&!y?null:{path:o,url:"/"===o&&""===h?"/":h,isExact:y,params:p.reduce(function(e,t,n){return e[t.name]=m[n],e},{})}},B=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function H(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var W=function(e){return 0===i.a.Children.count(e)},V=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=H(this,e.call.apply(e,[this].concat(a))),r.state={match:r.computeMatch(r.props,r.context.router)},H(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:B({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},t.prototype.computeMatch=function(e,t){var n=e.computedMatch,r=e.location,o=e.path,a=e.strict,i=e.exact,l=e.sensitive;if(n)return n;p()(t,"You should not use <Route> or withRouter() outside a <Router>");var u=t.route,c=(r||u.location).pathname;return o?z(c,{path:o,strict:a,exact:i,sensitive:l}):u.match},t.prototype.componentWillMount=function(){o()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),o()(!(this.props.component&&this.props.children&&!W(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),o()(!(this.props.render&&this.props.children&&!W(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},t.prototype.componentWillReceiveProps=function(e,t){o()(!(e.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),o()(!(!e.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(e,t.router)})},t.prototype.render=function(){var e=this.state.match,t=this.props,n=t.children,r=t.component,o=t.render,a=this.context.router,l=a.history,u=a.route,c=a.staticContext,s={match:e,location:this.props.location||u.location,history:l,staticContext:c};return r?e?i.a.createElement(r,s):null:o?e?o(s):null:n?"function"==typeof n?n(s):W(n)?null:i.a.Children.only(n):null},t}(i.a.Component);V.propTypes={computedMatch:u.a.object,path:u.a.string,exact:u.a.bool,strict:u.a.bool,sensitive:u.a.bool,component:u.a.func,render:u.a.func,children:u.a.oneOfType([u.a.func,u.a.node]),location:u.a.object},V.contextTypes={router:u.a.shape({history:u.a.object.isRequired,route:u.a.object.isRequired,staticContext:u.a.object})},V.childContextTypes={router:u.a.object.isRequired};var $=V,q=$,Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var Q=function(e){var t=e.to,n=e.exact,r=e.strict,o=e.location,a=e.activeClassName,l=e.className,u=e.activeStyle,c=e.style,s=e.isActive,f=e.ariaCurrent,p=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["to","exact","strict","location","activeClassName","className","activeStyle","style","isActive","ariaCurrent"]);return i.a.createElement(q,{path:"object"===(void 0===t?"undefined":K(t))?t.pathname:t,exact:n,strict:r,location:o,children:function(e){var n=e.location,r=e.match,o=!!(s?s(r,n):r);return i.a.createElement(R,Y({to:t,className:o?[l,a].filter(function(e){return e}).join(" "):l,style:o?Y({},c,u):c,"aria-current":o&&f},p))}})};Q.propTypes={to:R.propTypes.to,exact:u.a.bool,strict:u.a.bool,location:u.a.object,activeClassName:u.a.string,className:u.a.string,activeStyle:u.a.object,style:u.a.object,isActive:u.a.func,ariaCurrent:u.a.oneOf(["page","step","location","true"])},Q.defaultProps={activeClassName:"active",ariaCurrent:"true"};var G=Q;var X=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.enable=function(e){this.unblock&&this.unblock(),this.unblock=this.context.router.history.block(e)},t.prototype.disable=function(){this.unblock&&(this.unblock(),this.unblock=null)},t.prototype.componentWillMount=function(){p()(this.context.router,"You should not use <Prompt> outside a <Router>"),this.props.when&&this.enable(this.props.message)},t.prototype.componentWillReceiveProps=function(e){e.when?this.props.when&&this.props.message===e.message||this.enable(e.message):this.disable()},t.prototype.componentWillUnmount=function(){this.disable()},t.prototype.render=function(){return null},t}(i.a.Component);X.propTypes={when:u.a.bool,message:u.a.oneOfType([u.a.func,u.a.string]).isRequired},X.defaultProps={when:!0},X.contextTypes={router:u.a.shape({history:u.a.shape({block:u.a.func.isRequired}).isRequired}).isRequired};var J=X,Z=n(12),ee=n(11),te=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ne=function(e,t,n,r){var o=void 0;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var a=t.indexOf("?");return-1!==a&&(n=t.substr(a),t=t.substr(0,a)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=te({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=Object(Z.default)(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o},re=function(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&Object(ee.default)(e.state,t.state)};"undefined"==typeof window||!window.document||window.document.createElement,"function"==typeof Symbol&&Symbol.iterator,Object.assign,Object.assign,"function"==typeof Symbol&&Symbol.iterator,Object.assign;var oe=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.isStatic=function(){return this.context.router&&this.context.router.staticContext},t.prototype.componentWillMount=function(){p()(this.context.router,"You should not use <Redirect> outside a <Router>"),this.isStatic()&&this.perform()},t.prototype.componentDidMount=function(){this.isStatic()||this.perform()},t.prototype.componentDidUpdate=function(e){var t=ne(e.to),n=ne(this.props.to);re(t,n)?o()(!1,"You tried to redirect to the same route you're currently on: \""+n.pathname+n.search+'"'):this.perform()},t.prototype.perform=function(){var e=this.context.router.history,t=this.props,n=t.push,r=t.to;n?e.push(r):e.replace(r)},t.prototype.render=function(){return null},t}(i.a.Component);oe.propTypes={push:u.a.bool,from:u.a.string,to:u.a.oneOfType([u.a.string,u.a.object]).isRequired},oe.defaultProps={push:!1},oe.contextTypes={router:u.a.shape({history:u.a.shape({push:u.a.func.isRequired,replace:u.a.func.isRequired}).isRequired,staticContext:u.a.object}).isRequired};var ae=oe,ie=n(4),le=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function ue(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var ce=function(e,t){return e?le({},t,{pathname:Object(ie.addLeadingSlash)(e)+t.pathname}):t},se=function(e){return"string"==typeof e?Object(ie.parsePath)(e):(n=(t=e).pathname,r=void 0===n?"/":n,o=t.search,a=void 0===o?"":o,i=t.hash,l=void 0===i?"":i,{pathname:r,search:"?"===a?"":a,hash:"#"===l?"":l});var t,n,r,o,a,i,l},fe=function(e){return"string"==typeof e?e:Object(ie.createPath)(e)},pe=function(e){return function(){p()(!1,"You cannot %s with <StaticRouter>",e)}},de=function(){},he=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=ue(this,e.call.apply(e,[this].concat(a))),r.createHref=function(e){return Object(ie.addLeadingSlash)(r.props.basename+fe(e))},r.handlePush=function(e){var t=r.props,n=t.basename,o=t.context;o.action="PUSH",o.location=ce(n,se(e)),o.url=fe(o.location)},r.handleReplace=function(e){var t=r.props,n=t.basename,o=t.context;o.action="REPLACE",o.location=ce(n,se(e)),o.url=fe(o.location)},r.handleListen=function(){return de},r.handleBlock=function(){return de},ue(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:{staticContext:this.props.context}}},t.prototype.componentWillMount=function(){o()(!this.props.history,"<StaticRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { StaticRouter as Router }`.")},t.prototype.render=function(){var e=this.props,t=e.basename,n=(e.context,e.location),r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["basename","context","location"]),o={createHref:this.createHref,action:"POP",location:function(e,t){if(!e)return t;var n=Object(ie.addLeadingSlash)(e);return 0!==t.pathname.indexOf(n)?t:le({},t,{pathname:t.pathname.substr(n.length)})}(t,se(n)),push:this.handlePush,replace:this.handleReplace,go:pe("go"),goBack:pe("goBack"),goForward:pe("goForward"),listen:this.handleListen,block:this.handleBlock};return i.a.createElement(y,le({},r,{history:o}))},t}(i.a.Component);he.propTypes={basename:u.a.string,context:u.a.object.isRequired,location:u.a.oneOfType([u.a.string,u.a.object])},he.defaultProps={basename:"",location:"/"},he.childContextTypes={router:u.a.object.isRequired};var me=he;var ye=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){p()(this.context.router,"You should not use <Switch> outside a <Router>")},t.prototype.componentWillReceiveProps=function(e){o()(!(e.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),o()(!(!e.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},t.prototype.render=function(){var e=this.context.router.route,t=this.props.children,n=this.props.location||e.location,r=void 0,o=void 0;return i.a.Children.forEach(t,function(t){if(i.a.isValidElement(t)){var a=t.props,l=a.path,u=a.exact,c=a.strict,s=a.sensitive,f=a.from,p=l||f;null==r&&(o=t,r=p?z(n.pathname,{path:p,exact:u,strict:c,sensitive:s}):e.match)}}),r?i.a.cloneElement(o,{location:n,computedMatch:r}):null},t}(i.a.Component);ye.contextTypes={router:u.a.shape({route:u.a.object.isRequired}).isRequired},ye.propTypes={children:u.a.node,location:u.a.object};var ve=ye,ge=z,be=n(16),we=n.n(be),xe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var Ee=function(e){var t=function(t){var n=t.wrappedComponentRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(t,["wrappedComponentRef"]);return i.a.createElement($,{render:function(t){return i.a.createElement(e,xe({},r,t,{ref:n}))}})};return t.displayName="withRouter("+(e.displayName||e.name)+")",t.WrappedComponent=e,t.propTypes={wrappedComponentRef:u.a.func},we()(t,e)};n.d(t,"BrowserRouter",function(){return w}),n.d(t,"HashRouter",function(){return _}),n.d(t,"Link",function(){return R}),n.d(t,"MemoryRouter",function(){return L}),n.d(t,"NavLink",function(){return G}),n.d(t,"Prompt",function(){return J}),n.d(t,"Redirect",function(){return ae}),n.d(t,"Route",function(){return q}),n.d(t,"Router",function(){return v}),n.d(t,"StaticRouter",function(){return me}),n.d(t,"Switch",function(){return ve}),n.d(t,"matchPath",function(){return ge}),n.d(t,"withRouter",function(){return Ee})},function(e,t,n){"use strict";t.__esModule=!0;var r,o=n(2),a=(r=o)&&r.__esModule?r:{default:r};t.default=function(){var e=null,t=[];return{setPrompt:function(t){return(0,a.default)(null==e,"A history supports only one prompt at a time"),e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):((0,a.default)(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),o(!0)):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0,r=function(){n&&e.apply(void 0,arguments)};return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}}},function(e,t,n){"use strict";t.__esModule=!0,t.locationsAreEqual=t.createLocation=void 0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=l(n(12)),a=l(n(11)),i=n(4);function l(e){return e&&e.__esModule?e:{default:e}}t.createLocation=function(e,t,n,a){var l=void 0;"string"==typeof e?(l=(0,i.parsePath)(e)).state=t:(void 0===(l=r({},e)).pathname&&(l.pathname=""),l.search?"?"!==l.search.charAt(0)&&(l.search="?"+l.search):l.search="",l.hash?"#"!==l.hash.charAt(0)&&(l.hash="#"+l.hash):l.hash="",void 0!==t&&void 0===l.state&&(l.state=t));try{l.pathname=decodeURI(l.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+l.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(l.key=n),a?l.pathname?"/"!==l.pathname.charAt(0)&&(l.pathname=(0,o.default)(l.pathname,a.pathname)):l.pathname=a.pathname:l.pathname||(l.pathname="/"),l},t.locationsAreEqual=function(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&(0,a.default)(e.state,t.state)}},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t,n){"use strict";var r=function(e){};e.exports=function(e,t,n,o,a,i,l,u){if(r(t),!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,o,a,i,l,u],f=0;(c=new Error(t.replace(/%s/g,function(){return s[f++]}))).name="Invariant Violation"}throw c.framesToPop=1,c}}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))o.call(n,c)&&(l[c]=n[c]);if(r){i=r(n);for(var s=0;s<i.length;s++)a.call(n,i[s])&&(l[i[s]]=n[i[s]])}}return l}},function(e,t,n){"use strict";n.r(t);var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every(function(t,r){return e(t,n[r])});var o=void 0===t?"undefined":r(t);if(o!==(void 0===n?"undefined":r(n)))return!1;if("object"===o){var a=t.valueOf(),i=n.valueOf();if(a!==t||i!==n)return e(a,i);var l=Object.keys(t),u=Object.keys(n);return l.length===u.length&&l.every(function(r){return e(t[r],n[r])})}return!1}},function(e,t,n){"use strict";function r(e){return"/"===e.charAt(0)}function o(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}n.r(t),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],a=t&&t.split("/")||[],i=e&&r(e),l=t&&r(t),u=i||l;if(e&&r(e)?a=n:n.length&&(a.pop(),a=a.concat(n)),!a.length)return"/";var c=void 0;if(a.length){var s=a[a.length-1];c="."===s||".."===s||""===s}else c=!1;for(var f=0,p=a.length;p>=0;p--){var d=a[p];"."===d?o(a,p):".."===d?(o(a,p),f++):f&&(o(a,p),f--)}if(!u)for(;f--;f)a.unshift("..");!u||""===a[0]||a[0]&&r(a[0])||a.unshift("");var h=a.join("/");return c&&"/"!==h.substr(-1)&&(h+="/"),h}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkResponseData=i,t.searchCharacters=function({search:e},{page:t=1}){const n=`?name=${e}`,o=`page=${t}`;return a(`${r}${CHARACTERS_URL}${n}&${o}`)},t.getCharacter=function(e){return a(`${r}${o}${e}`)};const r="https://rickandmortyapi.com/api/",o="character/",a=e=>fetch(e).then(e=>e.json()).then(i);function i(e){if("False"===e.Response)throw e.Error;return e}},function(e,t,n){"use strict";t.__esModule=!0;t.canUseDOM=!("undefined"==typeof window||!window.document||!window.document.createElement),t.addEventListener=function(e,t,n){return e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent("on"+t,n)},t.removeEventListener=function(e,t,n){return e.removeEventListener?e.removeEventListener(t,n,!1):e.detachEvent("on"+t,n)},t.getConfirmation=function(e,t){return t(window.confirm(e))},t.supportsHistory=function(){var e=window.navigator.userAgent;return(-1===e.indexOf("Android 2.")&&-1===e.indexOf("Android 4.0")||-1===e.indexOf("Mobile Safari")||-1!==e.indexOf("Chrome")||-1!==e.indexOf("Windows Phone"))&&(window.history&&"pushState"in window.history)},t.supportsPopStateOnHashChange=function(){return-1===window.navigator.userAgent.indexOf("Trident")},t.supportsGoWithoutReloadUsingHash=function(){return-1===window.navigator.userAgent.indexOf("Firefox")},t.isExtraneousPopstateEvent=function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")}},function(e,t,n){"use strict";e.exports={}},function(e,t,n){e.exports=function(){"use strict";var e={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},t={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},n=Object.defineProperty,r=Object.getOwnPropertyNames,o=Object.getOwnPropertySymbols,a=Object.getOwnPropertyDescriptor,i=Object.getPrototypeOf,l=i&&i(Object);return function u(c,s,f){if("string"!=typeof s){if(l){var p=i(s);p&&p!==l&&u(c,p,f)}var d=r(s);o&&(d=d.concat(o(s)));for(var h=0;h<d.length;++h){var m=d[h];if(!(e[m]||t[m]||f&&f[m])){var y=a(s,m);try{n(c,m,y)}catch(e){}}}return c}return c}}()},function(e,t,n){var r=n(31);e.exports=d,e.exports.parse=a,e.exports.compile=function(e,t){return l(a(e,t))},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=p;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,t){for(var n,r=[],a=0,i=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],p=n[1],d=n.index;if(l+=e.slice(i,d),i=d+f.length,p)l+=p[1];else{var h=e[i],m=n[2],y=n[3],v=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var x=null!=m&&null!=h&&h!==m,E="+"===b||"*"===b,k="?"===b||"*"===b,C=n[2]||s,_=v||g;r.push({name:y||a++,prefix:m||"",delimiter:C,optional:k,repeat:E,partial:x,asterisk:!!w,pattern:_?c(_):w?".*":"[^"+u(C)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function l(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var a="",l=n||{},u=(o||{}).pretty?i:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,p=l[s.name];if(null==p){if(s.optional){s.partial&&(a+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(p)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<p.length;d++){if(f=u(p[d]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");a+=(0===d?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(p).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):u(p),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');a+=s.prefix+f}}else a+=s}return a}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e.sensitive?"":"i"}function p(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,a=!1!==n.end,i="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)i+=u(c);else{var p=u(c.prefix),d="(?:"+c.pattern+")";t.push(c),c.repeat&&(d+="(?:"+p+d+")*"),i+=d=c.optional?c.partial?p+"("+d+")?":"(?:"+p+"("+d+"))?":p+"("+d+")"}}var h=u(n.delimiter||"/"),m=i.slice(-h.length)===h;return o||(i=(m?i.slice(0,-h.length):i)+"(?:"+h+"(?=$))?"),i+=a?"$":o&&m?"":"(?="+h+"|$)",s(new RegExp("^"+i,f(n)),t)}function d(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(d(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return p(a(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";t.__esModule=!0;var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=c(n(2)),i=n(4),l=n(7),u=c(n(6));function c(e){return e&&e.__esModule?e:{default:e}}var s=function(e,t,n){return Math.min(Math.max(e,t),n)};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.getUserConfirmation,n=e.initialEntries,c=void 0===n?["/"]:n,f=e.initialIndex,p=void 0===f?0:f,d=e.keyLength,h=void 0===d?6:d,m=(0,u.default)(),y=function(e){o(E,e),E.length=E.entries.length,m.notifyListeners(E.location,E.action)},v=function(){return Math.random().toString(36).substr(2,h)},g=s(p,0,c.length-1),b=c.map(function(e){return"string"==typeof e?(0,l.createLocation)(e,void 0,v()):(0,l.createLocation)(e,void 0,e.key||v())}),w=i.createPath,x=function(e){var n=s(E.index+e,0,E.entries.length-1),r=E.entries[n];m.confirmTransitionTo(r,"POP",t,function(e){e?y({action:"POP",location:r,index:n}):y()})},E={length:b.length,action:"POP",location:b[g],index:g,entries:b,createHref:w,push:function(e,n){(0,a.default)(!("object"===(void 0===e?"undefined":r(e))&&void 0!==e.state&&void 0!==n),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var o=(0,l.createLocation)(e,n,v(),E.location);m.confirmTransitionTo(o,"PUSH",t,function(e){if(e){var t=E.index+1,n=E.entries.slice(0);n.length>t?n.splice(t,n.length-t,o):n.push(o),y({action:"PUSH",location:o,index:t,entries:n})}})},replace:function(e,n){(0,a.default)(!("object"===(void 0===e?"undefined":r(e))&&void 0!==e.state&&void 0!==n),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var o=(0,l.createLocation)(e,n,v(),E.location);m.confirmTransitionTo(o,"REPLACE",t,function(e){e&&(E.entries[E.index]=o,y({action:"REPLACE",location:o}))})},go:x,goBack:function(){return x(-1)},goForward:function(){return x(1)},canGo:function(e){var t=E.index+e;return t>=0&&t<E.entries.length},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return m.setPrompt(e)},listen:function(e){return m.appendListener(e)}};return E}},function(e,t,n){"use strict";t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=s(n(2)),a=s(n(3)),i=n(7),l=n(4),u=s(n(6)),c=n(14);function s(e){return e&&e.__esModule?e:{default:e}}var f={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+(0,l.stripLeadingSlash)(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:l.stripLeadingSlash,decodePath:l.addLeadingSlash},slash:{encodePath:l.addLeadingSlash,decodePath:l.addLeadingSlash}},p=function(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)},d=function(e){var t=window.location.href.indexOf("#");window.location.replace(window.location.href.slice(0,t>=0?t:0)+"#"+e)};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,a.default)(c.canUseDOM,"Hash history needs a DOM");var t=window.history,n=(0,c.supportsGoWithoutReloadUsingHash)(),s=e.getUserConfirmation,h=void 0===s?c.getConfirmation:s,m=e.hashType,y=void 0===m?"slash":m,v=e.basename?(0,l.stripTrailingSlash)((0,l.addLeadingSlash)(e.basename)):"",g=f[y],b=g.encodePath,w=g.decodePath,x=function(){var e=w(p());return(0,o.default)(!v||(0,l.hasBasename)(e,v),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+e+'" to begin with "'+v+'".'),v&&(e=(0,l.stripBasename)(e,v)),(0,i.createLocation)(e)},E=(0,u.default)(),k=function(e){r(F,e),F.length=t.length,E.notifyListeners(F.location,F.action)},C=!1,_=null,T=function(){var e=p(),t=b(e);if(e!==t)d(t);else{var n=x(),r=F.location;if(!C&&(0,i.locationsAreEqual)(r,n))return;if(_===(0,l.createPath)(n))return;_=null,S(n)}},S=function(e){C?(C=!1,k()):E.confirmTransitionTo(e,"POP",h,function(t){t?k({action:"POP",location:e}):P(e)})},P=function(e){var t=F.location,n=j.lastIndexOf((0,l.createPath)(t));-1===n&&(n=0);var r=j.lastIndexOf((0,l.createPath)(e));-1===r&&(r=0);var o=n-r;o&&(C=!0,M(o))},O=p(),R=b(O);O!==R&&d(R);var N=x(),j=[(0,l.createPath)(N)],M=function(e){(0,o.default)(n,"Hash history go(n) causes a full page reload in this browser"),t.go(e)},U=0,L=function(e){1===(U+=e)?(0,c.addEventListener)(window,"hashchange",T):0===U&&(0,c.removeEventListener)(window,"hashchange",T)},I=!1,F={length:t.length,action:"POP",location:N,createHref:function(e){return"#"+b(v+(0,l.createPath)(e))},push:function(e,t){(0,o.default)(void 0===t,"Hash history cannot push state; it is ignored");var n=(0,i.createLocation)(e,void 0,void 0,F.location);E.confirmTransitionTo(n,"PUSH",h,function(e){if(e){var t=(0,l.createPath)(n),r=b(v+t);if(p()!==r){_=t,function(e){window.location.hash=e}(r);var a=j.lastIndexOf((0,l.createPath)(F.location)),i=j.slice(0,-1===a?0:a+1);i.push(t),j=i,k({action:"PUSH",location:n})}else(0,o.default)(!1,"Hash history cannot PUSH the same path; a new entry will not be added to the history stack"),k()}})},replace:function(e,t){(0,o.default)(void 0===t,"Hash history cannot replace state; it is ignored");var n=(0,i.createLocation)(e,void 0,void 0,F.location);E.confirmTransitionTo(n,"REPLACE",h,function(e){if(e){var t=(0,l.createPath)(n),r=b(v+t);p()!==r&&(_=t,d(r));var o=j.indexOf((0,l.createPath)(F.location));-1!==o&&(j[o]=t),k({action:"REPLACE",location:n})}})},go:M,goBack:function(){return M(-1)},goForward:function(){return M(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=E.setPrompt(e);return I||(L(1),I=!0),function(){return I&&(I=!1,L(-1)),t()}},listen:function(e){var t=E.appendListener(e);return L(1),function(){L(-1),t()}}};return F}},function(e,t,n){"use strict";t.__esModule=!0;var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=f(n(2)),i=f(n(3)),l=n(7),u=n(4),c=f(n(6)),s=n(14);function f(e){return e&&e.__esModule?e:{default:e}}var p=function(){try{return window.history.state||{}}catch(e){return{}}};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,i.default)(s.canUseDOM,"Browser history needs a DOM");var t=window.history,n=(0,s.supportsHistory)(),f=!(0,s.supportsPopStateOnHashChange)(),d=e.forceRefresh,h=void 0!==d&&d,m=e.getUserConfirmation,y=void 0===m?s.getConfirmation:m,v=e.keyLength,g=void 0===v?6:v,b=e.basename?(0,u.stripTrailingSlash)((0,u.addLeadingSlash)(e.basename)):"",w=function(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return(0,a.default)(!b||(0,u.hasBasename)(i,b),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+i+'" to begin with "'+b+'".'),b&&(i=(0,u.stripBasename)(i,b)),(0,l.createLocation)(i,r,n)},x=function(){return Math.random().toString(36).substr(2,g)},E=(0,c.default)(),k=function(e){o(I,e),I.length=t.length,E.notifyListeners(I.location,I.action)},C=function(e){(0,s.isExtraneousPopstateEvent)(e)||S(w(e.state))},_=function(){S(w(p()))},T=!1,S=function(e){T?(T=!1,k()):E.confirmTransitionTo(e,"POP",y,function(t){t?k({action:"POP",location:e}):P(e)})},P=function(e){var t=I.location,n=R.indexOf(t.key);-1===n&&(n=0);var r=R.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(T=!0,j(o))},O=w(p()),R=[O.key],N=function(e){return b+(0,u.createPath)(e)},j=function(e){t.go(e)},M=0,U=function(e){1===(M+=e)?((0,s.addEventListener)(window,"popstate",C),f&&(0,s.addEventListener)(window,"hashchange",_)):0===M&&((0,s.removeEventListener)(window,"popstate",C),f&&(0,s.removeEventListener)(window,"hashchange",_))},L=!1,I={length:t.length,action:"POP",location:O,createHref:N,push:function(e,o){(0,a.default)(!("object"===(void 0===e?"undefined":r(e))&&void 0!==e.state&&void 0!==o),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var i=(0,l.createLocation)(e,o,x(),I.location);E.confirmTransitionTo(i,"PUSH",y,function(e){if(e){var r=N(i),o=i.key,l=i.state;if(n)if(t.pushState({key:o,state:l},null,r),h)window.location.href=r;else{var u=R.indexOf(I.location.key),c=R.slice(0,-1===u?0:u+1);c.push(i.key),R=c,k({action:"PUSH",location:i})}else(0,a.default)(void 0===l,"Browser history cannot push state in browsers that do not support HTML5 history"),window.location.href=r}})},replace:function(e,o){(0,a.default)(!("object"===(void 0===e?"undefined":r(e))&&void 0!==e.state&&void 0!==o),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var i=(0,l.createLocation)(e,o,x(),I.location);E.confirmTransitionTo(i,"REPLACE",y,function(e){if(e){var r=N(i),o=i.key,l=i.state;if(n)if(t.replaceState({key:o,state:l},null,r),h)window.location.replace(r);else{var u=R.indexOf(I.location.key);-1!==u&&(R[u]=i.key),k({action:"REPLACE",location:i})}else(0,a.default)(void 0===l,"Browser history cannot replace state in browsers that do not support HTML5 history"),window.location.replace(r)}})},go:j,goBack:function(){return j(-1)},goForward:function(){return j(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=E.setPrompt(e);return L||(U(1),L=!0),function(){return L&&(L=!1,U(-1)),t()}},listen:function(e){var t=E.appendListener(e);return U(1),function(){U(-1),t()}}};return I}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),o=l(r),a=l(n(0)),i=n(13);function l(e){return e&&e.__esModule?e:{default:e}}class u extends r.Component{constructor(...e){var t;return t=super(...e),this.state={movie:null},this.handleBack=(e=>{e.preventDefault(),e.stopPropagation(),this.props.history.goBack()}),t}componentDidMount(){(0,i.getCharacter)(this.props.id).then(e=>this.setState({character:e}))}render(){const{character:e}=this.state;return null===e?null:o.default.createElement("article",{className:styles["character-detail"]},o.default.createElement("div",{className:"container"},o.default.createElement("a",{href:"",onClick:this.handleBack},"Back"),o.default.createElement("h2",null,e.name),o.default.createElement("img",{src:e.image}),o.default.createElement("h3",null,e.id),o.default.createElement("h3",null,e.species),o.default.createElement("ul",null,o.default.createElement("li",null,e.status),o.default.createElement("li",null,e.gender),o.default.createElement("li",null,e.origin.name),o.default.createElement("li",null,e.location.name))))}}t.default=u,u.propTypes={id:a.default.string.isRequired,history:a.default.object}},function(e,t,n){"use strict";var r=new RegExp("%[a-f0-9]{2}","gi"),o=new RegExp("(%[a-f0-9]{2})+","gi");function a(e,t){try{return decodeURIComponent(e.join(""))}catch(e){}if(1===e.length)return e;t=t||1;var n=e.slice(0,t),r=e.slice(t);return Array.prototype.concat.call([],a(n),a(r))}function i(e){try{return decodeURIComponent(e)}catch(o){for(var t=e.match(r),n=1;n<t.length;n++)t=(e=a(t,n).join("")).match(r);return e}}e.exports=function(e){if("string"!=typeof e)throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof e+"`");try{return e=e.replace(/\+/g," "),decodeURIComponent(e)}catch(t){return function(e){for(var t={"%FE%FF":"��","%FF%FE":"��"},n=o.exec(e);n;){try{t[n[0]]=decodeURIComponent(n[0])}catch(e){var r=i(n[0]);r!==n[0]&&(t[n[0]]=r)}n=o.exec(e)}t["%C2"]="�";for(var a=Object.keys(t),l=0;l<a.length;l++){var u=a[l];e=e.replace(new RegExp(u,"g"),t[u])}return e}(e)}}},function(e,t,n){"use strict";e.exports=function(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}},function(e,t,n){"use strict";var r=n(23),o=n(10),a=n(22);function i(e,t){return t.encode?t.strict?r(e):encodeURIComponent(e):e}function l(e){var t=e.indexOf("?");return-1===t?"":e.slice(t+1)}function u(e,t){var n=function(e){var t;switch(e.arrayFormat){case"index":return function(e,n,r){t=/\[(\d*)\]$/.exec(e),e=e.replace(/\[\d*\]$/,""),t?(void 0===r[e]&&(r[e]={}),r[e][t[1]]=n):r[e]=n};case"bracket":return function(e,n,r){t=/(\[\])$/.exec(e),e=e.replace(/\[\]$/,""),t?void 0!==r[e]?r[e]=[].concat(r[e],n):r[e]=[n]:r[e]=n};default:return function(e,t,n){void 0!==n[e]?n[e]=[].concat(n[e],t):n[e]=t}}}(t=o({arrayFormat:"none"},t)),r=Object.create(null);return"string"!=typeof e?r:(e=e.trim().replace(/^[?#&]/,""))?(e.split("&").forEach(function(e){var t=e.replace(/\+/g," ").split("="),o=t.shift(),i=t.length>0?t.join("="):void 0;i=void 0===i?null:a(i),n(a(o),i,r)}),Object.keys(r).sort().reduce(function(e,t){var n=r[t];return Boolean(n)&&"object"==typeof n&&!Array.isArray(n)?e[t]=function e(t){return Array.isArray(t)?t.sort():"object"==typeof t?e(Object.keys(t)).sort(function(e,t){return Number(e)-Number(t)}).map(function(e){return t[e]}):t}(n):e[t]=n,e},Object.create(null))):r}t.extract=l,t.parse=u,t.stringify=function(e,t){!1===(t=o({encode:!0,strict:!0,arrayFormat:"none"},t)).sort&&(t.sort=function(){});var n=function(e){switch(e.arrayFormat){case"index":return function(t,n,r){return null===n?[i(t,e),"[",r,"]"].join(""):[i(t,e),"[",i(r,e),"]=",i(n,e)].join("")};case"bracket":return function(t,n){return null===n?i(t,e):[i(t,e),"[]=",i(n,e)].join("")};default:return function(t,n){return null===n?i(t,e):[i(t,e),"=",i(n,e)].join("")}}}(t);return e?Object.keys(e).sort(t.sort).map(function(r){var o=e[r];if(void 0===o)return"";if(null===o)return i(r,t);if(Array.isArray(o)){var a=[];return o.slice().forEach(function(e){void 0!==e&&a.push(n(r,e,a.length))}),a.join("&")}return i(r,t)+"="+i(o,t)}).filter(function(e){return e.length>0}).join("&"):""},t.parseUrl=function(e,t){return{url:e.split("?")[0]||"",query:u(l(e),t)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),o=i(r),a=i(n(0));function i(e){return e&&e.__esModule?e:{default:e}}class l extends r.Component{constructor(...e){var t;return t=super(...e),this.state={current:this.props.searchTerm||""},this.handleChange=(({target:e})=>{this.setState({current:e.value})}),this.handleSubmit=(e=>{e.preventDefault(),this.callSearch()}),t}componentWillReceiveProps({searchTerm:e}){e!==this.state.current&&this.setState({current:e||""})}callSearch(){const{current:e}=this.state;e&&this.props.onSearch(e)}render(){const{current:e}=this.state;return o.default.createElement("form",{className:styles.search,onSubmit:this.handleSubmit},o.default.createElement("fieldset",null,o.default.createElement("label",null,"Squanch for Rick and Morty Characters: ",o.default.createElement("input",{value:e,onChange:this.handleChange,name:"search",placeholder:"Name Here"})),o.default.createElement("label",null," ",o.default.createElement("button",null,"Squanch"))))}}t.default=l,l.propTypes={searchTerm:a.default.string,onSearch:a.default.func.isRequired}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),o=l(r),a=l(n(0)),i=n(5);function l(e){return e&&e.__esModule?e:{default:e}}class u extends r.Component{render(){const{id:e,name:t,image:n}=this.props;return o.default.createElement("li",null,o.default.createElement(i.Link,{to:`/characters/${e}`},o.default.createElement("h2",null,t),o.default.createElement("img",{src:n})))}}t.default=u,u.propTypes={id:a.default.number,name:a.default.string,image:a.default.any}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(1),a=(r=o)&&r.__esModule?r:{default:r};t.default=class extends o.Component{handlePage(e){const{page:t,onPage:n}=this.props;n({page:t+e})}render(){const{totalResults:e,page:t}=this.props;if(!e)return a.default.createElement("div",null,"Squanch a name");const n=Math.ceil(e/20);return a.default.createElement("div",null,a.default.createElement("span",null,"Page ",t," of ",n)," ",a.default.createElement("button",{onClick:()=>this.handlePage(-1),disabled:1===t},"< Prev"),a.default.createElement("button",{onClick:()=>this.handlePage(1),disabled:t===n},"Next >"))}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),o=s(r),a=s(n(27)),i=(s(n(26)),n(13)),l=s(n(25)),u=s(n(0)),c=s(n(24));function s(e){return e&&e.__esModule?e:{default:e}}const f=e=>e?e.search:"";class p extends r.Component{constructor(...e){var t;return t=super(...e),this.state={name:"",error:null,characters:null,page:1},this.makeSearch=(()=>{this.setState({error:null});const{name:e,page:t}=this.state,n={search:e||"",page:t||1};this.props.history.push({search:c.default.stringify(n)})}),this.handleSearch=(e=>{this.setState({error:null,name:e,page:1},this.makeSearch)}),this.handlePage=(e=>{this.setState({error:null,page:e},this.makeSearch)}),t}componentDidMount(){this.searchFromQuery(this.props.location.search)}componentWillReceiveProps({location:e}){const t=f(e);f(this.props.location)!==t&&this.searchFromQuery(t)}searchFromQuery(e){const{search:t,page:n}=c.default.parse(e);this.setState({name:t,page:+n}),t&&(0,i.search)(t,n).then(({Search:e})=>{this.setState({characters:e})}).catch(e=>{this.setState({error:e})})}render(){const{characters:e,error:t,name:n,page:r}=this.state;return o.default.createElement("div",null,o.default.createElement(l.default,{name:n,onSearch:this.handleSearch}),t&&o.default.createElement("div",null,t),o.default.createElement(a.default,{page:r,onPage:this.handlePage}),!t&&e&&o.default.createElement(Characters,{characters:e}))}}t.default=p,p.propTypes={history:u.default.object.isRequired,location:u.default.object.isRequired}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(1),a=(r=o)&&r.__esModule?r:{default:r};t.default=class extends o.Component{render(){return a.default.createElement("div",null,"Rick and Morty Character Search")}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(1),a=(r=o)&&r.__esModule?r:{default:r},i=n(5);t.default=class extends o.Component{render(){return a.default.createElement("header",{className:styles.header},a.default.createElement("h1",null,"Go to the Movies!"),a.default.createElement("nav",null,a.default.createElement("ul",null,a.default.createElement("li",null,a.default.createElement(i.Link,{to:"/"},"Home")),a.default.createElement("li",null,a.default.createElement(i.Link,{to:"/about"},"About")),a.default.createElement("li",null,a.default.createElement(i.Link,{to:"/search"},"Search")),a.default.createElement(i.Route,{path:"/characters",render:()=>a.default.createElement("li",null,"only on characters!")}))))}}},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";var r=n(8),o=n(9),a=n(32);e.exports=function(){function e(e,t,n,r,i,l){l!==a&&o(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=r,n.PropTypes=n,n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),o=s(r),a=n(5),i=s(n(30)),l=s(n(29)),u=s(n(28)),c=s(n(21));function s(e){return e&&e.__esModule?e:{default:e}}t.default=class extends r.Component{render(){return o.default.createElement(a.BrowserRouter,null,o.default.createElement("div",null,o.default.createElement(i.default,null),o.default.createElement("main",null,o.default.createElement(a.Switch,null,o.default.createElement(a.Route,{exact:!0,path:"/",component:l.default}),o.default.createElement(a.Route,{path:"/search",component:u.default}),o.default.createElement(a.Route,{path:"/characters/:id",render:({match:e})=>o.default.createElement(c.default,{characterID:e.params.id})}),o.default.createElement(a.Redirect,{to:"/"})))))}}},function(e,t,n){"use strict";e.exports=function(e){var t=(e?e.ownerDocument||e:document).defaultView||window;return!(!e||!("function"==typeof t.Node?e instanceof t.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}},function(e,t,n){"use strict";var r=n(35);e.exports=function(e){return r(e)&&3==e.nodeType}},function(e,t,n){"use strict";var r=n(36);e.exports=function e(t,n){return!(!t||!n)&&(t===n||!r(t)&&(r(n)?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}},function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty;function o(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}e.exports=function(e,t){if(o(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(var i=0;i<n.length;i++)if(!r.call(t,n[i])||!o(e[n[i]],t[n[i]]))return!1;return!0}},function(e,t,n){"use strict";e.exports=function(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}},function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},function(e,t,n){"use strict";
/** @license React v16.4.0
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(9),o=n(1),a=n(40),i=n(10),l=n(8),u=n(39),c=n(38),s=n(37),f=n(15);function p(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,o=0;o<t;o++)n+="&args[]="+encodeURIComponent(arguments[o+1]);r(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}o||p("227");var d={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(e,t,n,r,o,a,i,l,u){(function(e,t,n,r,o,a,i,l,u){this._hasCaughtError=!1,this._caughtError=null;var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this._caughtError=e,this._hasCaughtError=!0}}).apply(d,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,a,i,l,u){if(d.invokeGuardedCallback.apply(this,arguments),d.hasCaughtError()){var c=d.clearCaughtError();d._hasRethrowError||(d._hasRethrowError=!0,d._rethrowError=c)}},rethrowCaughtError:function(){return function(){if(d._hasRethrowError){var e=d._rethrowError;throw d._rethrowError=null,d._hasRethrowError=!1,e}}.apply(d,arguments)},hasCaughtError:function(){return d._hasCaughtError},clearCaughtError:function(){if(d._hasCaughtError){var e=d._caughtError;return d._caughtError=null,d._hasCaughtError=!1,e}p("198")}};var h=null,m={};function y(){if(h)for(var e in m){var t=m[e],n=h.indexOf(e);if(-1<n||p("96",e),!g[n])for(var r in t.extractEvents||p("97",e),g[n]=t,n=t.eventTypes){var o=void 0,a=n[r],i=t,l=r;b.hasOwnProperty(l)&&p("99",l),b[l]=a;var u=a.phasedRegistrationNames;if(u){for(o in u)u.hasOwnProperty(o)&&v(u[o],i,l);o=!0}else a.registrationName?(v(a.registrationName,i,l),o=!0):o=!1;o||p("98",r,e)}}}function v(e,t,n){w[e]&&p("100",e),w[e]=t,x[e]=t.eventTypes[n].dependencies}var g=[],b={},w={},x={};function E(e){h&&p("101"),h=Array.prototype.slice.call(e),y()}function k(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&p("102",t),m[t]=r,n=!0)}n&&y()}var C={plugins:g,eventNameDispatchConfigs:b,registrationNameModules:w,registrationNameDependencies:x,possibleRegistrationNames:null,injectEventPluginOrder:E,injectEventPluginsByName:k},_=null,T=null,S=null;function P(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=S(r),d.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function O(e,t){return null==t&&p("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function R(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var N=null;function j(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)P(e,t,n[o],r[o]);else n&&P(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function M(e){return j(e,!0)}function U(e){return j(e,!1)}var L={injectEventPluginOrder:E,injectEventPluginsByName:k};function I(e,t){var n=e.stateNode;if(!n)return null;var r=_(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&p("231",t,typeof n),n)}function F(e,t){null!==e&&(N=O(N,e)),e=N,N=null,e&&(R(e,t?M:U),N&&p("95"),d.rethrowCaughtError())}function A(e,t,n,r){for(var o=null,a=0;a<g.length;a++){var i=g[a];i&&(i=i.extractEvents(e,t,n,r))&&(o=O(o,i))}F(o,!1)}var D={injection:L,getListener:I,runEventsInBatch:F,runExtractedEventsInBatch:A},z=Math.random().toString(36).slice(2),B="__reactInternalInstance$"+z,H="__reactEventHandlers$"+z;function W(e){if(e[B])return e[B];for(;!e[B];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[B]).tag||6===e.tag?e:null}function V(e){if(5===e.tag||6===e.tag)return e.stateNode;p("33")}function $(e){return e[H]||null}var q={precacheFiberNode:function(e,t){t[B]=e},getClosestInstanceFromNode:W,getInstanceFromNode:function(e){return!(e=e[B])||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:V,getFiberCurrentPropsFromNode:$,updateFiberProps:function(e,t){e[H]=t}};function Y(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function K(e,t,n){for(var r=[];e;)r.push(e),e=Y(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function Q(e,t,n){(t=I(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function G(e){e&&e.dispatchConfig.phasedRegistrationNames&&K(e._targetInst,Q,e)}function X(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;K(t=t?Y(t):null,Q,e)}}function J(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=I(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function Z(e){e&&e.dispatchConfig.registrationName&&J(e._targetInst,null,e)}function ee(e){R(e,G)}function te(e,t,n,r){if(n&&r)e:{for(var o=n,a=r,i=0,l=o;l;l=Y(l))i++;l=0;for(var u=a;u;u=Y(u))l++;for(;0<i-l;)o=Y(o),i--;for(;0<l-i;)a=Y(a),l--;for(;i--;){if(o===a||o===a.alternate)break e;o=Y(o),a=Y(a)}o=null}else o=null;for(a=o,o=[];n&&n!==a&&(null===(i=n.alternate)||i!==a);)o.push(n),n=Y(n);for(n=[];r&&r!==a&&(null===(i=r.alternate)||i!==a);)n.push(r),r=Y(r);for(r=0;r<o.length;r++)J(o[r],"bubbled",e);for(e=n.length;0<e--;)J(n[e],"captured",t)}var ne={accumulateTwoPhaseDispatches:ee,accumulateTwoPhaseDispatchesSkipTarget:function(e){R(e,X)},accumulateEnterLeaveDispatches:te,accumulateDirectDispatches:function(e){R(e,Z)}};function re(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}var oe={animationend:re("Animation","AnimationEnd"),animationiteration:re("Animation","AnimationIteration"),animationstart:re("Animation","AnimationStart"),transitionend:re("Transition","TransitionEnd")},ae={},ie={};function le(e){if(ae[e])return ae[e];if(!oe[e])return e;var t,n=oe[e];for(t in n)if(n.hasOwnProperty(t)&&t in ie)return ae[e]=n[t];return e}a.canUseDOM&&(ie=document.createElement("div").style,"AnimationEvent"in window||(delete oe.animationend.animation,delete oe.animationiteration.animation,delete oe.animationstart.animation),"TransitionEvent"in window||delete oe.transitionend.transition);var ue=le("animationend"),ce=le("animationiteration"),se=le("animationstart"),fe=le("transitionend"),pe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),de=null;function he(){return!de&&a.canUseDOM&&(de="textContent"in document.documentElement?"textContent":"innerText"),de}var me={_root:null,_startText:null,_fallbackText:null};function ye(){if(me._fallbackText)return me._fallbackText;var e,t,n=me._startText,r=n.length,o=ve(),a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return me._fallbackText=o.slice(e,1<t?1-t:void 0),me._fallbackText}function ve(){return"value"in me._root?me._root.value:me._root[he()]}var ge="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),be={type:null,target:null,currentTarget:l.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};function we(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?l.thatReturnsTrue:l.thatReturnsFalse,this.isPropagationStopped=l.thatReturnsFalse,this}function xe(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Ee(e){e instanceof this||p("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function ke(e){e.eventPool=[],e.getPooled=xe,e.release=Ee}i(we.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=l.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=l.thatReturnsTrue)},persist:function(){this.isPersistent=l.thatReturnsTrue},isPersistent:l.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<ge.length;t++)this[ge[t]]=null}}),we.Interface=be,we.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return i(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,ke(n),n},ke(we);var Ce=we.extend({data:null}),_e=we.extend({data:null}),Te=[9,13,27,32],Se=a.canUseDOM&&"CompositionEvent"in window,Pe=null;a.canUseDOM&&"documentMode"in document&&(Pe=document.documentMode);var Oe=a.canUseDOM&&"TextEvent"in window&&!Pe,Re=a.canUseDOM&&(!Se||Pe&&8<Pe&&11>=Pe),Ne=String.fromCharCode(32),je={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Me=!1;function Ue(e,t){switch(e){case"keyup":return-1!==Te.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Le(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ie=!1;var Fe={eventTypes:je,extractEvents:function(e,t,n,r){var o=void 0,a=void 0;if(Se)e:{switch(e){case"compositionstart":o=je.compositionStart;break e;case"compositionend":o=je.compositionEnd;break e;case"compositionupdate":o=je.compositionUpdate;break e}o=void 0}else Ie?Ue(e,n)&&(o=je.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=je.compositionStart);return o?(Re&&(Ie||o!==je.compositionStart?o===je.compositionEnd&&Ie&&(a=ye()):(me._root=r,me._startText=ve(),Ie=!0)),o=Ce.getPooled(o,t,n,r),a?o.data=a:null!==(a=Le(n))&&(o.data=a),ee(o),a=o):a=null,(e=Oe?function(e,t){switch(e){case"compositionend":return Le(t);case"keypress":return 32!==t.which?null:(Me=!0,Ne);case"textInput":return(e=t.data)===Ne&&Me?null:e;default:return null}}(e,n):function(e,t){if(Ie)return"compositionend"===e||!Se&&Ue(e,t)?(e=ye(),me._root=null,me._startText=null,me._fallbackText=null,Ie=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Re?null:t.data;default:return null}}(e,n))?((t=_e.getPooled(je.beforeInput,t,n,r)).data=e,ee(t)):t=null,null===a?t:null===t?a:[a,t]}},Ae=null,De={injectFiberControlledHostComponent:function(e){Ae=e}},ze=null,Be=null;function He(e){if(e=T(e)){Ae&&"function"==typeof Ae.restoreControlledState||p("194");var t=_(e.stateNode);Ae.restoreControlledState(e.stateNode,e.type,t)}}function We(e){ze?Be?Be.push(e):Be=[e]:ze=e}function Ve(){return null!==ze||null!==Be}function $e(){if(ze){var e=ze,t=Be;if(Be=ze=null,He(e),t)for(e=0;e<t.length;e++)He(t[e])}}var qe={injection:De,enqueueStateRestore:We,needsStateRestore:Ve,restoreStateIfNeeded:$e};function Ye(e,t){return e(t)}function Ke(e,t,n){return e(t,n)}function Qe(){}var Ge=!1;function Xe(e,t){if(Ge)return e(t);Ge=!0;try{return Ye(e,t)}finally{Ge=!1,Ve()&&(Qe(),$e())}}var Je={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ze(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Je[e.type]:"textarea"===t}function et(e){return(e=e.target||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function tt(e,t){return!(!a.canUseDOM||t&&!("addEventListener"in document))&&((t=(e="on"+e)in document)||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t)}function nt(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function rt(e){e._valueTracker||(e._valueTracker=function(e){var t=nt(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ot(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=nt(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var at=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,it="function"==typeof Symbol&&Symbol.for,lt=it?Symbol.for("react.element"):60103,ut=it?Symbol.for("react.portal"):60106,ct=it?Symbol.for("react.fragment"):60107,st=it?Symbol.for("react.strict_mode"):60108,ft=it?Symbol.for("react.profiler"):60114,pt=it?Symbol.for("react.provider"):60109,dt=it?Symbol.for("react.context"):60110,ht=it?Symbol.for("react.async_mode"):60111,mt=it?Symbol.for("react.forward_ref"):60112,yt=it?Symbol.for("react.timeout"):60113,vt="function"==typeof Symbol&&Symbol.iterator;function gt(e){return null===e||void 0===e?null:"function"==typeof(e=vt&&e[vt]||e["@@iterator"])?e:null}function bt(e){var t=e.type;if("function"==typeof t)return t.displayName||t.name;if("string"==typeof t)return t;switch(t){case ht:return"AsyncMode";case dt:return"Context.Consumer";case ct:return"ReactFragment";case ut:return"ReactPortal";case ft:return"Profiler("+e.pendingProps.id+")";case pt:return"Context.Provider";case st:return"StrictMode";case yt:return"Timeout"}if("object"==typeof t&&null!==t)switch(t.$$typeof){case mt:return""!==(e=t.render.displayName||t.render.name||"")?"ForwardRef("+e+")":"ForwardRef"}return null}function wt(e){var t="";do{e:switch(e.tag){case 0:case 1:case 2:case 5:var n=e._debugOwner,r=e._debugSource,o=bt(e),a=null;n&&(a=bt(n)),n=r,o="\n    in "+(o||"Unknown")+(n?" (at "+n.fileName.replace(/^.*[\\\/]/,"")+":"+n.lineNumber+")":a?" (created by "+a+")":"");break e;default:o=""}t+=o,e=e.return}while(e);return t}var xt=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Et={},kt={};function Ct(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var _t={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){_t[e]=new Ct(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];_t[t]=new Ct(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){_t[e]=new Ct(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(e){_t[e]=new Ct(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){_t[e]=new Ct(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){_t[e]=new Ct(e,3,!0,e.toLowerCase(),null)}),["capture","download"].forEach(function(e){_t[e]=new Ct(e,4,!1,e.toLowerCase(),null)}),["cols","rows","size","span"].forEach(function(e){_t[e]=new Ct(e,6,!1,e.toLowerCase(),null)}),["rowSpan","start"].forEach(function(e){_t[e]=new Ct(e,5,!1,e.toLowerCase(),null)});var Tt=/[\-:]([a-z])/g;function St(e){return e[1].toUpperCase()}function Pt(e,t,n,r){var o=_t.hasOwnProperty(t)?_t[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||void 0===t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!kt.hasOwnProperty(e)||!Et.hasOwnProperty(e)&&(xt.test(e)?kt[e]=!0:(Et[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function Ot(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Rt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Lt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Nt(e,t){null!=(t=t.checked)&&Pt(e,"checked",t,!1)}function jt(e,t){Nt(e,t);var n=Lt(t.value);null!=n&&("number"===t.type?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n)),t.hasOwnProperty("value")?Ut(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ut(e,t.type,Lt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Mt(e,t){(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue"))&&(""===e.value&&(e.value=""+e._wrapperState.initialValue),e.defaultValue=""+e._wrapperState.initialValue),""!==(t=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==t&&(e.name=t)}function Ut(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Lt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(Tt,St);_t[t]=new Ct(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(Tt,St);_t[t]=new Ct(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(Tt,St);_t[t]=new Ct(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),_t.tabIndex=new Ct("tabIndex",1,!1,"tabindex",null);var It={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ft(e,t,n){return(e=we.getPooled(It.change,e,t,n)).type="change",We(n),ee(e),e}var At=null,Dt=null;function zt(e){F(e,!1)}function Bt(e){if(ot(V(e)))return e}function Ht(e,t){if("change"===e)return t}var Wt=!1;function Vt(){At&&(At.detachEvent("onpropertychange",$t),Dt=At=null)}function $t(e){"value"===e.propertyName&&Bt(Dt)&&Xe(zt,e=Ft(Dt,e,et(e)))}function qt(e,t,n){"focus"===e?(Vt(),Dt=n,(At=t).attachEvent("onpropertychange",$t)):"blur"===e&&Vt()}function Yt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Bt(Dt)}function Kt(e,t){if("click"===e)return Bt(t)}function Qt(e,t){if("input"===e||"change"===e)return Bt(t)}a.canUseDOM&&(Wt=tt("input")&&(!document.documentMode||9<document.documentMode));var Gt={eventTypes:It,_isInputEventSupported:Wt,extractEvents:function(e,t,n,r){var o=t?V(t):window,a=void 0,i=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?a=Ht:Ze(o)?Wt?a=Qt:(a=Yt,i=qt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Kt),a&&(a=a(e,t)))return Ft(a,n,r);i&&i(e,o,t),"blur"===e&&null!=t&&(e=t._wrapperState||o._wrapperState)&&e.controlled&&"number"===o.type&&Ut(o,"number",o.value)}},Xt=we.extend({view:null,detail:null}),Jt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Zt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Jt[e])&&!!t[e]}function en(){return Zt}var tn=Xt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:en,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}}),nn=tn.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),rn={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},on={eventTypes:rn,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?W(t):null):a=null,a===t)return null;var i=void 0,l=void 0,u=void 0,c=void 0;return"mouseout"===e||"mouseover"===e?(i=tn,l=rn.mouseLeave,u=rn.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=nn,l=rn.pointerLeave,u=rn.pointerEnter,c="pointer"),e=null==a?o:V(a),o=null==t?o:V(t),(l=i.getPooled(l,a,n,r)).type=c+"leave",l.target=e,l.relatedTarget=o,(n=i.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=e,te(l,n,a,t),[l,n]}};function an(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function ln(e){2!==an(e)&&p("188")}function un(e){var t=e.alternate;if(!t)return 3===(t=an(e))&&p("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var i=o.child;i;){if(i===n)return ln(o),e;if(i===r)return ln(o),t;i=i.sibling}p("188")}if(n.return!==r.return)n=o,r=a;else{i=!1;for(var l=o.child;l;){if(l===n){i=!0,n=o,r=a;break}if(l===r){i=!0,r=o,n=a;break}l=l.sibling}if(!i){for(l=a.child;l;){if(l===n){i=!0,n=a,r=o;break}if(l===r){i=!0,r=a,n=o;break}l=l.sibling}i||p("189")}}n.alternate!==r&&p("190")}return 3!==n.tag&&p("188"),n.stateNode.current===n?e:t}function cn(e){if(!(e=un(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var sn=we.extend({animationName:null,elapsedTime:null,pseudoElement:null}),fn=we.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),pn=Xt.extend({relatedTarget:null});function dn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var hn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},mn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},yn=Xt.extend({key:function(e){if(e.key){var t=hn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=dn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?mn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:en,charCode:function(e){return"keypress"===e.type?dn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?dn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),vn=tn.extend({dataTransfer:null}),gn=Xt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:en}),bn=we.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),wn=tn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),xn=[["abort","abort"],[ue,"animationEnd"],[ce,"animationIteration"],[se,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[fe,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],En={},kn={};function Cn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},En[e]=t,kn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){Cn(e,!0)}),xn.forEach(function(e){Cn(e,!1)});var _n={eventTypes:En,isInteractiveTopLevelEventType:function(e){return void 0!==(e=kn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=kn[e];if(!o)return null;switch(e){case"keypress":if(0===dn(n))return null;case"keydown":case"keyup":e=yn;break;case"blur":case"focus":e=pn;break;case"click":if(2===n.button)return null;case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=tn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=gn;break;case ue:case ce:case se:e=sn;break;case fe:e=bn;break;case"scroll":e=Xt;break;case"wheel":e=wn;break;case"copy":case"cut":case"paste":e=fn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=nn;break;default:e=we}return ee(t=e.getPooled(o,t,n,r)),t}},Tn=_n.isInteractiveTopLevelEventType,Sn=[];function Pn(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=W(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],A(e.topLevelType,t,e.nativeEvent,et(e.nativeEvent))}var On=!0;function Rn(e){On=!!e}function Nn(e,t){if(!t)return null;var n=(Tn(e)?Mn:Un).bind(null,e);t.addEventListener(e,n,!1)}function jn(e,t){if(!t)return null;var n=(Tn(e)?Mn:Un).bind(null,e);t.addEventListener(e,n,!0)}function Mn(e,t){Ke(Un,e,t)}function Un(e,t){if(On){var n=et(t);if(null===(n=W(n))||"number"!=typeof n.tag||2===an(n)||(n=null),Sn.length){var r=Sn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Xe(Pn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Sn.length&&Sn.push(e)}}}var Ln={get _enabled(){return On},setEnabled:Rn,isEnabled:function(){return On},trapBubbledEvent:Nn,trapCapturedEvent:jn,dispatchEvent:Un},In={},Fn=0,An="_reactListenersID"+(""+Math.random()).slice(2);function Dn(e){return Object.prototype.hasOwnProperty.call(e,An)||(e[An]=Fn++,In[e[An]]={}),In[e[An]]}function zn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Bn(e,t){var n,r=zn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=zn(r)}}function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)}var Wn=a.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Vn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},$n=null,qn=null,Yn=null,Kn=!1;function Qn(e,t){if(Kn||null==$n||$n!==u())return null;var n=$n;return"selectionStart"in n&&Hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?n={anchorNode:(n=window.getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}:n=void 0,Yn&&c(Yn,n)?null:(Yn=n,(e=we.getPooled(Vn.select,qn,e,t)).type="select",e.target=$n,ee(e),e)}var Gn={eventTypes:Vn,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=Dn(a),o=x.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?V(t):window,e){case"focus":(Ze(a)||"true"===a.contentEditable)&&($n=a,qn=t,Yn=null);break;case"blur":Yn=qn=$n=null;break;case"mousedown":Kn=!0;break;case"contextmenu":case"mouseup":return Kn=!1,Qn(n,r);case"selectionchange":if(Wn)break;case"keydown":case"keyup":return Qn(n,r)}return null}};L.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),_=q.getFiberCurrentPropsFromNode,T=q.getInstanceFromNode,S=q.getNodeFromInstance,L.injectEventPluginsByName({SimpleEventPlugin:_n,EnterLeaveEventPlugin:on,ChangeEventPlugin:Gt,SelectEventPlugin:Gn,BeforeInputEventPlugin:Fe});var Xn=void 0;Xn="object"==typeof performance&&"function"==typeof performance.now?function(){return performance.now()}:function(){return Date.now()};var Jn=void 0,Zn=void 0;if(a.canUseDOM){var er=[],tr=0,nr={},rr=-1,or=!1,ar=!1,ir=0,lr=33,ur=33,cr={didTimeout:!1,timeRemaining:function(){var e=ir-Xn();return 0<e?e:0}},sr=function(e,t){if(nr[t])try{e(cr)}finally{delete nr[t]}},fr="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===fr&&(or=!1,0!==er.length)){if(0!==er.length&&(e=Xn(),!(-1===rr||rr>e))){rr=-1,cr.didTimeout=!0;for(var t=0,n=er.length;t<n;t++){var r=er[t],o=r.timeoutTime;-1!==o&&o<=e?sr(r.scheduledCallback,r.callbackId):-1!==o&&(-1===rr||o<rr)&&(rr=o)}}for(e=Xn();0<ir-e&&0<er.length;)e=er.shift(),cr.didTimeout=!1,sr(e.scheduledCallback,e.callbackId),e=Xn();0<er.length&&!ar&&(ar=!0,requestAnimationFrame(pr))}},!1);var pr=function(e){ar=!1;var t=e-ir+ur;t<ur&&lr<ur?(8>t&&(t=8),ur=t<lr?lr:t):lr=t,ir=e+ur,or||(or=!0,window.postMessage(fr,"*"))};Jn=function(e,t){var n=-1;return null!=t&&"number"==typeof t.timeout&&(n=Xn()+t.timeout),(-1===rr||-1!==n&&n<rr)&&(rr=n),t=++tr,er.push({scheduledCallback:e,callbackId:t,timeoutTime:n}),nr[t]=!0,ar||(ar=!0,requestAnimationFrame(pr)),t},Zn=function(e){delete nr[e]}}else{var dr=0,hr={};Jn=function(e){var t=dr++,n=setTimeout(function(){e({timeRemaining:function(){return 1/0},didTimeout:!1})});return hr[t]=n,t},Zn=function(e){var t=hr[e];delete hr[e],clearTimeout(t)}}function mr(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return o.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}(t.children))&&(e.children=t),e}function yr(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function vr(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function gr(e,t){return null!=t.dangerouslySetInnerHTML&&p("91"),i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function br(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&p("92"),Array.isArray(t)&&(1>=t.length||p("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function wr(e,t){var n=t.value;null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function xr(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}var Er={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function kr(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Cr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?kr(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var _r,Tr=void 0,Sr=(_r=function(e,t){if(e.namespaceURI!==Er.svg||"innerHTML"in e)e.innerHTML=t;else{for((Tr=Tr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=Tr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return _r(e,t)})}:_r);function Pr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var Or={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Rr=["Webkit","ms","Moz","O"];function Nr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,a=t[n];o=null==a||"boolean"==typeof a||""===a?"":r||"number"!=typeof a||0===a||Or.hasOwnProperty(o)&&Or[o]?(""+a).trim():a+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Or).forEach(function(e){Rr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Or[t]=Or[e]})});var jr=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Mr(e,t,n){t&&(jr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&p("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&p("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||p("61")),null!=t.style&&"object"!=typeof t.style&&p("62",n()))}function Ur(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Lr=l.thatReturns("");function Ir(e,t){var n=Dn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=x[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":jn("scroll",e);break;case"focus":case"blur":jn("focus",e),jn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":tt(o,!0)&&jn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===pe.indexOf(o)&&Nn(o,e)}n[o]=!0}}}function Fr(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===Er.html&&(r=kr(e)),r===Er.html?"script"===e?((e=n.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function Ar(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function Dr(e,t,n,r){var o=Ur(t,n);switch(t){case"iframe":case"object":Nn("load",e);var a=n;break;case"video":case"audio":for(a=0;a<pe.length;a++)Nn(pe[a],e);a=n;break;case"source":Nn("error",e),a=n;break;case"img":case"image":case"link":Nn("error",e),Nn("load",e),a=n;break;case"form":Nn("reset",e),Nn("submit",e),a=n;break;case"details":Nn("toggle",e),a=n;break;case"input":Rt(e,n),a=Ot(e,n),Nn("invalid",e),Ir(r,"onChange");break;case"option":a=mr(e,n);break;case"select":vr(e,n),a=i({},n,{value:void 0}),Nn("invalid",e),Ir(r,"onChange");break;case"textarea":br(e,n),a=gr(e,n),Nn("invalid",e),Ir(r,"onChange");break;default:a=n}Mr(t,a,Lr);var u,c=a;for(u in c)if(c.hasOwnProperty(u)){var s=c[u];"style"===u?Nr(e,s):"dangerouslySetInnerHTML"===u?null!=(s=s?s.__html:void 0)&&Sr(e,s):"children"===u?"string"==typeof s?("textarea"!==t||""!==s)&&Pr(e,s):"number"==typeof s&&Pr(e,""+s):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(w.hasOwnProperty(u)?null!=s&&Ir(r,u):null!=s&&Pt(e,u,s,o))}switch(t){case"input":rt(e),Mt(e,n);break;case"textarea":rt(e),xr(e);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,null!=(t=n.value)?yr(e,!!n.multiple,t,!1):null!=n.defaultValue&&yr(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=l)}}function zr(e,t,n,r,o){var a=null;switch(t){case"input":n=Ot(e,n),r=Ot(e,r),a=[];break;case"option":n=mr(e,n),r=mr(e,r),a=[];break;case"select":n=i({},n,{value:void 0}),r=i({},r,{value:void 0}),a=[];break;case"textarea":n=gr(e,n),r=gr(e,r),a=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=l)}Mr(t,r,Lr),t=e=void 0;var u=null;for(e in n)if(!r.hasOwnProperty(e)&&n.hasOwnProperty(e)&&null!=n[e])if("style"===e){var c=n[e];for(t in c)c.hasOwnProperty(t)&&(u||(u={}),u[t]="")}else"dangerouslySetInnerHTML"!==e&&"children"!==e&&"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&"autoFocus"!==e&&(w.hasOwnProperty(e)?a||(a=[]):(a=a||[]).push(e,null));for(e in r){var s=r[e];if(c=null!=n?n[e]:void 0,r.hasOwnProperty(e)&&s!==c&&(null!=s||null!=c))if("style"===e)if(c){for(t in c)!c.hasOwnProperty(t)||s&&s.hasOwnProperty(t)||(u||(u={}),u[t]="");for(t in s)s.hasOwnProperty(t)&&c[t]!==s[t]&&(u||(u={}),u[t]=s[t])}else u||(a||(a=[]),a.push(e,u)),u=s;else"dangerouslySetInnerHTML"===e?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(a=a||[]).push(e,""+s)):"children"===e?c===s||"string"!=typeof s&&"number"!=typeof s||(a=a||[]).push(e,""+s):"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&(w.hasOwnProperty(e)?(null!=s&&Ir(o,e),a||c===s||(a=[])):(a=a||[]).push(e,s))}return u&&(a=a||[]).push("style",u),a}function Br(e,t,n,r,o){"input"===n&&"radio"===o.type&&null!=o.name&&Nt(e,o),Ur(n,r),r=Ur(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?Nr(e,l):"dangerouslySetInnerHTML"===i?Sr(e,l):"children"===i?Pr(e,l):Pt(e,i,l,r)}switch(n){case"input":jt(e,o);break;case"textarea":wr(e,o);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?yr(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?yr(e,!!o.multiple,o.defaultValue,!0):yr(e,!!o.multiple,o.multiple?[]:"",!1))}}function Hr(e,t,n,r,o){switch(t){case"iframe":case"object":Nn("load",e);break;case"video":case"audio":for(r=0;r<pe.length;r++)Nn(pe[r],e);break;case"source":Nn("error",e);break;case"img":case"image":case"link":Nn("error",e),Nn("load",e);break;case"form":Nn("reset",e),Nn("submit",e);break;case"details":Nn("toggle",e);break;case"input":Rt(e,n),Nn("invalid",e),Ir(o,"onChange");break;case"select":vr(e,n),Nn("invalid",e),Ir(o,"onChange");break;case"textarea":br(e,n),Nn("invalid",e),Ir(o,"onChange")}for(var a in Mr(t,n,Lr),r=null,n)if(n.hasOwnProperty(a)){var i=n[a];"children"===a?"string"==typeof i?e.textContent!==i&&(r=["children",i]):"number"==typeof i&&e.textContent!==""+i&&(r=["children",""+i]):w.hasOwnProperty(a)&&null!=i&&Ir(o,a)}switch(t){case"input":rt(e),Mt(e,n);break;case"textarea":rt(e),xr(e);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=l)}return r}function Wr(e,t){return e.nodeValue!==t}var Vr={createElement:Fr,createTextNode:Ar,setInitialProperties:Dr,diffProperties:zr,updateProperties:Br,diffHydratedProperties:Hr,diffHydratedText:Wr,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(jt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=$(r);o||p("90"),ot(r),jt(r,o)}}}break;case"textarea":wr(e,n);break;case"select":null!=(t=n.value)&&yr(e,!!n.multiple,t,!1)}}},$r=null,qr=null;function Yr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Kr(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html}var Qr=Xn,Gr=Jn,Xr=Zn;function Jr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Zr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var eo=[],to=-1;function no(e){return{current:e}}function ro(e){0>to||(e.current=eo[to],eo[to]=null,to--)}function oo(e,t){eo[++to]=e.current,e.current=t}var ao=no(f),io=no(!1),lo=f;function uo(e){return so(e)?lo:ao.current}function co(e,t){var n=e.type.contextTypes;if(!n)return f;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function so(e){return 2===e.tag&&null!=e.type.childContextTypes}function fo(e){so(e)&&(ro(io),ro(ao))}function po(e){ro(io),ro(ao)}function ho(e,t,n){ao.current!==f&&p("168"),oo(ao,t),oo(io,n)}function mo(e,t){var n=e.stateNode,r=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;for(var o in n=n.getChildContext())o in r||p("108",bt(e)||"Unknown",o);return i({},t,n)}function yo(e){if(!so(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||f,lo=ao.current,oo(ao,t),oo(io,io.current),!0}function vo(e,t){var n=e.stateNode;if(n||p("169"),t){var r=mo(e,lo);n.__reactInternalMemoizedMergedChildContext=r,ro(io),ro(ao),oo(ao,r)}else ro(io);oo(io,t)}function go(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=null,this.index=0,this.ref=null,this.pendingProps=t,this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function bo(e,t,n){var r=e.alternate;return null===r?((r=new go(e.tag,t,e.key,e.mode)).type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function wo(e,t,n){var r=e.type,o=e.key;if(e=e.props,"function"==typeof r)var a=r.prototype&&r.prototype.isReactComponent?2:0;else if("string"==typeof r)a=5;else switch(r){case ct:return xo(e.children,t,n,o);case ht:a=11,t|=3;break;case st:a=11,t|=2;break;case ft:return(r=new go(15,e,o,4|t)).type=ft,r.expirationTime=n,r;case yt:a=16,t|=2;break;default:e:{switch("object"==typeof r&&null!==r?r.$$typeof:null){case pt:a=13;break e;case dt:a=12;break e;case mt:a=14;break e;default:p("130",null==r?r:typeof r,"")}a=void 0}}return(t=new go(a,e,o,t)).type=r,t.expirationTime=n,t}function xo(e,t,n,r){return(e=new go(10,e,r,t)).expirationTime=n,e}function Eo(e,t,n){return(e=new go(6,e,null,t)).expirationTime=n,e}function ko(e,t,n){return(t=new go(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Co(e,t,n){return e={current:t=new go(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:n,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null},t.stateNode=e}var _o=null,To=null;function So(e){return function(t){try{return e(t)}catch(e){}}}function Po(e){"function"==typeof _o&&_o(e)}function Oo(e){"function"==typeof To&&To(e)}var Ro=!1;function No(e){return{expirationTime:0,baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function jo(e){return{expirationTime:e.expirationTime,baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Mo(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Uo(e,t,n){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t),(0===e.expirationTime||e.expirationTime>n)&&(e.expirationTime=n)}function Lo(e,t,n){var r=e.alternate;if(null===r){var o=e.updateQueue,a=null;null===o&&(o=e.updateQueue=No(e.memoizedState))}else o=e.updateQueue,a=r.updateQueue,null===o?null===a?(o=e.updateQueue=No(e.memoizedState),a=r.updateQueue=No(r.memoizedState)):o=e.updateQueue=jo(a):null===a&&(a=r.updateQueue=jo(o));null===a||o===a?Uo(o,t,n):null===o.lastUpdate||null===a.lastUpdate?(Uo(o,t,n),Uo(a,t,n)):(Uo(o,t,n),a.lastUpdate=t)}function Io(e,t,n){var r=e.updateQueue;null===(r=null===r?e.updateQueue=No(e.memoizedState):Fo(e,r)).lastCapturedUpdate?r.firstCapturedUpdate=r.lastCapturedUpdate=t:(r.lastCapturedUpdate.next=t,r.lastCapturedUpdate=t),(0===r.expirationTime||r.expirationTime>n)&&(r.expirationTime=n)}function Fo(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=jo(t)),t}function Ao(e,t,n,r,o,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,o):e;case 3:e.effectTag=-1025&e.effectTag|64;case 0:if(null===(o="function"==typeof(e=n.payload)?e.call(a,r,o):e)||void 0===o)break;return i({},r,o);case 2:Ro=!0}return r}function Do(e,t,n,r,o){if(Ro=!1,!(0===t.expirationTime||t.expirationTime>o)){for(var a=(t=Fo(e,t)).baseState,i=null,l=0,u=t.firstUpdate,c=a;null!==u;){var s=u.expirationTime;s>o?(null===i&&(i=u,a=c),(0===l||l>s)&&(l=s)):(c=Ao(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f>o?(null===s&&(s=u,null===i&&(a=c)),(0===l||l>f)&&(l=f)):(c=Ao(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===s&&(a=c),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=s,t.expirationTime=l,e.memoizedState=c}}function zo(e,t){"function"!=typeof e&&p("191",e),e.call(t)}function Bo(e,t,n){for(null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),e=t.firstEffect,t.firstEffect=t.lastEffect=null;null!==e;){var r=e.callback;null!==r&&(e.callback=null,zo(r,n)),e=e.nextEffect}for(e=t.firstCapturedEffect,t.firstCapturedEffect=t.lastCapturedEffect=null;null!==e;)null!==(t=e.callback)&&(e.callback=null,zo(t,n)),e=e.nextEffect}function Ho(e,t){return{value:e,source:t,stack:wt(t)}}var Wo=no(null),Vo=no(null),$o=no(0);function qo(e){var t=e.type._context;oo($o,t._changedBits),oo(Vo,t._currentValue),oo(Wo,e),t._currentValue=e.pendingProps.value,t._changedBits=e.stateNode}function Yo(e){var t=$o.current,n=Vo.current;ro(Wo),ro(Vo),ro($o),(e=e.type._context)._currentValue=n,e._changedBits=t}var Ko={},Qo=no(Ko),Go=no(Ko),Xo=no(Ko);function Jo(e){return e===Ko&&p("174"),e}function Zo(e,t){oo(Xo,t),oo(Go,e),oo(Qo,Ko);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Cr(null,"");break;default:t=Cr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}ro(Qo),oo(Qo,t)}function ea(e){ro(Qo),ro(Go),ro(Xo)}function ta(e){Go.current===e&&(ro(Qo),ro(Go))}function na(e,t,n){var r=e.memoizedState;r=null===(t=t(n,r))||void 0===t?r:i({},r,t),e.memoizedState=r,null!==(e=e.updateQueue)&&0===e.expirationTime&&(e.baseState=r)}var ra={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===an(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=mi(),o=Mo(r=di(r,e));o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Lo(e,o,r),hi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=mi(),o=Mo(r=di(r,e));o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Lo(e,o,r),hi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=mi(),r=Mo(n=di(n,e));r.tag=2,void 0!==t&&null!==t&&(r.callback=t),Lo(e,r,n),hi(e,n)}};function oa(e,t,n,r,o,a){var i=e.stateNode;return e=e.type,"function"==typeof i.shouldComponentUpdate?i.shouldComponentUpdate(n,o,a):!e.prototype||!e.prototype.isPureReactComponent||(!c(t,n)||!c(r,o))}function aa(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ra.enqueueReplaceState(t,t.state,null)}function ia(e,t){var n=e.type,r=e.stateNode,o=e.pendingProps,a=uo(e);r.props=o,r.state=e.memoizedState,r.refs=f,r.context=co(e,a),null!==(a=e.updateQueue)&&(Do(e,a,o,r,t),r.state=e.memoizedState),"function"==typeof(a=e.type.getDerivedStateFromProps)&&(na(e,a,o),r.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof r.getSnapshotBeforeUpdate||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||(n=r.state,"function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),n!==r.state&&ra.enqueueReplaceState(r,r.state,null),null!==(a=e.updateQueue)&&(Do(e,a,o,r,t),r.state=e.memoizedState)),"function"==typeof r.componentDidMount&&(e.effectTag|=4)}var la=Array.isArray;function ua(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){var r=void 0;(n=n._owner)&&(2!==n.tag&&p("110"),r=n.stateNode),r||p("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs===f?r.refs={}:r.refs;null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&p("148"),n._owner||p("254",e)}return e}function ca(e,t){"textarea"!==e.type&&p("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function sa(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=bo(e,t,n)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function i(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Eo(n,e.mode,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function u(e,t,n,r){return null!==t&&t.type===n.type?((r=o(t,n.props,r)).ref=ua(e,t,n),r.return=e,r):((r=wo(n,e.mode,r)).ref=ua(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=ko(n,e.mode,r)).return=e,t):((t=o(t,n.children||[],r)).return=e,t)}function s(e,t,n,r,a){return null===t||10!==t.tag?((t=xo(n,e.mode,r,a)).return=e,t):((t=o(t,n,r)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Eo(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case lt:return(n=wo(t,e.mode,n)).ref=ua(e,null,t),n.return=e,n;case ut:return(t=ko(t,e.mode,n)).return=e,t}if(la(t)||gt(t))return(t=xo(t,e.mode,n,null)).return=e,t;ca(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case lt:return n.key===o?n.type===ct?s(e,t,n.props.children,r,o):u(e,t,n,r):null;case ut:return n.key===o?c(e,t,n,r):null}if(la(n)||gt(n))return null!==o?null:s(e,t,n,r,null);ca(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case lt:return e=e.get(null===r.key?n:r.key)||null,r.type===ct?s(t,e,r.props.children,o,r.key):u(t,e,r,o);case ut:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(la(r)||gt(r))return s(t,e=e.get(n)||null,r,o,null);ca(t,r)}return null}function m(o,i,l,u){for(var c=null,s=null,p=i,m=i=0,y=null;null!==p&&m<l.length;m++){p.index>m?(y=p,p=null):y=p.sibling;var v=d(o,p,l[m],u);if(null===v){null===p&&(p=y);break}e&&p&&null===v.alternate&&t(o,p),i=a(v,i,m),null===s?c=v:s.sibling=v,s=v,p=y}if(m===l.length)return n(o,p),c;if(null===p){for(;m<l.length;m++)(p=f(o,l[m],u))&&(i=a(p,i,m),null===s?c=p:s.sibling=p,s=p);return c}for(p=r(o,p);m<l.length;m++)(y=h(p,o,m,l[m],u))&&(e&&null!==y.alternate&&p.delete(null===y.key?m:y.key),i=a(y,i,m),null===s?c=y:s.sibling=y,s=y);return e&&p.forEach(function(e){return t(o,e)}),c}function y(o,i,l,u){var c=gt(l);"function"!=typeof c&&p("150"),null==(l=c.call(l))&&p("151");for(var s=c=null,m=i,y=i=0,v=null,g=l.next();null!==m&&!g.done;y++,g=l.next()){m.index>y?(v=m,m=null):v=m.sibling;var b=d(o,m,g.value,u);if(null===b){m||(m=v);break}e&&m&&null===b.alternate&&t(o,m),i=a(b,i,y),null===s?c=b:s.sibling=b,s=b,m=v}if(g.done)return n(o,m),c;if(null===m){for(;!g.done;y++,g=l.next())null!==(g=f(o,g.value,u))&&(i=a(g,i,y),null===s?c=g:s.sibling=g,s=g);return c}for(m=r(o,m);!g.done;y++,g=l.next())null!==(g=h(m,o,y,g.value,u))&&(e&&null!==g.alternate&&m.delete(null===g.key?y:g.key),i=a(g,i,y),null===s?c=g:s.sibling=g,s=g);return e&&m.forEach(function(e){return t(o,e)}),c}return function(e,r,a,l){"object"==typeof a&&null!==a&&a.type===ct&&null===a.key&&(a=a.props.children);var u="object"==typeof a&&null!==a;if(u)switch(a.$$typeof){case lt:e:{var c=a.key;for(u=r;null!==u;){if(u.key===c){if(10===u.tag?a.type===ct:u.type===a.type){n(e,u.sibling),(r=o(u,a.type===ct?a.props.children:a.props,l)).ref=ua(e,u,a),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}a.type===ct?((r=xo(a.props.children,e.mode,l,a.key)).return=e,e=r):((l=wo(a,e.mode,l)).ref=ua(e,r,a),l.return=e,e=l)}return i(e);case ut:e:{for(u=a.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[],l)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=ko(a,e.mode,l)).return=e,e=r}return i(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a,l)).return=e,e=r):(n(e,r),(r=Eo(a,e.mode,l)).return=e,e=r),i(e);if(la(a))return m(e,r,a,l);if(gt(a))return y(e,r,a,l);if(u&&ca(e,a),void 0===a)switch(e.tag){case 2:case 1:p("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var fa=sa(!0),pa=sa(!1),da=null,ha=null,ma=!1;function ya(e,t){var n=new go(5,null,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function va(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function ga(e){if(ma){var t=ha;if(t){var n=t;if(!va(e,t)){if(!(t=Jr(n))||!va(e,t))return e.effectTag|=2,ma=!1,void(da=e);ya(da,n)}da=e,ha=Zr(t)}else e.effectTag|=2,ma=!1,da=e}}function ba(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;da=e}function wa(e){if(e!==da)return!1;if(!ma)return ba(e),ma=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Kr(t,e.memoizedProps))for(t=ha;t;)ya(e,t),t=Jr(t);return ba(e),ha=da?Jr(e.stateNode):null,!0}function xa(){ha=da=null,ma=!1}function Ea(e,t,n){ka(e,t,n,t.expirationTime)}function ka(e,t,n,r){t.child=null===e?pa(t,null,n,r):fa(t,e.child,n,r)}function Ca(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function _a(e,t,n,r,o){Ca(e,t);var a=0!=(64&t.effectTag);if(!n&&!a)return r&&vo(t,!1),Pa(e,t);n=t.stateNode,at.current=t;var i=a?null:n.render();return t.effectTag|=1,a&&(ka(e,t,null,o),t.child=null),ka(e,t,i,o),t.memoizedState=n.state,t.memoizedProps=n.props,r&&vo(t,!0),t.child}function Ta(e){var t=e.stateNode;t.pendingContext?ho(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ho(0,t.context,!1),Zo(e,t.containerInfo)}function Sa(e,t,n,r){var o=e.child;for(null!==o&&(o.return=e);null!==o;){switch(o.tag){case 12:var a=0|o.stateNode;if(o.type===t&&0!=(a&n)){for(a=o;null!==a;){var i=a.alternate;if(0===a.expirationTime||a.expirationTime>r)a.expirationTime=r,null!==i&&(0===i.expirationTime||i.expirationTime>r)&&(i.expirationTime=r);else{if(null===i||!(0===i.expirationTime||i.expirationTime>r))break;i.expirationTime=r}a=a.return}a=null}else a=o.child;break;case 13:a=o.type===e.type?null:o.child;break;default:a=o.child}if(null!==a)a.return=o;else for(a=o;null!==a;){if(a===e){a=null;break}if(null!==(o=a.sibling)){o.return=a.return,a=o;break}a=a.return}o=a}}function Pa(e,t){if(null!==e&&t.child!==e.child&&p("153"),null!==t.child){var n=bo(e=t.child,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=bo(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Oa(e,t,n){if(0===t.expirationTime||t.expirationTime>n){switch(t.tag){case 3:Ta(t);break;case 2:yo(t);break;case 4:Zo(t,t.stateNode.containerInfo);break;case 13:qo(t)}return null}switch(t.tag){case 0:null!==e&&p("155");var r=t.type,o=t.pendingProps,a=uo(t);return r=r(o,a=co(t,a)),t.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render&&void 0===r.$$typeof?(a=t.type,t.tag=2,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,"function"==typeof(a=a.getDerivedStateFromProps)&&na(t,a,o),o=yo(t),r.updater=ra,t.stateNode=r,r._reactInternalFiber=t,ia(t,n),e=_a(e,t,!0,o,n)):(t.tag=1,Ea(e,t,r),t.memoizedProps=o,e=t.child),e;case 1:return o=t.type,n=t.pendingProps,io.current||t.memoizedProps!==n?(o=o(n,r=co(t,r=uo(t))),t.effectTag|=1,Ea(e,t,o),t.memoizedProps=n,e=t.child):e=Pa(e,t),e;case 2:if(o=yo(t),null===e)if(null===t.stateNode){var i=t.pendingProps,l=t.type;r=uo(t);var u=2===t.tag&&null!=t.type.contextTypes;i=new l(i,a=u?co(t,r):f),t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,i.updater=ra,t.stateNode=i,i._reactInternalFiber=t,u&&((u=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,u.__reactInternalMemoizedMaskedChildContext=a),ia(t,n),r=!0}else{l=t.type,r=t.stateNode,u=t.memoizedProps,a=t.pendingProps,r.props=u;var c=r.context;i=co(t,i=uo(t));var s=l.getDerivedStateFromProps;(l="function"==typeof s||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(u!==a||c!==i)&&aa(t,r,a,i),Ro=!1;var d=t.memoizedState;c=r.state=d;var h=t.updateQueue;null!==h&&(Do(t,h,a,r,n),c=t.memoizedState),u!==a||d!==c||io.current||Ro?("function"==typeof s&&(na(t,s,a),c=t.memoizedState),(u=Ro||oa(t,u,a,d,c,i))?(l||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||("function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount()),"function"==typeof r.componentDidMount&&(t.effectTag|=4)):("function"==typeof r.componentDidMount&&(t.effectTag|=4),t.memoizedProps=a,t.memoizedState=c),r.props=a,r.state=c,r.context=i,r=u):("function"==typeof r.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.type,r=t.stateNode,a=t.memoizedProps,u=t.pendingProps,r.props=a,c=r.context,i=co(t,i=uo(t)),(l="function"==typeof(s=l.getDerivedStateFromProps)||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(a!==u||c!==i)&&aa(t,r,u,i),Ro=!1,c=t.memoizedState,d=r.state=c,null!==(h=t.updateQueue)&&(Do(t,h,u,r,n),d=t.memoizedState),a!==u||c!==d||io.current||Ro?("function"==typeof s&&(na(t,s,u),d=t.memoizedState),(s=Ro||oa(t,a,u,c,d,i))?(l||"function"!=typeof r.UNSAFE_componentWillUpdate&&"function"!=typeof r.componentWillUpdate||("function"==typeof r.componentWillUpdate&&r.componentWillUpdate(u,d,i),"function"==typeof r.UNSAFE_componentWillUpdate&&r.UNSAFE_componentWillUpdate(u,d,i)),"function"==typeof r.componentDidUpdate&&(t.effectTag|=4),"function"==typeof r.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof r.componentDidUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),t.memoizedProps=u,t.memoizedState=d),r.props=u,r.state=d,r.context=i,r=s):("function"!=typeof r.componentDidUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),r=!1);return _a(e,t,r,o,n);case 3:return Ta(t),null!==(o=t.updateQueue)?(r=null!==(r=t.memoizedState)?r.element:null,Do(t,o,t.pendingProps,null,n),(o=t.memoizedState.element)===r?(xa(),e=Pa(e,t)):(r=t.stateNode,(r=(null===e||null===e.child)&&r.hydrate)&&(ha=Zr(t.stateNode.containerInfo),da=t,r=ma=!0),r?(t.effectTag|=2,t.child=pa(t,null,o,n)):(xa(),Ea(e,t,o)),e=t.child)):(xa(),e=Pa(e,t)),e;case 5:return Jo(Xo.current),(o=Jo(Qo.current))!==(r=Cr(o,t.type))&&(oo(Go,t),oo(Qo,r)),null===e&&ga(t),o=t.type,u=t.memoizedProps,r=t.pendingProps,a=null!==e?e.memoizedProps:null,io.current||u!==r||((u=1&t.mode&&!!r.hidden)&&(t.expirationTime=1073741823),u&&1073741823===n)?(u=r.children,Kr(o,r)?u=null:a&&Kr(o,a)&&(t.effectTag|=16),Ca(e,t),1073741823!==n&&1&t.mode&&r.hidden?(t.expirationTime=1073741823,t.memoizedProps=r,e=null):(Ea(e,t,u),t.memoizedProps=r,e=t.child)):e=Pa(e,t),e;case 6:return null===e&&ga(t),t.memoizedProps=t.pendingProps,null;case 16:return null;case 4:return Zo(t,t.stateNode.containerInfo),o=t.pendingProps,io.current||t.memoizedProps!==o?(null===e?t.child=fa(t,null,o,n):Ea(e,t,o),t.memoizedProps=o,e=t.child):e=Pa(e,t),e;case 14:return o=t.type.render,n=t.pendingProps,r=t.ref,io.current||t.memoizedProps!==n||r!==(null!==e?e.ref:null)?(Ea(e,t,o=o(n,r)),t.memoizedProps=n,e=t.child):e=Pa(e,t),e;case 10:return n=t.pendingProps,io.current||t.memoizedProps!==n?(Ea(e,t,n),t.memoizedProps=n,e=t.child):e=Pa(e,t),e;case 11:return n=t.pendingProps.children,io.current||null!==n&&t.memoizedProps!==n?(Ea(e,t,n),t.memoizedProps=n,e=t.child):e=Pa(e,t),e;case 15:return n=t.pendingProps,t.memoizedProps===n?e=Pa(e,t):(Ea(e,t,n.children),t.memoizedProps=n,e=t.child),e;case 13:return function(e,t,n){var r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=!0;if(io.current)i=!1;else if(a===o)return t.stateNode=0,qo(t),Pa(e,t);var l=o.value;if(t.memoizedProps=o,null===a)l=1073741823;else if(a.value===o.value){if(a.children===o.children&&i)return t.stateNode=0,qo(t),Pa(e,t);l=0}else{var u=a.value;if(u===l&&(0!==u||1/u==1/l)||u!=u&&l!=l){if(a.children===o.children&&i)return t.stateNode=0,qo(t),Pa(e,t);l=0}else if(l="function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,l):1073741823,0==(l|=0)){if(a.children===o.children&&i)return t.stateNode=0,qo(t),Pa(e,t)}else Sa(t,r,l,n)}return t.stateNode=l,qo(t),Ea(e,t,o.children),t.child}(e,t,n);case 12:e:if(r=t.type,a=t.pendingProps,u=t.memoizedProps,o=r._currentValue,i=r._changedBits,io.current||0!==i||u!==a){if(t.memoizedProps=a,void 0!==(l=a.unstable_observedBits)&&null!==l||(l=1073741823),t.stateNode=l,0!=(i&l))Sa(t,r,i,n);else if(u===a){e=Pa(e,t);break e}n=(n=a.children)(o),t.effectTag|=1,Ea(e,t,n),e=t.child}else e=Pa(e,t);return e;default:p("156")}}function Ra(e){e.effectTag|=4}var Na=void 0,ja=void 0,Ma=void 0;function Ua(e,t){var n=t.pendingProps;switch(t.tag){case 1:return null;case 2:return fo(t),null;case 3:ea(),po();var r=t.stateNode;return r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(wa(t),t.effectTag&=-3),Na(t),null;case 5:ta(t),r=Jo(Xo.current);var o=t.type;if(null!==e&&null!=t.stateNode){var a=e.memoizedProps,i=t.stateNode,l=Jo(Qo.current);i=zr(i,o,a,n,r),ja(e,t,i,o,a,n,r,l),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!n)return null===t.stateNode&&p("166"),null;if(e=Jo(Qo.current),wa(t))n=t.stateNode,o=t.type,a=t.memoizedProps,n[B]=t,n[H]=a,r=Hr(n,o,a,e,r),t.updateQueue=r,null!==r&&Ra(t);else{(e=Fr(o,n,r,e))[B]=t,e[H]=n;e:for(a=t.child;null!==a;){if(5===a.tag||6===a.tag)e.appendChild(a.stateNode);else if(4!==a.tag&&null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}Dr(e,o,n,r),Yr(o,n)&&Ra(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Ma(e,t,e.memoizedProps,n);else{if("string"!=typeof n)return null===t.stateNode&&p("166"),null;r=Jo(Xo.current),Jo(Qo.current),wa(t)?(r=t.stateNode,n=t.memoizedProps,r[B]=t,Wr(r,n)&&Ra(t)):((r=Ar(n,r))[B]=t,t.stateNode=r)}return null;case 14:case 16:case 10:case 11:case 15:return null;case 4:return ea(),Na(t),null;case 13:return Yo(t),null;case 12:return null;case 0:p("167");default:p("156")}}function La(e,t){var n=t.source;null===t.stack&&null!==n&&wt(n),null!==n&&bt(n),t=t.value,null!==e&&2===e.tag&&bt(e);try{t&&t.suppressReactErrorLogging||console.error(t)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}}function Ia(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){fi(e,t)}else t.current=null}function Fa(e){switch(Oo(e),e.tag){case 2:Ia(e);var t=e.stateNode;if("function"==typeof t.componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){fi(e,t)}break;case 5:Ia(e);break;case 4:za(e)}}function Aa(e){return 5===e.tag||3===e.tag||4===e.tag}function Da(e){e:{for(var t=e.return;null!==t;){if(Aa(t)){var n=t;break e}t=t.return}p("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:p("161")}16&n.effectTag&&(Pr(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||Aa(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var a=t,i=o.stateNode,l=n;8===a.nodeType?a.parentNode.insertBefore(i,l):a.insertBefore(i,l)}else t.insertBefore(o.stateNode,n);else r?(a=t,i=o.stateNode,8===a.nodeType?a.parentNode.insertBefore(i,a):a.appendChild(i)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function za(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&p("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,i=a;;)if(Fa(i),null!==i.child&&4!==i.tag)i.child.return=i,i=i.child;else{if(i===a)break;for(;null===i.sibling;){if(null===i.return||i.return===a)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}o?(a=r,i=t.stateNode,8===a.nodeType?a.parentNode.removeChild(i):a.removeChild(i)):r.removeChild(t.stateNode)}else if(4===t.tag?r=t.stateNode.containerInfo:Fa(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Ba(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&(n[H]=r,Br(n,a,o,e,r))}break;case 6:null===t.stateNode&&p("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 15:case 16:break;default:p("163")}}function Ha(e,t,n){(n=Mo(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ki(r),La(e,t)},n}function Wa(e,t,n){(n=Mo(n)).tag=3;var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(n.callback=function(){null===ii?ii=new Set([this]):ii.add(this);var n=t.value,r=t.stack;La(e,t),this.componentDidCatch(n,{componentStack:null!==r?r:""})}),n}function Va(e,t,n,r,o,a){n.effectTag|=512,n.firstEffect=n.lastEffect=null,r=Ho(r,n),e=t;do{switch(e.tag){case 3:return e.effectTag|=1024,void Io(e,r=Ha(e,r,a),a);case 2:if(t=r,n=e.stateNode,0==(64&e.effectTag)&&null!==n&&"function"==typeof n.componentDidCatch&&(null===ii||!ii.has(n)))return e.effectTag|=1024,void Io(e,r=Wa(e,t,a),a)}e=e.return}while(null!==e)}function $a(e){switch(e.tag){case 2:fo(e);var t=e.effectTag;return 1024&t?(e.effectTag=-1025&t|64,e):null;case 3:return ea(),po(),1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 5:return ta(e),null;case 16:return 1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 4:return ea(),null;case 13:return Yo(e),null;default:return null}}Na=function(){},ja=function(e,t,n){(t.updateQueue=n)&&Ra(t)},Ma=function(e,t,n,r){n!==r&&Ra(t)};var qa=Qr(),Ya=2,Ka=qa,Qa=0,Ga=0,Xa=!1,Ja=null,Za=null,ei=0,ti=-1,ni=!1,ri=null,oi=!1,ai=!1,ii=null;function li(){if(null!==Ja)for(var e=Ja.return;null!==e;){var t=e;switch(t.tag){case 2:fo(t);break;case 3:ea(),po();break;case 5:ta(t);break;case 4:ea();break;case 13:Yo(t)}e=e.return}Za=null,ei=0,ti=-1,ni=!1,Ja=null,ai=!1}function ui(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(512&e.effectTag)){t=Ua(t,e);var o=e;if(1073741823===ei||1073741823!==o.expirationTime){var a=0;switch(o.tag){case 3:case 2:var i=o.updateQueue;null!==i&&(a=i.expirationTime)}for(i=o.child;null!==i;)0!==i.expirationTime&&(0===a||a>i.expirationTime)&&(a=i.expirationTime),i=i.sibling;o.expirationTime=a}if(null!==t)return t;if(null!==n&&0==(512&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){ai=!0;break}e=n}else{if(null!==(e=$a(e)))return e.effectTag&=511,e;if(null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=512),null!==r)return r;if(null===n)break;e=n}}return null}function ci(e){var t=Oa(e.alternate,e,ei);return null===t&&(t=ui(e)),at.current=null,t}function si(e,t,n){Xa&&p("243"),Xa=!0,t===ei&&e===Za&&null!==Ja||(li(),ei=t,ti=-1,Ja=bo((Za=e).current,null,ei),e.pendingCommitExpirationTime=0);var r=!1;for(ni=!n||ei<=Ya;;){try{if(n)for(;null!==Ja&&!Yi();)Ja=ci(Ja);else for(;null!==Ja;)Ja=ci(Ja)}catch(t){if(null===Ja)r=!0,Ki(t);else{null===Ja&&p("271");var o=(n=Ja).return;if(null===o){r=!0,Ki(t);break}Va(e,o,n,t,0,ei),Ja=ui(n)}}break}if(Xa=!1,r)return null;if(null===Ja){if(ai)return e.pendingCommitExpirationTime=t,e.current.alternate;ni&&p("262"),0<=ti&&setTimeout(function(){var t=e.current.expirationTime;0!==t&&(0===e.remainingExpirationTime||e.remainingExpirationTime<t)&&Ai(e,t)},ti),function(e){null===ki&&p("246"),ki.remainingExpirationTime=e}(e.current.expirationTime)}return null}function fi(e,t){var n;e:{for(Xa&&!oi&&p("263"),n=e.return;null!==n;){switch(n.tag){case 2:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromCatch||"function"==typeof r.componentDidCatch&&(null===ii||!ii.has(r))){Lo(n,e=Wa(n,e=Ho(t,e),1),1),hi(n,1),n=void 0;break e}break;case 3:Lo(n,e=Ha(n,e=Ho(t,e),1),1),hi(n,1),n=void 0;break e}n=n.return}3===e.tag&&(Lo(e,n=Ha(e,n=Ho(t,e),1),1),hi(e,1)),n=void 0}return n}function pi(){var e=2+25*(1+((mi()-2+500)/25|0));return e<=Qa&&(e=Qa+1),Qa=e}function di(e,t){return e=0!==Ga?Ga:Xa?oi?1:ei:1&t.mode?ji?2+10*(1+((e-2+15)/10|0)):2+25*(1+((e-2+500)/25|0)):1,ji&&(0===_i||e>_i)&&(_i=e),e}function hi(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!Xa&&0!==ei&&t<ei&&li();var r=n.current.expirationTime;Xa&&!oi&&Za===n||Ai(n,r),Li>Ui&&p("185")}e=e.return}}function mi(){return Ka=Qr()-qa,Ya=2+(Ka/10|0)}function yi(e){var t=Ga;Ga=2+25*(1+((mi()-2+500)/25|0));try{return e()}finally{Ga=t}}function vi(e,t,n,r,o){var a=Ga;Ga=1;try{return e(t,n,r,o)}finally{Ga=a}}var gi=null,bi=null,wi=0,xi=-1,Ei=!1,ki=null,Ci=0,_i=0,Ti=!1,Si=!1,Pi=null,Oi=null,Ri=!1,Ni=!1,ji=!1,Mi=null,Ui=1e3,Li=0,Ii=1;function Fi(e){if(0!==wi){if(e>wi)return;Xr(xi)}var t=Qr()-qa;wi=e,xi=Gr(zi,{timeout:10*(e-2)-t})}function Ai(e,t){if(null===e.nextScheduledRoot)e.remainingExpirationTime=t,null===bi?(gi=bi=e,e.nextScheduledRoot=e):(bi=bi.nextScheduledRoot=e).nextScheduledRoot=gi;else{var n=e.remainingExpirationTime;(0===n||t<n)&&(e.remainingExpirationTime=t)}Ei||(Ri?Ni&&(ki=e,Ci=1,$i(e,1,!1)):1===t?Bi():Fi(t))}function Di(){var e=0,t=null;if(null!==bi)for(var n=bi,r=gi;null!==r;){var o=r.remainingExpirationTime;if(0===o){if((null===n||null===bi)&&p("244"),r===r.nextScheduledRoot){gi=bi=r.nextScheduledRoot=null;break}if(r===gi)gi=o=r.nextScheduledRoot,bi.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===bi){(bi=n).nextScheduledRoot=gi,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===bi)break;n=r,r=r.nextScheduledRoot}}null!==(n=ki)&&n===t&&1===e?Li++:Li=0,ki=t,Ci=e}function zi(e){Hi(0,!0,e)}function Bi(){Hi(1,!1,null)}function Hi(e,t,n){if(Oi=n,Di(),t)for(;null!==ki&&0!==Ci&&(0===e||e>=Ci)&&(!Ti||mi()>=Ci);)mi(),$i(ki,Ci,!Ti),Di();else for(;null!==ki&&0!==Ci&&(0===e||e>=Ci);)$i(ki,Ci,!1),Di();null!==Oi&&(wi=0,xi=-1),0!==Ci&&Fi(Ci),Oi=null,Ti=!1,Vi()}function Wi(e,t){Ei&&p("253"),ki=e,Ci=t,$i(e,t,!1),Bi(),Vi()}function Vi(){if(Li=0,null!==Mi){var e=Mi;Mi=null;for(var t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){Si||(Si=!0,Pi=e)}}}if(Si)throw e=Pi,Pi=null,Si=!1,e}function $i(e,t,n){Ei&&p("245"),Ei=!0,n?null!==(n=e.finishedWork)?qi(e,n,t):(e.finishedWork=null,null!==(n=si(e,t,!0))&&(Yi()?e.finishedWork=n:qi(e,n,t))):null!==(n=e.finishedWork)?qi(e,n,t):(e.finishedWork=null,null!==(n=si(e,t,!1))&&qi(e,n,t)),Ei=!1}function qi(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime<=n&&(null===Mi?Mi=[r]:Mi.push(r),r._defer))return e.finishedWork=t,void(e.remainingExpirationTime=0);if(e.finishedWork=null,oi=Xa=!0,(n=t.stateNode).current===t&&p("177"),0===(r=n.pendingCommitExpirationTime)&&p("261"),n.pendingCommitExpirationTime=0,mi(),at.current=null,1<t.effectTag)if(null!==t.lastEffect){t.lastEffect.nextEffect=t;var o=t.firstEffect}else o=t;else o=t.firstEffect;$r=On;var a=u();if(Hn(a)){if("selectionStart"in a)var i={start:a.selectionStart,end:a.selectionEnd};else e:{var l=window.getSelection&&window.getSelection();if(l&&0!==l.rangeCount){i=l.anchorNode;var c=l.anchorOffset,f=l.focusNode;l=l.focusOffset;try{i.nodeType,f.nodeType}catch(e){i=null;break e}var d=0,h=-1,m=-1,y=0,v=0,g=a,b=null;t:for(;;){for(var w;g!==i||0!==c&&3!==g.nodeType||(h=d+c),g!==f||0!==l&&3!==g.nodeType||(m=d+l),3===g.nodeType&&(d+=g.nodeValue.length),null!==(w=g.firstChild);)b=g,g=w;for(;;){if(g===a)break t;if(b===i&&++y===c&&(h=d),b===f&&++v===l&&(m=d),null!==(w=g.nextSibling))break;b=(g=b).parentNode}g=w}i=-1===h||-1===m?null:{start:h,end:m}}else i=null}i=i||{start:0,end:0}}else i=null;for(qr={focusedElem:a,selectionRange:i},Rn(!1),ri=o;null!==ri;){a=!1,i=void 0;try{for(;null!==ri;){if(256&ri.effectTag){var x=ri.alternate;switch((c=ri).tag){case 2:if(256&c.effectTag&&null!==x){var E=x.memoizedProps,k=x.memoizedState,C=c.stateNode;C.props=c.memoizedProps,C.state=c.memoizedState;var _=C.getSnapshotBeforeUpdate(E,k);C.__reactInternalSnapshotBeforeUpdate=_}break;case 3:case 5:case 6:case 4:break;default:p("163")}}ri=ri.nextEffect}}catch(e){a=!0,i=e}a&&(null===ri&&p("178"),fi(ri,i),null!==ri&&(ri=ri.nextEffect))}for(ri=o;null!==ri;){x=!1,E=void 0;try{for(;null!==ri;){var T=ri.effectTag;if(16&T&&Pr(ri.stateNode,""),128&T){var S=ri.alternate;if(null!==S){var P=S.ref;null!==P&&("function"==typeof P?P(null):P.current=null)}}switch(14&T){case 2:Da(ri),ri.effectTag&=-3;break;case 6:Da(ri),ri.effectTag&=-3,Ba(ri.alternate,ri);break;case 4:Ba(ri.alternate,ri);break;case 8:za(k=ri),k.return=null,k.child=null,k.alternate&&(k.alternate.child=null,k.alternate.return=null)}ri=ri.nextEffect}}catch(e){x=!0,E=e}x&&(null===ri&&p("178"),fi(ri,E),null!==ri&&(ri=ri.nextEffect))}if(P=qr,S=u(),T=P.focusedElem,x=P.selectionRange,S!==T&&s(document.documentElement,T)){Hn(T)&&(S=x.start,void 0===(P=x.end)&&(P=S),"selectionStart"in T?(T.selectionStart=S,T.selectionEnd=Math.min(P,T.value.length)):window.getSelection&&(S=window.getSelection(),E=T[he()].length,P=Math.min(x.start,E),x=void 0===x.end?P:Math.min(x.end,E),!S.extend&&P>x&&(E=x,x=P,P=E),E=Bn(T,P),k=Bn(T,x),E&&k&&(1!==S.rangeCount||S.anchorNode!==E.node||S.anchorOffset!==E.offset||S.focusNode!==k.node||S.focusOffset!==k.offset)&&((C=document.createRange()).setStart(E.node,E.offset),S.removeAllRanges(),P>x?(S.addRange(C),S.extend(k.node,k.offset)):(C.setEnd(k.node,k.offset),S.addRange(C))))),S=[];for(P=T;P=P.parentNode;)1===P.nodeType&&S.push({element:P,left:P.scrollLeft,top:P.scrollTop});for(T.focus(),T=0;T<S.length;T++)(P=S[T]).element.scrollLeft=P.left,P.element.scrollTop=P.top}for(qr=null,Rn($r),$r=null,n.current=t,ri=o;null!==ri;){o=!1,T=void 0;try{for(S=r;null!==ri;){var O=ri.effectTag;if(36&O){var R=ri.alternate;switch(x=S,(P=ri).tag){case 2:var N=P.stateNode;if(4&P.effectTag)if(null===R)N.props=P.memoizedProps,N.state=P.memoizedState,N.componentDidMount();else{var j=R.memoizedProps,M=R.memoizedState;N.props=P.memoizedProps,N.state=P.memoizedState,N.componentDidUpdate(j,M,N.__reactInternalSnapshotBeforeUpdate)}var U=P.updateQueue;null!==U&&(N.props=P.memoizedProps,N.state=P.memoizedState,Bo(P,U,N));break;case 3:var L=P.updateQueue;if(null!==L){if(E=null,null!==P.child)switch(P.child.tag){case 5:E=P.child.stateNode;break;case 2:E=P.child.stateNode}Bo(P,L,E)}break;case 5:var I=P.stateNode;null===R&&4&P.effectTag&&Yr(P.type,P.memoizedProps)&&I.focus();break;case 6:case 4:case 15:case 16:break;default:p("163")}}if(128&O){P=void 0;var F=ri.ref;if(null!==F){var A=ri.stateNode;switch(ri.tag){case 5:P=A;break;default:P=A}"function"==typeof F?F(P):F.current=P}}var D=ri.nextEffect;ri.nextEffect=null,ri=D}}catch(e){o=!0,T=e}o&&(null===ri&&p("178"),fi(ri,T),null!==ri&&(ri=ri.nextEffect))}Xa=oi=!1,Po(t.stateNode),0===(t=n.current.expirationTime)&&(ii=null),e.remainingExpirationTime=t}function Yi(){return!(null===Oi||Oi.timeRemaining()>Ii)&&(Ti=!0)}function Ki(e){null===ki&&p("246"),ki.remainingExpirationTime=0,Si||(Si=!0,Pi=e)}function Qi(e,t){var n=Ri;Ri=!0;try{return e(t)}finally{(Ri=n)||Ei||Bi()}}function Gi(e,t){if(Ri&&!Ni){Ni=!0;try{return e(t)}finally{Ni=!1}}return e(t)}function Xi(e,t){Ei&&p("187");var n=Ri;Ri=!0;try{return vi(e,t)}finally{Ri=n,Bi()}}function Ji(e){var t=Ri;Ri=!0;try{vi(e)}finally{(Ri=t)||Ei||Hi(1,!1,null)}}function Zi(e,t,n,r,o){var a=t.current;if(n){var i;n=n._reactInternalFiber;e:{for(2===an(n)&&2===n.tag||p("170"),i=n;3!==i.tag;){if(so(i)){i=i.stateNode.__reactInternalMemoizedMergedChildContext;break e}(i=i.return)||p("171")}i=i.stateNode.context}n=so(n)?mo(n,i):i}else n=f;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Mo(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Lo(a,o,r),hi(a,r),r}function el(e){var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?p("188"):p("268",Object.keys(e))),null===(e=cn(t))?null:e.stateNode}function tl(e,t,n,r){var o=t.current;return Zi(e,t,n,o=di(mi(),o),r)}function nl(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function rl(e){var t=e.findFiberByHostInstance;return function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);_o=So(function(e){return t.onCommitFiberRoot(n,e)}),To=So(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}(i({},e,{findHostInstanceByFiber:function(e){return null===(e=cn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}var ol=Qi,al=function(e,t,n){if(ji)return e(t,n);Ri||Ei||0===_i||(Hi(_i,!1,null),_i=0);var r=ji,o=Ri;Ri=ji=!0;try{return e(t,n)}finally{ji=r,(Ri=o)||Ei||Bi()}},il=function(){Ei||0===_i||(Hi(_i,!1,null),_i=0)};function ll(e){this._expirationTime=pi(),this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function ul(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function cl(e,t,n){this._internalRoot=Co(e,t,n)}function sl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function fl(e,t,n,r,o){sl(n)||p("200");var a=n._reactRootContainer;if(a){if("function"==typeof o){var i=o;o=function(){var e=nl(a._internalRoot);i.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new cl(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=nl(a._internalRoot);l.call(e)}}Gi(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return nl(a._internalRoot)}function pl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return sl(t)||p("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ut,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}De.injectFiberControlledHostComponent(Vr),ll.prototype.render=function(e){this._defer||p("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new ul;return Zi(e,t,null,n,r._onCommit),r},ll.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},ll.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||p("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&p("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Wi(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},ll.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},ul.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},ul.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&p("191",n),n()}}},cl.prototype.render=function(e,t){var n=this._internalRoot,r=new ul;return null!==(t=void 0===t?null:t)&&r.then(t),tl(e,n,null,r._onCommit),r},cl.prototype.unmount=function(e){var t=this._internalRoot,n=new ul;return null!==(e=void 0===e?null:e)&&n.then(e),tl(null,t,null,n._onCommit),n},cl.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new ul;return null!==(n=void 0===n?null:n)&&o.then(n),tl(t,r,e,o._onCommit),o},cl.prototype.createBatch=function(){var e=new ll(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime<=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ye=ol,Ke=al,Qe=il;var dl={createPortal:pl,findDOMNode:function(e){return null==e?null:1===e.nodeType?e:el(e)},hydrate:function(e,t,n){return fl(null,e,t,!0,n)},render:function(e,t,n){return fl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&p("38"),fl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return sl(e)||p("40"),!!e._reactRootContainer&&(Gi(function(){fl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return pl.apply(void 0,arguments)},unstable_batchedUpdates:Qi,unstable_deferredUpdates:yi,flushSync:Xi,unstable_flushControlled:Ji,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:D,EventPluginRegistry:C,EventPropagators:ne,ReactControlledComponent:qe,ReactDOMComponentTree:q,ReactDOMEventListener:Ln},unstable_createRoot:function(e,t){return new cl(e,!0,null!=t&&!0===t.hydrate)}};rl({findFiberByHostInstance:W,bundleType:0,version:"16.4.0",rendererPackageName:"react-dom"});var hl={default:dl},ml=hl&&dl||hl;e.exports=ml.default?ml.default:ml},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(41)},function(e,t,n){"use strict";
/** @license React v16.4.0
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(10),o=n(9),a=n(15),i=n(8),l="function"==typeof Symbol&&Symbol.for,u=l?Symbol.for("react.element"):60103,c=l?Symbol.for("react.portal"):60106,s=l?Symbol.for("react.fragment"):60107,f=l?Symbol.for("react.strict_mode"):60108,p=l?Symbol.for("react.profiler"):60114,d=l?Symbol.for("react.provider"):60109,h=l?Symbol.for("react.context"):60110,m=l?Symbol.for("react.async_mode"):60111,y=l?Symbol.for("react.forward_ref"):60112;l&&Symbol.for("react.timeout");var v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);o(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function w(e,t,n){this.props=e,this.context=t,this.refs=a,this.updater=n||b}function x(){}function E(e,t,n){this.props=e,this.context=t,this.refs=a,this.updater=n||b}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=w.prototype;var k=E.prototype=new x;k.constructor=E,r(k,w.prototype),k.isPureReactComponent=!0;var C={current:null},_=Object.prototype.hasOwnProperty,T={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r=void 0,o={},a=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(a=""+t.key),t)_.call(t,r)&&!T.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var c=Array(l),s=0;s<l;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:u,type:e,key:a,ref:i,props:o,_owner:C.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===u}var O=/\/+/g,R=[];function N(e,t,n,r){if(R.length){var o=R.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function j(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>R.length&&R.push(e)}function M(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case u:case c:a=!0}}if(a)return n(r,e,""===t?"."+U(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var i=0;i<e.length;i++){var l=t+U(o=e[i],i);a+=M(o,l,n,r)}else if(null===e||void 0===e?l=null:l="function"==typeof(l=v&&e[v]||e["@@iterator"])?l:null,"function"==typeof l)for(e=l.call(e),i=0;!(o=e.next()).done;)a+=M(o=o.value,l=t+U(o,i++),n,r);else"object"===o&&g("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return a}function U(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function I(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,i.thatReturnsArgument):null!=e&&(P(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n,e={$$typeof:u,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function F(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(O,"$&/")+"/"),t=N(t,a,r,o),null==e||M(e,"",I,t),j(t)}var A={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=N(null,null,t,n),null==e||M(e,"",L,t),j(t)},count:function(e){return null==e?0:M(e,"",i.thatReturnsNull,null)},toArray:function(e){var t=[];return F(e,t,null,i.thatReturnsArgument),t},only:function(e){return P(e)||g("143"),e}},createRef:function(){return{current:null}},Component:w,PureComponent:E,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:h,_calculateChangedBits:t,_defaultValue:e,_currentValue:e,_currentValue2:e,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null}).Provider={$$typeof:d,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:y,render:e}},Fragment:s,StrictMode:f,unstable_AsyncMode:m,unstable_Profiler:p,createElement:S,cloneElement:function(e,t,n){(null===e||void 0===e)&&g("267",e);var o=void 0,a=r({},e.props),i=e.key,l=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,c=C.current),void 0!==t.key&&(i=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)_.call(t,o)&&!T.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:u,type:e.type,key:i,ref:l,props:a,_owner:c}},createFactory:function(e){var t=S.bind(null,e);return t.type=e,t},isValidElement:P,version:"16.4.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:C,assign:r}},D={default:A},z=D&&A||D;e.exports=z.default?z.default:z},function(e,t,n){"use strict";var r=i(n(1)),o=i(n(42)),a=i(n(34));function i(e){return e&&e.__esModule?e:{default:e}}o.default.render(r.default.createElement(a.default,null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy93YXJuaW5nL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L1BhdGhVdGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1JvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Sb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvQnJvd3NlclJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9IYXNoUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL0xpbmsuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9NZW1vcnlSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvTWVtb3J5Um91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvbWF0Y2hQYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvUm91dGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUm91dGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvTmF2TGluay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1Byb21wdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Qcm9tcHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvTG9jYXRpb25VdGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9QYXRoVXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvRE9NVXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlQnJvd3Nlckhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlSGFzaEhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlTWVtb3J5SGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1JlZGlyZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1JlZGlyZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvU3RhdGljUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1N0YXRpY1JvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1N3aXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Td2l0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvbWF0Y2hQYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvd2l0aFJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy93aXRoUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L0xvY2F0aW9uVXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5RnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ludmFyaWFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmFsdWUtZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZpY2VzL3JpY2tBbmRNb3J0eUFwaS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9ET01VdGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlPYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2NyZWF0ZU1lbW9yeUhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvY3JlYXRlSGFzaEhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvY3JlYXRlQnJvd3Nlckhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvY2hhcmFjdGVycy9DaGFyYWN0ZXJEZXRhaWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlY29kZS11cmktY29tcG9uZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHJpY3QtdXJpLWVuY29kZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXVlcnktc3RyaW5nL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3NlYXJjaC9TZWFyY2hGb3JtLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2NoYXJhY3RlcnMvQ2hhcmFjdGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3BhZ2luZy9QYWdpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvc2VhcmNoL1NlYXJjaC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9hcHAvSG9tZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9hcHAvSGVhZGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9hcHAvQXBwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pc05vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzVGV4dE5vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2NvbnRhaW5zTm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvc2hhbGxvd0VxdWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRBY3RpdmVFbGVtZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9FeGVjdXRpb25FbnZpcm9ubWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImNvbmRpdGlvbiIsImZvcm1hdCIsImEiLCJiIiwiZSIsImYiLCJlcnJvciIsInVuZGVmaW5lZCIsIkVycm9yIiwiYXJncyIsImFyZ0luZGV4IiwicmVwbGFjZSIsImZyYW1lc1RvUG9wIiwiYWRkTGVhZGluZ1NsYXNoIiwicGF0aCIsImNoYXJBdCIsInN0cmlwTGVhZGluZ1NsYXNoIiwic3Vic3RyIiwiaGFzQmFzZW5hbWUiLCJwcmVmaXgiLCJSZWdFeHAiLCJ0ZXN0Iiwic3RyaXBCYXNlbmFtZSIsImxlbmd0aCIsInN0cmlwVHJhaWxpbmdTbGFzaCIsInNsaWNlIiwicGFyc2VQYXRoIiwicGF0aG5hbWUiLCJzZWFyY2giLCJoYXNoIiwiaGFzaEluZGV4IiwiaW5kZXhPZiIsInNlYXJjaEluZGV4IiwiY3JlYXRlUGF0aCIsImxvY2F0aW9uIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJ0YXJnZXQiLCJhcmd1bWVudHMiLCJzb3VyY2UiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIlJvdXRlcl9Sb3V0ZXIiLCJfUmVhY3QkQ29tcG9uZW50IiwiUm91dGVyIiwiX3RlbXAiLCJfdGhpcyIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX2xlbiIsIkFycmF5IiwiX2tleSIsImFwcGx5IiwiY29uY2F0Iiwic3RhdGUiLCJtYXRjaCIsImNvbXB1dGVNYXRjaCIsInByb3BzIiwiaGlzdG9yeSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNvbnN0cnVjdG9yIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9pbmhlcml0cyIsImdldENoaWxkQ29udGV4dCIsInJvdXRlciIsImNvbnRleHQiLCJyb3V0ZSIsInVybCIsInBhcmFtcyIsImlzRXhhY3QiLCJjb21wb25lbnRXaWxsTW91bnQiLCJfdGhpczIiLCJfcHJvcHMiLCJjaGlsZHJlbiIsImludmFyaWFudF9icm93c2VyX2RlZmF1bHQiLCJyZWFjdF9kZWZhdWx0IiwiQ2hpbGRyZW4iLCJjb3VudCIsInVubGlzdGVuIiwibGlzdGVuIiwic2V0U3RhdGUiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwibmV4dFByb3BzIiwiYnJvd3Nlcl9kZWZhdWx0IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJyZW5kZXIiLCJvbmx5IiwiQ29tcG9uZW50IiwicHJvcFR5cGVzIiwicHJvcF90eXBlc19kZWZhdWx0IiwiaXNSZXF1aXJlZCIsIm5vZGUiLCJjb250ZXh0VHlwZXMiLCJjaGlsZENvbnRleHRUeXBlcyIsImVzX1JvdXRlciIsInJlYWN0X3JvdXRlcl9kb21fZXNfUm91dGVyIiwiQnJvd3NlclJvdXRlcl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiQnJvd3NlclJvdXRlcl9Ccm93c2VyUm91dGVyIiwiQnJvd3NlclJvdXRlciIsIkJyb3dzZXJSb3V0ZXJfY2xhc3NDYWxsQ2hlY2siLCJjcmVhdGVCcm93c2VySGlzdG9yeV9kZWZhdWx0IiwiQnJvd3NlclJvdXRlcl9pbmhlcml0cyIsImNyZWF0ZUVsZW1lbnQiLCJiYXNlbmFtZSIsInN0cmluZyIsImZvcmNlUmVmcmVzaCIsImJvb2wiLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiZnVuYyIsImtleUxlbmd0aCIsIm51bWJlciIsImVzX0Jyb3dzZXJSb3V0ZXIiLCJIYXNoUm91dGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJIYXNoUm91dGVyX0hhc2hSb3V0ZXIiLCJIYXNoUm91dGVyIiwiSGFzaFJvdXRlcl9jbGFzc0NhbGxDaGVjayIsImNyZWF0ZUhhc2hIaXN0b3J5X2RlZmF1bHQiLCJIYXNoUm91dGVyX2luaGVyaXRzIiwiaGFzaFR5cGUiLCJvbmVPZiIsImVzX0hhc2hSb3V0ZXIiLCJMaW5rX2V4dGVuZHMiLCJMaW5rX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJpc01vZGlmaWVkRXZlbnQiLCJldmVudCIsIm1ldGFLZXkiLCJhbHRLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJMaW5rX0xpbmsiLCJMaW5rIiwiTGlua19jbGFzc0NhbGxDaGVjayIsImhhbmRsZUNsaWNrIiwib25DbGljayIsImRlZmF1bHRQcmV2ZW50ZWQiLCJidXR0b24iLCJwcmV2ZW50RGVmYXVsdCIsIl90aGlzJHByb3BzIiwidG8iLCJwdXNoIiwiTGlua19pbmhlcml0cyIsImlubmVyUmVmIiwib2JqIiwia2V5cyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsImhyZWYiLCJjcmVhdGVIcmVmIiwicmVmIiwib25lT2ZUeXBlIiwiZGVmYXVsdFByb3BzIiwic2hhcGUiLCJlc19MaW5rIiwiTWVtb3J5Um91dGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJNZW1vcnlSb3V0ZXJfTWVtb3J5Um91dGVyIiwiTWVtb3J5Um91dGVyIiwiTWVtb3J5Um91dGVyX2NsYXNzQ2FsbENoZWNrIiwiY3JlYXRlTWVtb3J5SGlzdG9yeV9kZWZhdWx0IiwiTWVtb3J5Um91dGVyX2luaGVyaXRzIiwiaW5pdGlhbEVudHJpZXMiLCJhcnJheSIsImluaXRpYWxJbmRleCIsInJlYWN0X3JvdXRlcl9kb21fZXNfTWVtb3J5Um91dGVyIiwicGF0dGVybkNhY2hlIiwiY2FjaGVDb3VudCIsImVzX21hdGNoUGF0aCIsIm9wdGlvbnMiLCJfb3B0aW9ucyIsIl9vcHRpb25zJHBhdGgiLCJfb3B0aW9ucyRleGFjdCIsImV4YWN0IiwiX29wdGlvbnMkc3RyaWN0Iiwic3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwic2Vuc2l0aXZlIiwiX2NvbXBpbGVQYXRoIiwicGF0dGVybiIsImNhY2hlS2V5IiwiZW5kIiwiY2FjaGUiLCJjb21waWxlZFBhdHRlcm4iLCJyZSIsInBhdGhfdG9fcmVnZXhwX2RlZmF1bHQiLCJtYXRjaFBhdGhfY29tcGlsZVBhdGgiLCJleGVjIiwidmFsdWVzIiwicmVkdWNlIiwibWVtbyIsImluZGV4IiwiUm91dGVfZXh0ZW5kcyIsIlJvdXRlX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJSb3V0ZV9pc0VtcHR5Q2hpbGRyZW4iLCJSb3V0ZV9Sb3V0ZSIsIlJvdXRlIiwiUm91dGVfY2xhc3NDYWxsQ2hlY2siLCJSb3V0ZV9pbmhlcml0cyIsIl9yZWYiLCJjb21wdXRlZE1hdGNoIiwiY29tcG9uZW50IiwibmV4dENvbnRleHQiLCJfY29udGV4dCRyb3V0ZXIiLCJzdGF0aWNDb250ZXh0IiwiZXNfUm91dGUiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1JvdXRlIiwiTmF2TGlua19leHRlbmRzIiwiX3R5cGVvZiIsIml0ZXJhdG9yIiwiTmF2TGlua19OYXZMaW5rIiwiYWN0aXZlQ2xhc3NOYW1lIiwiY2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJzdHlsZSIsImdldElzQWN0aXZlIiwiaXNBY3RpdmUiLCJhcmlhQ3VycmVudCIsInJlc3QiLCJOYXZMaW5rX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiX3JlZjIiLCJmaWx0ZXIiLCJqb2luIiwiYXJpYS1jdXJyZW50IiwiZXNfTmF2TGluayIsIlByb21wdF9Qcm9tcHQiLCJQcm9tcHQiLCJQcm9tcHRfY2xhc3NDYWxsQ2hlY2siLCJQcm9tcHRfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIlByb21wdF9pbmhlcml0cyIsImVuYWJsZSIsIm1lc3NhZ2UiLCJ1bmJsb2NrIiwiYmxvY2siLCJkaXNhYmxlIiwid2hlbiIsInJlYWN0X3JvdXRlcl9kb21fZXNfUHJvbXB0IiwiTG9jYXRpb25VdGlsc19leHRlbmRzIiwiTG9jYXRpb25VdGlsc19jcmVhdGVMb2NhdGlvbiIsImN1cnJlbnRMb2NhdGlvbiIsImRlY29kZVVSSSIsIlVSSUVycm9yIiwicmVzb2x2ZV9wYXRobmFtZSIsIkxvY2F0aW9uVXRpbHNfbG9jYXRpb25zQXJlRXF1YWwiLCJ2YWx1ZV9lcXVhbCIsIndpbmRvdyIsImRvY3VtZW50IiwiUmVkaXJlY3RfUmVkaXJlY3QiLCJSZWRpcmVjdCIsIlJlZGlyZWN0X2NsYXNzQ2FsbENoZWNrIiwiUmVkaXJlY3RfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIlJlZGlyZWN0X2luaGVyaXRzIiwiaXNTdGF0aWMiLCJwZXJmb3JtIiwiY29tcG9uZW50RGlkTW91bnQiLCJjb21wb25lbnREaWRVcGRhdGUiLCJwcmV2UHJvcHMiLCJwcmV2VG8iLCJuZXh0VG8iLCJmcm9tIiwicmVhY3Rfcm91dGVyX2RvbV9lc19SZWRpcmVjdCIsIlN0YXRpY1JvdXRlcl9leHRlbmRzIiwiU3RhdGljUm91dGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJTdGF0aWNSb3V0ZXJfYWRkQmFzZW5hbWUiLCJQYXRoVXRpbHMiLCJTdGF0aWNSb3V0ZXJfY3JlYXRlTG9jYXRpb24iLCJfb2JqZWN0JHBhdGhuYW1lIiwiX29iamVjdCRzZWFyY2giLCJfb2JqZWN0JGhhc2giLCJTdGF0aWNSb3V0ZXJfY3JlYXRlVVJMIiwiU3RhdGljUm91dGVyX3N0YXRpY0hhbmRsZXIiLCJtZXRob2ROYW1lIiwibm9vcCIsIlN0YXRpY1JvdXRlcl9TdGF0aWNSb3V0ZXIiLCJTdGF0aWNSb3V0ZXIiLCJTdGF0aWNSb3V0ZXJfY2xhc3NDYWxsQ2hlY2siLCJoYW5kbGVQdXNoIiwiYWN0aW9uIiwiaGFuZGxlUmVwbGFjZSIsIl90aGlzJHByb3BzMiIsImhhbmRsZUxpc3RlbiIsImhhbmRsZUJsb2NrIiwiU3RhdGljUm91dGVyX2luaGVyaXRzIiwiU3RhdGljUm91dGVyX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiYmFzZSIsIlN0YXRpY1JvdXRlcl9zdHJpcEJhc2VuYW1lIiwiZ28iLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1N0YXRpY1JvdXRlciIsIlN3aXRjaF9Td2l0Y2giLCJTd2l0Y2giLCJTd2l0Y2hfY2xhc3NDYWxsQ2hlY2siLCJTd2l0Y2hfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIlN3aXRjaF9pbmhlcml0cyIsImNoaWxkIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJpc1ZhbGlkRWxlbWVudCIsIl9lbGVtZW50JHByb3BzIiwicGF0aFByb3AiLCJjbG9uZUVsZW1lbnQiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1N3aXRjaCIsInJlYWN0X3JvdXRlcl9kb21fZXNfbWF0Y2hQYXRoIiwid2l0aFJvdXRlcl9leHRlbmRzIiwicmVhY3Rfcm91dGVyX2RvbV9lc193aXRoUm91dGVyIiwiQyIsIndyYXBwZWRDb21wb25lbnRSZWYiLCJyZW1haW5pbmdQcm9wcyIsIndpdGhSb3V0ZXJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJyb3V0ZUNvbXBvbmVudFByb3BzIiwiZGlzcGxheU5hbWUiLCJXcmFwcGVkQ29tcG9uZW50IiwiaG9pc3Rfbm9uX3JlYWN0X3N0YXRpY3NfZGVmYXVsdCIsIl93YXJuaW5nIiwiX3dhcm5pbmcyIiwiZGVmYXVsdCIsInByb21wdCIsImxpc3RlbmVycyIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiY2FsbGJhY2siLCJyZXN1bHQiLCJhcHBlbmRMaXN0ZW5lciIsImZuIiwibGlzdGVuZXIiLCJpdGVtIiwibm90aWZ5TGlzdGVuZXJzIiwibG9jYXRpb25zQXJlRXF1YWwiLCJjcmVhdGVMb2NhdGlvbiIsIl9yZXNvbHZlUGF0aG5hbWUyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl92YWx1ZUVxdWFsMiIsIl9QYXRoVXRpbHMiLCJtYWtlRW1wdHlGdW5jdGlvbiIsImFyZyIsImVtcHR5RnVuY3Rpb24iLCJ0aGF0UmV0dXJucyIsInRoYXRSZXR1cm5zRmFsc2UiLCJ0aGF0UmV0dXJuc1RydWUiLCJ0aGF0UmV0dXJuc051bGwiLCJ0aGF0UmV0dXJuc1RoaXMiLCJ0aGF0UmV0dXJuc0FyZ3VtZW50IiwidmFsaWRhdGVGb3JtYXQiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsInRlc3QzIiwic3BsaXQiLCJsZXR0ZXIiLCJlcnIiLCJzaG91bGRVc2VOYXRpdmUiLCJzeW1ib2xzIiwidmFsIiwidG9PYmplY3QiLCJfX3dlYnBhY2tfZXhwb3J0c19fIiwidmFsdWVFcXVhbCIsImlzQXJyYXkiLCJldmVyeSIsImFUeXBlIiwiYVZhbHVlIiwidmFsdWVPZiIsImJWYWx1ZSIsImFLZXlzIiwiYktleXMiLCJpc0Fic29sdXRlIiwic3BsaWNlT25lIiwibGlzdCIsImsiLCJwb3AiLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJoYXNUcmFpbGluZ1NsYXNoIiwibGFzdCIsInVwIiwicGFydCIsInVuc2hpZnQiLCJjaGVja1Jlc3BvbnNlRGF0YSIsInNlYXJjaENoYXJhY3RlcnMiLCJwYWdlIiwicXVlcnkiLCJwYWdpbmciLCJCQVNFX1VSTCIsIkNIQVJBQ1RFUlNfVVJMIiwiZ2V0Q2hhcmFjdGVyIiwiaWQiLCJDSEFSQUNURVJfVVJMIiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJqc29uIiwiUmVzcG9uc2UiLCJjYW5Vc2VET00iLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGV0YWNoRXZlbnQiLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwic3VwcG9ydHNIaXN0b3J5IiwidWEiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlIiwic3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2giLCJpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IiwiUkVBQ1RfU1RBVElDUyIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRQcm90b3R5cGVPZiIsIm9iamVjdFByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50IiwiZGVzY3JpcHRvciIsImZhY3RvcnkiLCJpc2FycmF5IiwicGF0aFRvUmVnZXhwIiwicGFyc2UiLCJjb21waWxlIiwic3RyIiwidG9rZW5zVG9GdW5jdGlvbiIsInRva2Vuc1RvUmVnRXhwIiwiUEFUSF9SRUdFWFAiLCJyZXMiLCJ0b2tlbnMiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZGVsaW1pdGVyIiwiZXNjYXBlZCIsIm9mZnNldCIsIm5leHQiLCJjYXB0dXJlIiwiZ3JvdXAiLCJtb2RpZmllciIsImFzdGVyaXNrIiwicGFydGlhbCIsInJlcGVhdCIsIm9wdGlvbmFsIiwiZXNjYXBlR3JvdXAiLCJlc2NhcGVTdHJpbmciLCJlbmNvZGVVUklDb21wb25lbnRQcmV0dHkiLCJlbmNvZGVVUkkiLCJjaGFyQ29kZUF0IiwidG9TdHJpbmciLCJ0b1VwcGVyQ2FzZSIsIm1hdGNoZXMiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJqIiwiYXR0YWNoS2V5cyIsImZsYWdzIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiYXJyYXlUb1JlZ2V4cCIsInN0cmluZ1RvUmVnZXhwIiwiX0xvY2F0aW9uVXRpbHMiLCJfY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIyIiwiY2xhbXAiLCJsb3dlckJvdW5kIiwidXBwZXJCb3VuZCIsIk1hdGgiLCJtaW4iLCJtYXgiLCJfcHJvcHMkaW5pdGlhbEVudHJpZXMiLCJfcHJvcHMkaW5pdGlhbEluZGV4IiwiX3Byb3BzJGtleUxlbmd0aCIsInRyYW5zaXRpb25NYW5hZ2VyIiwibmV4dFN0YXRlIiwiZW50cmllcyIsImNyZWF0ZUtleSIsInJhbmRvbSIsImVudHJ5IiwibmV4dEluZGV4Iiwib2siLCJuZXh0RW50cmllcyIsInNwbGljZSIsImNhbkdvIiwiX2ludmFyaWFudDIiLCJfRE9NVXRpbHMiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJnZXRIYXNoUGF0aCIsInN1YnN0cmluZyIsInJlcGxhY2VIYXNoUGF0aCIsImdsb2JhbEhpc3RvcnkiLCJjYW5Hb1dpdGhvdXRSZWxvYWQiLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMkaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJnZXRET01Mb2NhdGlvbiIsImZvcmNlTmV4dFBvcCIsImlnbm9yZVBhdGgiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJoYW5kbGVQb3AiLCJyZXZlcnRQb3AiLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbFBhdGhzIiwibGFzdEluZGV4T2YiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImluaXRpYWxMb2NhdGlvbiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImlzQmxvY2tlZCIsInB1c2hIYXNoUGF0aCIsInByZXZJbmRleCIsIm5leHRQYXRocyIsImdldEhpc3RvcnlTdGF0ZSIsImNhblVzZUhpc3RvcnkiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJoaXN0b3J5U3RhdGUiLCJfd2luZG93JGxvY2F0aW9uIiwiaGFuZGxlUG9wU3RhdGUiLCJhbGxLZXlzIiwicHVzaFN0YXRlIiwibmV4dEtleXMiLCJyZXBsYWNlU3RhdGUiLCJfcmVhY3QiLCJfcmlja0FuZE1vcnR5QXBpIiwiTW92aWVEZXRhaWwiLCJbb2JqZWN0IE9iamVjdF0iLCJzdXBlciIsIm1vdmllIiwiaGFuZGxlQmFjayIsInN0b3BQcm9wYWdhdGlvbiIsImNoYXJhY3RlciIsIl9yZWFjdDIiLCJzdHlsZXMiLCJzcmMiLCJpbWFnZSIsInNwZWNpZXMiLCJzdGF0dXMiLCJnZW5kZXIiLCJvcmlnaW4iLCJQcm9wVHlwZXMiLCJzaW5nbGVNYXRjaGVyIiwibXVsdGlNYXRjaGVyIiwiZGVjb2RlQ29tcG9uZW50cyIsImNvbXBvbmVudHMiLCJkZWNvZGVVUklDb21wb25lbnQiLCJsZWZ0IiwicmlnaHQiLCJkZWNvZGUiLCJpbnB1dCIsImVuY29kZWRVUkkiLCJyZXBsYWNlTWFwIiwiJUZFJUZGIiwiJUZGJUZFIiwiY3VzdG9tRGVjb2RlVVJJQ29tcG9uZW50Iiwic3RyaWN0VXJpRW5jb2RlIiwib2JqZWN0QXNzaWduIiwiZGVjb2RlQ29tcG9uZW50IiwiZXh0cmFjdCIsInF1ZXJ5U3RhcnQiLCJmb3JtYXR0ZXIiLCJhcnJheUZvcm1hdCIsImFjY3VtdWxhdG9yIiwicGFyc2VyRm9yQXJyYXlGb3JtYXQiLCJyZXQiLCJ0cmltIiwicGFyYW0iLCJzaGlmdCIsInNvcnQiLCJCb29sZWFuIiwia2V5c1NvcnRlciIsIk51bWJlciIsImVuY29kZXJGb3JBcnJheUZvcm1hdCIsInZhbDIiLCJ4IiwicGFyc2VVcmwiLCJTZWFyY2hGb3JtIiwiY3VycmVudCIsInNlYXJjaFRlcm0iLCJoYW5kbGVDaGFuZ2UiLCJoYW5kbGVTdWJtaXQiLCJjYWxsU2VhcmNoIiwib25TZWFyY2giLCJvblN1Ym1pdCIsIm9uQ2hhbmdlIiwicGxhY2Vob2xkZXIiLCJfcmVhY3RSb3V0ZXJEb20iLCJDaGFyYWN0ZXIiLCJhbnkiLCJoYW5kbGVQYWdlIiwiaW5jcmVtZW50Iiwib25QYWdlIiwidG90YWxSZXN1bHRzIiwidG90YWxQYWdlcyIsImNlaWwiLCJkaXNhYmxlZCIsImdldFNlYXJjaCIsIlNlYXJjaCIsImNoYXJhY3RlcnMiLCJtYWtlU2VhcmNoIiwicXVlcnlTdHJpbmciLCJoYW5kbGVTZWFyY2giLCJzZWFyY2hGcm9tUXVlcnkiLCJjYXRjaCIsIl9TZWFyY2hGb3JtMiIsIl9QYWdpbmcyIiwiQ2hhcmFjdGVycyIsImhlYWRlciIsImFyciIsImludmFyaWFudCIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0Iiwic2hpbSIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImdldFNoaW0iLCJSZWFjdFByb3BUeXBlcyIsInN5bWJvbCIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJjaGVja1Byb3BUeXBlcyIsIl9IZWFkZXIyIiwiSG9tZSIsIl9DaGFyYWN0ZXJEZXRhaWwyIiwiY2hhcmFjdGVySUQiLCJkZWZhdWx0VmlldyIsIm93bmVyRG9jdW1lbnQiLCJOb2RlIiwibm9kZVR5cGUiLCJub2RlTmFtZSIsImlzTm9kZSIsImlzVGV4dE5vZGUiLCJjb250YWluc05vZGUiLCJvdXRlck5vZGUiLCJpbm5lck5vZGUiLCJwYXJlbnROb2RlIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImlzIiwieSIsIm9iakEiLCJvYmpCIiwia2V5c0EiLCJrZXlzQiIsImRvYyIsImFjdGl2ZUVsZW1lbnQiLCJib2R5IiwiRXhlY3V0aW9uRW52aXJvbm1lbnQiLCJjYW5Vc2VXb3JrZXJzIiwiV29ya2VyIiwiY2FuVXNlRXZlbnRMaXN0ZW5lcnMiLCJjYW5Vc2VWaWV3cG9ydCIsInNjcmVlbiIsImlzSW5Xb3JrZXIiLCJhYSIsImNhIiwidiIsImRhIiwiZWEiLCJmYSIsImhhIiwiQSIsIkIiLCJfY2F1Z2h0RXJyb3IiLCJfaGFzQ2F1Z2h0RXJyb3IiLCJfcmV0aHJvd0Vycm9yIiwiX2hhc1JldGhyb3dFcnJvciIsImludm9rZUd1YXJkZWRDYWxsYmFjayIsImciLCJoIiwiaW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yIiwiaGFzQ2F1Z2h0RXJyb3IiLCJjbGVhckNhdWdodEVycm9yIiwicmV0aHJvd0NhdWdodEVycm9yIiwibGEiLCJtYSIsIm5hIiwib2EiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInBhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJxYSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJyYSIsInNhIiwiZGVwZW5kZW5jaWVzIiwidGEiLCJ2YSIsInBsdWdpbnMiLCJldmVudE5hbWVEaXNwYXRjaENvbmZpZ3MiLCJyZWdpc3RyYXRpb25OYW1lTW9kdWxlcyIsInJlZ2lzdHJhdGlvbk5hbWVEZXBlbmRlbmNpZXMiLCJwb3NzaWJsZVJlZ2lzdHJhdGlvbk5hbWVzIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIndhIiwieGEiLCJ5YSIsInphIiwiY3VycmVudFRhcmdldCIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJzdGF0ZU5vZGUiLCJJYSIsIkphIiwiS2EiLCJpbmplY3Rpb24iLCJnZXRMaXN0ZW5lciIsInJ1bkV2ZW50c0luQmF0Y2giLCJydW5FeHRyYWN0ZWRFdmVudHNJbkJhdGNoIiwiTGEiLCJNYSIsIk5hIiwidGFnIiwiT2EiLCJQYSIsIlFhIiwicHJlY2FjaGVGaWJlck5vZGUiLCJnZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZSIsImdldEluc3RhbmNlRnJvbU5vZGUiLCJnZXROb2RlRnJvbUluc3RhbmNlIiwiZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZSIsInVwZGF0ZUZpYmVyUHJvcHMiLCJGIiwicmV0dXJuIiwiUmEiLCJTYSIsImRpc3BhdGNoQ29uZmlnIiwiVGEiLCJfdGFyZ2V0SW5zdCIsIlVhIiwiVmEiLCJYYSIsIllhIiwiWmEiLCJhbHRlcm5hdGUiLCIkYSIsImFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXMiLCJhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldCIsImFjY3VtdWxhdGVFbnRlckxlYXZlRGlzcGF0Y2hlcyIsImFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzIiwiYWIiLCJ0b0xvd2VyQ2FzZSIsImJiIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiY2IiLCJkYiIsImViIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsImxiIiwiZG9jdW1lbnRFbGVtZW50IiwiRyIsIl9yb290IiwiX3N0YXJ0VGV4dCIsIl9mYWxsYmFja1RleHQiLCJtYiIsIm5iIiwib2IiLCJwYiIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJIIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsInJiIiwiZXZlbnRQb29sIiwic2IiLCJkZXN0cnVjdG9yIiwicWIiLCJnZXRQb29sZWQiLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXh0ZW5kIiwidGIiLCJ1YiIsInZiIiwid2IiLCJ4YiIsImRvY3VtZW50TW9kZSIsInliIiwiemIiLCJBYiIsIkJiIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsIkNiIiwiRGIiLCJrZXlDb2RlIiwiRWIiLCJkZXRhaWwiLCJGYiIsIkliIiwid2hpY2giLCJHYiIsImNoYXIiLCJIYiIsIkpiIiwiS2IiLCJpbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50IiwiTGIiLCJNYiIsIk5iIiwicmVzdG9yZUNvbnRyb2xsZWRTdGF0ZSIsIk9iIiwiUGIiLCJRYiIsIlJiIiwiZW5xdWV1ZVN0YXRlUmVzdG9yZSIsIm5lZWRzU3RhdGVSZXN0b3JlIiwicmVzdG9yZVN0YXRlSWZOZWVkZWQiLCJTYiIsIlRiIiwiVWIiLCJWYiIsIldiIiwiWGIiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImRhdGV0aW1lLWxvY2FsIiwiZW1haWwiLCJtb250aCIsInBhc3N3b3JkIiwicmFuZ2UiLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsIndlZWsiLCJZYiIsIlpiIiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCIkYiIsInNldEF0dHJpYnV0ZSIsImFjIiwiY2MiLCJfdmFsdWVUcmFja2VyIiwic2V0IiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsImJjIiwiZGMiLCJjaGVja2VkIiwiZWMiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudE93bmVyIiwiSSIsImZvciIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJtYyIsIm5jIiwib2MiLCJwYyIsInFjIiwicmMiLCJzYyIsInRjIiwicGVuZGluZ1Byb3BzIiwiJCR0eXBlb2YiLCJ2YyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwid2MiLCJ4YyIsInljIiwiSiIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJLIiwiQ2MiLCJEYyIsIkVjIiwiQWMiLCJpc05hTiIsIkJjIiwiemMiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsIkZjIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJHYyIsIkhjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkljIiwiSmMiLCJLYyIsIkxjIiwidGFiSW5kZXgiLCJNYyIsImNoYW5nZSIsIk5jIiwiT2MiLCJQYyIsIlFjIiwiUmMiLCJTYyIsIlRjIiwiVWMiLCJWYyIsIldjIiwiWGMiLCJZYyIsIlpjIiwiJGMiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiYWQiLCJ2aWV3IiwiYmQiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiY2QiLCJnZXRNb2RpZmllclN0YXRlIiwiZGQiLCJlZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInNyY0VsZW1lbnQiLCJ0b0VsZW1lbnQiLCJmZCIsInBvaW50ZXJJZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJnZCIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiaGQiLCJwYXJlbnRXaW5kb3ciLCJlZmZlY3RUYWciLCJqZCIsImtkIiwic2libGluZyIsImxkIiwibmQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50Iiwib2QiLCJjbGlwYm9hcmREYXRhIiwicGQiLCJxZCIsImNoYXJDb2RlIiwicmQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5Iiwic2QiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwidGQiLCJsb2NhbGUiLCJ1ZCIsImRhdGFUcmFuc2ZlciIsInZkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsIndkIiwieGQiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsInlkIiwiemQiLCJBZCIsIkJkIiwiaXNJbnRlcmFjdGl2ZSIsIkNkIiwiaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlIiwiRGQiLCJFZCIsIkZkIiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsImNvbnRhaW5lckluZm8iLCJ0b3BMZXZlbFR5cGUiLCJHZCIsIklkIiwiTCIsIkpkIiwiS2QiLCJMZCIsIk1kIiwiX2VuYWJsZWQiLCJzZXRFbmFibGVkIiwiaXNFbmFibGVkIiwidHJhcEJ1YmJsZWRFdmVudCIsInRyYXBDYXB0dXJlZEV2ZW50IiwiZGlzcGF0Y2hFdmVudCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJmaXJzdENoaWxkIiwiU2QiLCJ0ZXh0Q29udGVudCIsIm5leHRTaWJsaW5nIiwiVGQiLCJjb250ZW50RWRpdGFibGUiLCJVZCIsIlZkIiwic2VsZWN0IiwiV2QiLCJYZCIsIllkIiwiWmQiLCIkZCIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JOb2RlIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJhZSIsIm9uU2VsZWN0IiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsImJlIiwicGVyZm9ybWFuY2UiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImplIiwia2UiLCJsZSIsIm1lIiwibmUiLCJkaWRUaW1lb3V0IiwidGltZVJlbWFpbmluZyIsIm9lIiwicGUiLCJ0aW1lb3V0VGltZSIsInNjaGVkdWxlZENhbGxiYWNrIiwiY2FsbGJhY2tJZCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInFlIiwicG9zdE1lc3NhZ2UiLCJ0aW1lb3V0Iiwic2UiLCJzZXRUaW1lb3V0IiwiSW5maW5pdHkiLCJjbGVhclRpbWVvdXQiLCJ1ZSIsInRlIiwidmUiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsIndlIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsInhlIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJ5ZSIsInplIiwiQWUiLCJCZSIsImh0bWwiLCJtYXRobWwiLCJzdmciLCJDZSIsIkRlIiwiRWUiLCJGZSIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwiR2UiLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJIZSIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIkllIiwiSmUiLCJzZXRQcm9wZXJ0eSIsIktlIiwibWVudWl0ZW0iLCJhcmVhIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJ0cmFjayIsIndiciIsIkxlIiwiTWUiLCJOZSIsIk9lIiwiYmx1ciIsImZvY3VzIiwiUGUiLCJjcmVhdGVFbGVtZW50TlMiLCJRZSIsImNyZWF0ZVRleHROb2RlIiwiUmUiLCJfX2h0bWwiLCJvbmNsaWNrIiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJXZSIsInNldEluaXRpYWxQcm9wZXJ0aWVzIiwiZGlmZlByb3BlcnRpZXMiLCJ1cGRhdGVQcm9wZXJ0aWVzIiwiZGlmZkh5ZHJhdGVkUHJvcGVydGllcyIsImRpZmZIeWRyYXRlZFRleHQiLCJ3YXJuRm9yVW5tYXRjaGVkVGV4dCIsIndhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZUVsZW1lbnQiLCJ3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVUZXh0Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRFbGVtZW50Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRUZXh0IiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJYZSIsIlllIiwiWmUiLCJhdXRvRm9jdXMiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwiZWYiLCJTZXQiLCJmZiIsImdmIiwiaGYiLCJNIiwiTiIsImpmIiwiTyIsImtmIiwibGYiLCJtZiIsIm5mIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0Iiwib2YiLCJwZiIsInFmIiwicmYiLCJzZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwidGYiLCJ1ZiIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZXhwaXJhdGlvblRpbWUiLCJ2ZiIsIndmIiwiaXNSZWFjdENvbXBvbmVudCIsInhmIiwieWYiLCJ6ZiIsInBlbmRpbmdDaGlsZHJlbiIsImltcGxlbWVudGF0aW9uIiwiQWYiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJlYXJsaWVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RTdXNwZW5kZWRUaW1lIiwibGF0ZXN0UGluZ2VkVGltZSIsInBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZSIsImZpbmlzaGVkV29yayIsInBlbmRpbmdDb250ZXh0IiwiaHlkcmF0ZSIsInJlbWFpbmluZ0V4cGlyYXRpb25UaW1lIiwiZmlyc3RCYXRjaCIsIm5leHRTY2hlZHVsZWRSb290IiwiQmYiLCJDZiIsIkRmIiwiRmYiLCJHZiIsIkhmIiwiSWYiLCJiYXNlU3RhdGUiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsIkpmIiwiS2YiLCJwYXlsb2FkIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsIlFmIiwidyIsIlJmIiwiU2YiLCJUZiIsInN0YWNrIiwiVWYiLCJWZiIsIldmIiwiWGYiLCJfY29udGV4dCIsIl9jaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsInRhZ05hbWUiLCJlZyIsImZnIiwiaGciLCJsZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFsRmliZXIiLCJlbnF1ZXVlU2V0U3RhdGUiLCJpZyIsImpnIiwia2ciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwibWciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIm5nIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJvZyIsInJlZnMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJwZyIsInFnIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsInJnIiwic2ciLCJNYXAiLCJQIiwia2MiLCJIZCIsInUiLCJxIiwiZGVsZXRlIiwiRSIsImRvbmUiLCJ0ZyIsInVnIiwidmciLCJ3ZyIsInhnIiwieWciLCJ6ZyIsIkFnIiwiQmciLCJDZyIsIkRnIiwiUSIsIkVnIiwiRmciLCJHZyIsIlIiLCJIZyIsIklnIiwiS2ciLCJ1cGRhdGVyIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiaGlkZGVuIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiSmciLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJMZyIsIlBnIiwiUWciLCJSZyIsIlNnIiwiVGciLCJzdXBwcmVzc1JlYWN0RXJyb3JMb2dnaW5nIiwiY29uc29sZSIsIlVnIiwiVmciLCJXZyIsIlhnIiwiWWciLCJaZyIsImluc2VydEJlZm9yZSIsIiRnIiwiYWgiLCJiaCIsImNoIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJkaCIsImFkZCIsImNvbXBvbmVudFN0YWNrIiwiZWgiLCJoYXMiLCJmaCIsImdoIiwiaGgiLCJpaCIsImpoIiwia2giLCJsaCIsIlMiLCJtaCIsIlQiLCJuaCIsIm9oIiwiVSIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsInZoIiwid2giLCJYIiwieGgiLCJnZXREZXJpdmVkU3RhdGVGcm9tQ2F0Y2giLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiViIsIkdoIiwiSGgiLCJXIiwiWSIsIkloIiwiSmgiLCJLaCIsIkxoIiwiWiIsIk1oIiwiTmgiLCJPaCIsIlBoIiwiUWgiLCJSaCIsIlNoIiwiVGgiLCJVaCIsIlZoIiwiV2giLCJfb25Db21wbGV0ZSIsIlhoIiwiX2V4cGlyYXRpb25UaW1lIiwiX2RlZmVyIiwicmFuZ2VDb3VudCIsIldhIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIkQiLCJqYSIsImhpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJ6IiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsImdnIiwibGMiLCJiYSIsInJpIiwic2kiLCJNZyIsIk5nIiwidGkiLCJ1YyIsIk9nIiwidWkiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsImVpIiwiZmkiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIkVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJnaSIsImppIiwiX2NhbGxiYWNrcyIsIl9uZXh0IiwiX2hhc0NoaWxkcmVuIiwiX2RpZENvbXBsZXRlIiwiX2NoaWxkcmVuIiwia2kiLCJfZGlkQ29tbWl0IiwiX29uQ29tbWl0IiwibGkiLCJfaW50ZXJuYWxSb290IiwibWkiLCJvaSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJsZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJoYXNBdHRyaWJ1dGUiLCJuaSIsInBpIiwiaWkiLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJxaSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9kZWZlcnJlZFVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudFBsdWdpbkh1YiIsIkV2ZW50UGx1Z2luUmVnaXN0cnkiLCJFdmVudFByb3BhZ2F0b3JzIiwiUmVhY3RDb250cm9sbGVkQ29tcG9uZW50IiwiUmVhY3RET01Db21wb25lbnRUcmVlIiwiUmVhY3RET01FdmVudExpc3RlbmVyIiwidW5zdGFibGVfY3JlYXRlUm9vdCIsImJ1bmRsZVR5cGUiLCJ2ZXJzaW9uIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsInZpIiwid2kiLCJjaGVja0RDRSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJrZXlQcmVmaXgiLCI9IiwiOiIsImVzY2FwZSIsInRvQXJyYXkiLCJjcmVhdGVSZWYiLCJQdXJlQ29tcG9uZW50IiwiY3JlYXRlQ29udGV4dCIsIl9kZWZhdWx0VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl9jaGFuZ2VkQml0czIiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiZm9yd2FyZFJlZiIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsInVuc3RhYmxlX0FzeW5jTW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiY3JlYXRlRmFjdG9yeSIsIlJlYWN0RE9NIiwiX0FwcDIiLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsS0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxJQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFlBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FH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em9ELEdBQTJCLElBQUFDLEVBQUE4eUMsRUFBQXp6QyxLQUFBLEtBQUFVLEdBQThCLE9BQVRDLEVBQUFxYSxLQUFBdGEsRUFBU0MsR0FBUzJTLGVBQUFvZ0MsRUFBQStULFFBQUEsU0FBQS90QixvREFBdUZDLGtCQUFBMEIsRUFDNWZ6NEIsT0FBQXVWLElBQVUwb0MsR0FBSXJzQyxRQUFBc3JDLEdBQVVvQixFQUFBTCxHQUFBZixHQUFBZSxFQUFXdGlELEVBQUFELFFBQUE0aUQsRUFBQTFzQyxRQUFBMHNDLEVBQUExc0MsUUFBQTBzQyxnQ0NyQm5DLFFBQUE5aUQsRUFBQSxRQUNBQSxFQUFBLFNBRUFBLEVBQUEsd0RBRUFnckQsVUFBUy9pRCxPQUNQMGQsRUFBQXZQLFFBQUFsTixjQUFDK2hELEVBQUE3MEMsUUFBRCxNQUNBdEUsU0FBU281QyxlQUFlIiwiZmlsZSI6ImJ1bmRsZS4xZTkzNGE3NDZmZTIzMGYyM2QyMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL1wiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNDQpO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChmb3JtYXQubGVuZ3RoIDwgMTAgfHwgKC9eW3NcXFddKiQvKS50ZXN0KGZvcm1hdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1RoZSB3YXJuaW5nIGZvcm1hdCBzaG91bGQgYmUgYWJsZSB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzICcgK1xuICAgICAgICAnd2FybmluZy4gUGxlYXNlLCB1c2UgYSBtb3JlIGRlc2NyaXB0aXZlIGZvcm1hdCB0aGFuOiAnICsgZm9ybWF0XG4gICAgICApO1xuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgICAgfSk7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgICB9XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgIH0gY2F0Y2goeCkge31cbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgaW52YXJpYW50ID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArXG4gICAgICAgICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLidcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7IHJldHVybiBhcmdzW2FyZ0luZGV4KytdOyB9KVxuICAgICAgKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbnZhciBhZGRMZWFkaW5nU2xhc2ggPSBleHBvcnRzLmFkZExlYWRpbmdTbGFzaCA9IGZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59O1xuXG52YXIgc3RyaXBMZWFkaW5nU2xhc2ggPSBleHBvcnRzLnN0cmlwTGVhZGluZ1NsYXNoID0gZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbn07XG5cbnZhciBoYXNCYXNlbmFtZSA9IGV4cG9ydHMuaGFzQmFzZW5hbWUgPSBmdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoJ14nICsgcHJlZml4ICsgJyhcXFxcL3xcXFxcP3wjfCQpJywgJ2knKS50ZXN0KHBhdGgpO1xufTtcblxudmFyIHN0cmlwQmFzZW5hbWUgPSBleHBvcnRzLnN0cmlwQmFzZW5hbWUgPSBmdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn07XG5cbnZhciBzdHJpcFRyYWlsaW5nU2xhc2ggPSBleHBvcnRzLnN0cmlwVHJhaWxpbmdTbGFzaCA9IGZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdChwYXRoLmxlbmd0aCAtIDEpID09PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59O1xuXG52YXIgcGFyc2VQYXRoID0gZXhwb3J0cy5wYXJzZVBhdGggPSBmdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuXG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn07XG5cbnZhciBjcmVhdGVQYXRoID0gZXhwb3J0cy5jcmVhdGVQYXRoID0gZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuXG5cbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG5cbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiAnPycgKyBzZWFyY2g7XG5cbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogJyMnICsgaGFzaDtcblxuICByZXR1cm4gcGF0aDtcbn07IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cbiAqL1xuXG52YXIgUm91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUm91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG1hdGNoOiBfdGhpcy5jb21wdXRlTWF0Y2goX3RoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbi5wYXRobmFtZSlcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIFJvdXRlci5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXI6IF9leHRlbmRzKHt9LCB0aGlzLmNvbnRleHQucm91dGVyLCB7XG4gICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgcm91dGU6IHtcbiAgICAgICAgICBsb2NhdGlvbjogdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLFxuICAgICAgICAgIG1hdGNoOiB0aGlzLnN0YXRlLm1hdGNoXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXB1dGVNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiAnLycsXG4gICAgICB1cmw6ICcvJyxcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBpc0V4YWN0OiBwYXRobmFtZSA9PT0gJy8nXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF9wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgaGlzdG9yeSA9IF9wcm9wcy5oaXN0b3J5O1xuXG5cbiAgICBpbnZhcmlhbnQoY2hpbGRyZW4gPT0gbnVsbCB8fCBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDEsICdBIDxSb3V0ZXI+IG1heSBoYXZlIG9ubHkgb25lIGNoaWxkIGVsZW1lbnQnKTtcblxuICAgIC8vIERvIHRoaXMgaGVyZSBzbyB3ZSBjYW4gc2V0U3RhdGUgd2hlbiBhIDxSZWRpcmVjdD4gY2hhbmdlcyB0aGVcbiAgICAvLyBsb2NhdGlvbiBpbiBjb21wb25lbnRXaWxsTW91bnQuIFRoaXMgaGFwcGVucyBlLmcuIHdoZW4gZG9pbmdcbiAgICAvLyBzZXJ2ZXIgcmVuZGVyaW5nIHVzaW5nIGEgPFN0YXRpY1JvdXRlcj4uXG4gICAgdGhpcy51bmxpc3RlbiA9IGhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgIG1hdGNoOiBfdGhpczIuY29tcHV0ZU1hdGNoKGhpc3RvcnkubG9jYXRpb24ucGF0aG5hbWUpXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIHdhcm5pbmcodGhpcy5wcm9wcy5oaXN0b3J5ID09PSBuZXh0UHJvcHMuaGlzdG9yeSwgJ1lvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT4nKTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy51bmxpc3RlbigpO1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG5cbiAgICByZXR1cm4gY2hpbGRyZW4gPyBSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKSA6IG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbn07XG5Sb3V0ZXIuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5Sb3V0ZXIuY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlcjsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFJvdXRlciBmcm9tICdyZWFjdC1yb3V0ZXIvZXMvUm91dGVyJztcblxuZXhwb3J0IGRlZmF1bHQgUm91dGVyOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjcmVhdGVIaXN0b3J5IGZyb20gJ2hpc3RvcnkvY3JlYXRlQnJvd3Nlckhpc3RvcnknO1xuaW1wb3J0IFJvdXRlciBmcm9tICcuL1JvdXRlcic7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cblxudmFyIEJyb3dzZXJSb3V0ZXIgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQnJvd3NlclJvdXRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJyb3dzZXJSb3V0ZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KF90aGlzLnByb3BzKSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCAnPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksICcgKyAndXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfWAuJyk7XG4gIH07XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgeyBoaXN0b3J5OiB0aGlzLmhpc3RvcnksIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Ccm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXG4gIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBCcm93c2VyUm91dGVyOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjcmVhdGVIaXN0b3J5IGZyb20gJ2hpc3RvcnkvY3JlYXRlSGFzaEhpc3RvcnknO1xuaW1wb3J0IFJvdXRlciBmcm9tICcuL1JvdXRlcic7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIHdpbmRvdy5sb2NhdGlvbi5oYXNoLlxuICovXG5cbnZhciBIYXNoUm91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKEhhc2hSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEhhc2hSb3V0ZXIoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBIYXNoUm91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGlzdG9yeShfdGhpcy5wcm9wcyksIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgSGFzaFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgJzxIYXNoUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCAnICsgJ3VzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEhhc2hSb3V0ZXIgYXMgUm91dGVyIH1gLicpO1xuICB9O1xuXG4gIEhhc2hSb3V0ZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHsgaGlzdG9yeTogdGhpcy5oaXN0b3J5LCBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB9KTtcbiAgfTtcblxuICByZXR1cm4gSGFzaFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuSGFzaFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbJ2hhc2hiYW5nJywgJ25vc2xhc2gnLCAnc2xhc2gnXSksXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBIYXNoUm91dGVyOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHsgdmFyIHRhcmdldCA9IHt9OyBmb3IgKHZhciBpIGluIG9iaikgeyBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTsgdGFyZ2V0W2ldID0gb2JqW2ldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcblxudmFyIGlzTW9kaWZpZWRFdmVudCA9IGZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59O1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG52YXIgTGluayA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhMaW5rLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaW5rKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTGluayk7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuaGFuZGxlQ2xpY2sgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmIChfdGhpcy5wcm9wcy5vbkNsaWNrKSBfdGhpcy5wcm9wcy5vbkNsaWNrKGV2ZW50KTtcblxuICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcbiAgICAgIGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAvLyBpZ25vcmUgcmlnaHQgY2xpY2tzXG4gICAgICAhX3RoaXMucHJvcHMudGFyZ2V0ICYmIC8vIGxldCBicm93c2VyIGhhbmRsZSBcInRhcmdldD1fYmxhbmtcIiBldGMuXG4gICAgICAhaXNNb2RpZmllZEV2ZW50KGV2ZW50KSAvLyBpZ25vcmUgY2xpY2tzIHdpdGggbW9kaWZpZXIga2V5c1xuICAgICAgKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgIHZhciBoaXN0b3J5ID0gX3RoaXMuY29udGV4dC5yb3V0ZXIuaGlzdG9yeTtcbiAgICAgICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICAgICAgcmVwbGFjZSA9IF90aGlzJHByb3BzLnJlcGxhY2UsXG4gICAgICAgICAgICAgIHRvID0gX3RoaXMkcHJvcHMudG87XG5cblxuICAgICAgICAgIGlmIChyZXBsYWNlKSB7XG4gICAgICAgICAgICBoaXN0b3J5LnJlcGxhY2UodG8pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBoaXN0b3J5LnB1c2godG8pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgTGluay5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICByZXBsYWNlID0gX3Byb3BzLnJlcGxhY2UsXG4gICAgICAgIHRvID0gX3Byb3BzLnRvLFxuICAgICAgICBpbm5lclJlZiA9IF9wcm9wcy5pbm5lclJlZixcbiAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3Byb3BzLCBbJ3JlcGxhY2UnLCAndG8nLCAnaW5uZXJSZWYnXSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcblxuICAgIGludmFyaWFudCh0aGlzLmNvbnRleHQucm91dGVyLCAnWW91IHNob3VsZCBub3QgdXNlIDxMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj4nKTtcblxuICAgIHZhciBocmVmID0gdGhpcy5jb250ZXh0LnJvdXRlci5oaXN0b3J5LmNyZWF0ZUhyZWYodHlwZW9mIHRvID09PSAnc3RyaW5nJyA/IHsgcGF0aG5hbWU6IHRvIH0gOiB0byk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgnYScsIF9leHRlbmRzKHt9LCBwcm9wcywgeyBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsaWNrLCBocmVmOiBocmVmLCByZWY6IGlubmVyUmVmIH0pKTtcbiAgfTtcblxuICByZXR1cm4gTGluaztcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuTGluay5wcm9wVHlwZXMgPSB7XG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICB0YXJnZXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWQsXG4gIGlubmVyUmVmOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuY10pXG59O1xuTGluay5kZWZhdWx0UHJvcHMgPSB7XG4gIHJlcGxhY2U6IGZhbHNlXG59O1xuTGluay5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgcHVzaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIHJlcGxhY2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICBjcmVhdGVIcmVmOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG4gICAgfSkuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IExpbms7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNyZWF0ZUhpc3RvcnkgZnJvbSAnaGlzdG9yeS9jcmVhdGVNZW1vcnlIaXN0b3J5JztcbmltcG9ydCBSb3V0ZXIgZnJvbSAnLi9Sb3V0ZXInO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGxvY2F0aW9uIGluIG1lbW9yeS5cbiAqL1xuXG52YXIgTWVtb3J5Um91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKE1lbW9yeVJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTWVtb3J5Um91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTWVtb3J5Um91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGlzdG9yeShfdGhpcy5wcm9wcyksIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCAnPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgJyArICd1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBNZW1vcnlSb3V0ZXIgYXMgUm91dGVyIH1gLicpO1xuICB9O1xuXG4gIE1lbW9yeVJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgeyBoaXN0b3J5OiB0aGlzLmhpc3RvcnksIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIH0pO1xuICB9O1xuXG4gIHJldHVybiBNZW1vcnlSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbk1lbW9yeVJvdXRlci5wcm9wVHlwZXMgPSB7XG4gIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXG4gIGluaXRpYWxJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IE1lbW9yeVJvdXRlcjsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IE1lbW9yeVJvdXRlciBmcm9tICdyZWFjdC1yb3V0ZXIvZXMvTWVtb3J5Um91dGVyJztcblxuZXhwb3J0IGRlZmF1bHQgTWVtb3J5Um91dGVyOyIsImltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSAncGF0aC10by1yZWdleHAnO1xuXG52YXIgcGF0dGVybkNhY2hlID0ge307XG52YXIgY2FjaGVMaW1pdCA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQgPSAwO1xuXG52YXIgY29tcGlsZVBhdGggPSBmdW5jdGlvbiBjb21waWxlUGF0aChwYXR0ZXJuLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZUtleSA9ICcnICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgY2FjaGUgPSBwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldIHx8IChwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldID0ge30pO1xuXG4gIGlmIChjYWNoZVtwYXR0ZXJuXSkgcmV0dXJuIGNhY2hlW3BhdHRlcm5dO1xuXG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZSA9IHBhdGhUb1JlZ2V4cChwYXR0ZXJuLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIGNvbXBpbGVkUGF0dGVybiA9IHsgcmU6IHJlLCBrZXlzOiBrZXlzIH07XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0dGVybl0gPSBjb21waWxlZFBhdHRlcm47XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGNvbXBpbGVkUGF0dGVybjtcbn07XG5cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoIHBhdHRlcm4uXG4gKi9cbnZhciBtYXRjaFBhdGggPSBmdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ3N0cmluZycpIG9wdGlvbnMgPSB7IHBhdGg6IG9wdGlvbnMgfTtcblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgX29wdGlvbnMkcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBwYXRoID0gX29wdGlvbnMkcGF0aCA9PT0gdW5kZWZpbmVkID8gJy8nIDogX29wdGlvbnMkcGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG5cbiAgdmFyIF9jb21waWxlUGF0aCA9IGNvbXBpbGVQYXRoKHBhdGgsIHsgZW5kOiBleGFjdCwgc3RyaWN0OiBzdHJpY3QsIHNlbnNpdGl2ZTogc2Vuc2l0aXZlIH0pLFxuICAgICAgcmUgPSBfY29tcGlsZVBhdGgucmUsXG4gICAgICBrZXlzID0gX2NvbXBpbGVQYXRoLmtleXM7XG5cbiAgdmFyIG1hdGNoID0gcmUuZXhlYyhwYXRobmFtZSk7XG5cbiAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG5cbiAgdmFyIHVybCA9IG1hdGNoWzBdLFxuICAgICAgdmFsdWVzID0gbWF0Y2guc2xpY2UoMSk7XG5cbiAgdmFyIGlzRXhhY3QgPSBwYXRobmFtZSA9PT0gdXJsO1xuXG4gIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRoOiBwYXRoLCAvLyB0aGUgcGF0aCBwYXR0ZXJuIHVzZWQgdG8gbWF0Y2hcbiAgICB1cmw6IHBhdGggPT09ICcvJyAmJiB1cmwgPT09ICcnID8gJy8nIDogdXJsLCAvLyB0aGUgbWF0Y2hlZCBwb3J0aW9uIG9mIHRoZSBVUkxcbiAgICBpc0V4YWN0OiBpc0V4YWN0LCAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcbiAgICBwYXJhbXM6IGtleXMucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBrZXksIGluZGV4KSB7XG4gICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XG4gICAgICByZXR1cm4gbWVtbztcbiAgICB9LCB7fSlcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1hdGNoUGF0aDsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gJy4vbWF0Y2hQYXRoJztcblxudmFyIGlzRW1wdHlDaGlsZHJlbiA9IGZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBzaW5nbGUgcGF0aCBhbmQgcmVuZGVyaW5nLlxuICovXG5cbnZhciBSb3V0ZSA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSb3V0ZSk7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBtYXRjaDogX3RoaXMuY29tcHV0ZU1hdGNoKF90aGlzLnByb3BzLCBfdGhpcy5jb250ZXh0LnJvdXRlcilcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIFJvdXRlLnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvdXRlcjogX2V4dGVuZHMoe30sIHRoaXMuY29udGV4dC5yb3V0ZXIsIHtcbiAgICAgICAgcm91dGU6IHtcbiAgICAgICAgICBsb2NhdGlvbjogdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCB0aGlzLmNvbnRleHQucm91dGVyLnJvdXRlLmxvY2F0aW9uLFxuICAgICAgICAgIG1hdGNoOiB0aGlzLnN0YXRlLm1hdGNoXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcHV0ZU1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZU1hdGNoKF9yZWYsIHJvdXRlcikge1xuICAgIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgICBsb2NhdGlvbiA9IF9yZWYubG9jYXRpb24sXG4gICAgICAgIHBhdGggPSBfcmVmLnBhdGgsXG4gICAgICAgIHN0cmljdCA9IF9yZWYuc3RyaWN0LFxuICAgICAgICBleGFjdCA9IF9yZWYuZXhhY3QsXG4gICAgICAgIHNlbnNpdGl2ZSA9IF9yZWYuc2Vuc2l0aXZlO1xuXG4gICAgaWYgKGNvbXB1dGVkTWF0Y2gpIHJldHVybiBjb21wdXRlZE1hdGNoOyAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcblxuICAgIGludmFyaWFudChyb3V0ZXIsICdZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlPiBvciB3aXRoUm91dGVyKCkgb3V0c2lkZSBhIDxSb3V0ZXI+Jyk7XG5cbiAgICB2YXIgcm91dGUgPSByb3V0ZXIucm91dGU7XG5cbiAgICB2YXIgcGF0aG5hbWUgPSAobG9jYXRpb24gfHwgcm91dGUubG9jYXRpb24pLnBhdGhuYW1lO1xuXG4gICAgcmV0dXJuIHBhdGggPyBtYXRjaFBhdGgocGF0aG5hbWUsIHsgcGF0aDogcGF0aCwgc3RyaWN0OiBzdHJpY3QsIGV4YWN0OiBleGFjdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSkgOiByb3V0ZS5tYXRjaDtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksICdZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWQnKTtcblxuICAgIHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikpLCAnWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY2hpbGRyZW4+IHdpbGwgYmUgaWdub3JlZCcpO1xuXG4gICAgd2FybmluZyghKHRoaXMucHJvcHMucmVuZGVyICYmIHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSksICdZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIHJlbmRlcj4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjaGlsZHJlbj4gd2lsbCBiZSBpZ25vcmVkJyk7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcywgbmV4dENvbnRleHQpIHtcbiAgICB3YXJuaW5nKCEobmV4dFByb3BzLmxvY2F0aW9uICYmICF0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcblxuICAgIHdhcm5pbmcoISghbmV4dFByb3BzLmxvY2F0aW9uICYmIHRoaXMucHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIG1hdGNoOiB0aGlzLmNvbXB1dGVNYXRjaChuZXh0UHJvcHMsIG5leHRDb250ZXh0LnJvdXRlcilcbiAgICB9KTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBtYXRjaCA9IHRoaXMuc3RhdGUubWF0Y2g7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3Byb3BzLmNoaWxkcmVuLFxuICAgICAgICBjb21wb25lbnQgPSBfcHJvcHMuY29tcG9uZW50LFxuICAgICAgICByZW5kZXIgPSBfcHJvcHMucmVuZGVyO1xuICAgIHZhciBfY29udGV4dCRyb3V0ZXIgPSB0aGlzLmNvbnRleHQucm91dGVyLFxuICAgICAgICBoaXN0b3J5ID0gX2NvbnRleHQkcm91dGVyLmhpc3RvcnksXG4gICAgICAgIHJvdXRlID0gX2NvbnRleHQkcm91dGVyLnJvdXRlLFxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gX2NvbnRleHQkcm91dGVyLnN0YXRpY0NvbnRleHQ7XG5cbiAgICB2YXIgbG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IHJvdXRlLmxvY2F0aW9uO1xuICAgIHZhciBwcm9wcyA9IHsgbWF0Y2g6IG1hdGNoLCBsb2NhdGlvbjogbG9jYXRpb24sIGhpc3Rvcnk6IGhpc3RvcnksIHN0YXRpY0NvbnRleHQ6IHN0YXRpY0NvbnRleHQgfTtcblxuICAgIHJldHVybiBjb21wb25lbnQgPyAvLyBjb21wb25lbnQgcHJvcCBnZXRzIGZpcnN0IHByaW9yaXR5LCBvbmx5IGNhbGxlZCBpZiB0aGVyZSdzIGEgbWF0Y2hcbiAgICBtYXRjaCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiBudWxsIDogcmVuZGVyID8gLy8gcmVuZGVyIHByb3AgaXMgbmV4dCwgb25seSBjYWxsZWQgaWYgdGhlcmUncyBhIG1hdGNoXG4gICAgbWF0Y2ggPyByZW5kZXIocHJvcHMpIDogbnVsbCA6IGNoaWxkcmVuID8gLy8gY2hpbGRyZW4gY29tZSBsYXN0LCBhbHdheXMgY2FsbGVkXG4gICAgdHlwZW9mIGNoaWxkcmVuID09PSAnZnVuY3Rpb24nID8gY2hpbGRyZW4ocHJvcHMpIDogIWlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikgPyBSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKSA6IG51bGwgOiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUm91dGUucHJvcFR5cGVzID0ge1xuICBjb21wdXRlZE1hdGNoOiBQcm9wVHlwZXMub2JqZWN0LCAvLyBwcml2YXRlLCBmcm9tIDxTd2l0Y2g+XG4gIHBhdGg6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29tcG9uZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxuICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxufTtcblJvdXRlLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICByb3V0ZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfSlcbn07XG5Sb3V0ZS5jaGlsZENvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUm91dGU7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBSb3V0ZSBmcm9tICdyZWFjdC1yb3V0ZXIvZXMvUm91dGUnO1xuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHsgdmFyIHRhcmdldCA9IHt9OyBmb3IgKHZhciBpIGluIG9iaikgeyBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTsgdGFyZ2V0W2ldID0gb2JqW2ldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUm91dGUgZnJvbSAnLi9Sb3V0ZSc7XG5pbXBvcnQgTGluayBmcm9tICcuL0xpbmsnO1xuXG4vKipcbiAqIEEgPExpbms+IHdyYXBwZXIgdGhhdCBrbm93cyBpZiBpdCdzIFwiYWN0aXZlXCIgb3Igbm90LlxuICovXG52YXIgTmF2TGluayA9IGZ1bmN0aW9uIE5hdkxpbmsoX3JlZikge1xuICB2YXIgdG8gPSBfcmVmLnRvLFxuICAgICAgZXhhY3QgPSBfcmVmLmV4YWN0LFxuICAgICAgc3RyaWN0ID0gX3JlZi5zdHJpY3QsXG4gICAgICBsb2NhdGlvbiA9IF9yZWYubG9jYXRpb24sXG4gICAgICBhY3RpdmVDbGFzc05hbWUgPSBfcmVmLmFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgYWN0aXZlU3R5bGUgPSBfcmVmLmFjdGl2ZVN0eWxlLFxuICAgICAgc3R5bGUgPSBfcmVmLnN0eWxlLFxuICAgICAgZ2V0SXNBY3RpdmUgPSBfcmVmLmlzQWN0aXZlLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmLmFyaWFDdXJyZW50LFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbJ3RvJywgJ2V4YWN0JywgJ3N0cmljdCcsICdsb2NhdGlvbicsICdhY3RpdmVDbGFzc05hbWUnLCAnY2xhc3NOYW1lJywgJ2FjdGl2ZVN0eWxlJywgJ3N0eWxlJywgJ2lzQWN0aXZlJywgJ2FyaWFDdXJyZW50J10pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7XG4gICAgcGF0aDogKHR5cGVvZiB0byA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YodG8pKSA9PT0gJ29iamVjdCcgPyB0by5wYXRobmFtZSA6IHRvLFxuICAgIGV4YWN0OiBleGFjdCxcbiAgICBzdHJpY3Q6IHN0cmljdCxcbiAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgY2hpbGRyZW46IGZ1bmN0aW9uIGNoaWxkcmVuKF9yZWYyKSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfcmVmMi5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaCA9IF9yZWYyLm1hdGNoO1xuXG4gICAgICB2YXIgaXNBY3RpdmUgPSAhIShnZXRJc0FjdGl2ZSA/IGdldElzQWN0aXZlKG1hdGNoLCBsb2NhdGlvbikgOiBtYXRjaCk7XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIF9leHRlbmRzKHtcbiAgICAgICAgdG86IHRvLFxuICAgICAgICBjbGFzc05hbWU6IGlzQWN0aXZlID8gW2NsYXNzTmFtZSwgYWN0aXZlQ2xhc3NOYW1lXS5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfSkuam9pbignICcpIDogY2xhc3NOYW1lLFxuICAgICAgICBzdHlsZTogaXNBY3RpdmUgPyBfZXh0ZW5kcyh7fSwgc3R5bGUsIGFjdGl2ZVN0eWxlKSA6IHN0eWxlLFxuICAgICAgICAnYXJpYS1jdXJyZW50JzogaXNBY3RpdmUgJiYgYXJpYUN1cnJlbnRcbiAgICAgIH0sIHJlc3QpKTtcbiAgICB9XG4gIH0pO1xufTtcblxuTmF2TGluay5wcm9wVHlwZXMgPSB7XG4gIHRvOiBMaW5rLnByb3BUeXBlcy50byxcbiAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxuICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgYWN0aXZlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgaXNBY3RpdmU6IFByb3BUeXBlcy5mdW5jLFxuICBhcmlhQ3VycmVudDogUHJvcFR5cGVzLm9uZU9mKFsncGFnZScsICdzdGVwJywgJ2xvY2F0aW9uJywgJ3RydWUnXSlcbn07XG5cbk5hdkxpbmsuZGVmYXVsdFByb3BzID0ge1xuICBhY3RpdmVDbGFzc05hbWU6ICdhY3RpdmUnLFxuICBhcmlhQ3VycmVudDogJ3RydWUnXG59O1xuXG5leHBvcnQgZGVmYXVsdCBOYXZMaW5rOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHByb21wdGluZyB0aGUgdXNlciBiZWZvcmUgbmF2aWdhdGluZyBhd2F5XG4gKiBmcm9tIGEgc2NyZWVuIHdpdGggYSBjb21wb25lbnQuXG4gKi9cblxudmFyIFByb21wdCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhQcm9tcHQsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFByb21wdCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHJvbXB0KTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgUHJvbXB0LnByb3RvdHlwZS5lbmFibGUgPSBmdW5jdGlvbiBlbmFibGUobWVzc2FnZSkge1xuICAgIGlmICh0aGlzLnVuYmxvY2spIHRoaXMudW5ibG9jaygpO1xuXG4gICAgdGhpcy51bmJsb2NrID0gdGhpcy5jb250ZXh0LnJvdXRlci5oaXN0b3J5LmJsb2NrKG1lc3NhZ2UpO1xuICB9O1xuXG4gIFByb21wdC5wcm90b3R5cGUuZGlzYWJsZSA9IGZ1bmN0aW9uIGRpc2FibGUoKSB7XG4gICAgaWYgKHRoaXMudW5ibG9jaykge1xuICAgICAgdGhpcy51bmJsb2NrKCk7XG4gICAgICB0aGlzLnVuYmxvY2sgPSBudWxsO1xuICAgIH1cbiAgfTtcblxuICBQcm9tcHQucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICBpbnZhcmlhbnQodGhpcy5jb250ZXh0LnJvdXRlciwgJ1lvdSBzaG91bGQgbm90IHVzZSA8UHJvbXB0PiBvdXRzaWRlIGEgPFJvdXRlcj4nKTtcblxuICAgIGlmICh0aGlzLnByb3BzLndoZW4pIHRoaXMuZW5hYmxlKHRoaXMucHJvcHMubWVzc2FnZSk7XG4gIH07XG5cbiAgUHJvbXB0LnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICBpZiAobmV4dFByb3BzLndoZW4pIHtcbiAgICAgIGlmICghdGhpcy5wcm9wcy53aGVuIHx8IHRoaXMucHJvcHMubWVzc2FnZSAhPT0gbmV4dFByb3BzLm1lc3NhZ2UpIHRoaXMuZW5hYmxlKG5leHRQcm9wcy5tZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5kaXNhYmxlKCk7XG4gICAgfVxuICB9O1xuXG4gIFByb21wdC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLmRpc2FibGUoKTtcbiAgfTtcblxuICBQcm9tcHQucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUHJvbXB0O1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Qcm9tcHQucHJvcFR5cGVzID0ge1xuICB3aGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgbWVzc2FnZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKS5pc1JlcXVpcmVkXG59O1xuUHJvbXB0LmRlZmF1bHRQcm9wcyA9IHtcbiAgd2hlbjogdHJ1ZVxufTtcblByb21wdC5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgYmxvY2s6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgICB9KS5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUHJvbXB0OyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgUHJvbXB0IGZyb20gJ3JlYWN0LXJvdXRlci9lcy9Qcm9tcHQnO1xuXG5leHBvcnQgZGVmYXVsdCBQcm9tcHQ7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB7IHBhcnNlUGF0aCB9IGZyb20gJy4vUGF0aFV0aWxzJztcblxuZXhwb3J0IHZhciBjcmVhdGVMb2NhdGlvbiA9IGZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb24gPSB2b2lkIDA7XG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG5cbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59O1xuXG5leHBvcnQgdmFyIGxvY2F0aW9uc0FyZUVxdWFsID0gZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59OyIsImV4cG9ydCB2YXIgYWRkTGVhZGluZ1NsYXNoID0gZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgc3RyaXBMZWFkaW5nU2xhc2ggPSBmdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBoYXNCYXNlbmFtZSA9IGZ1bmN0aW9uIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gbmV3IFJlZ0V4cCgnXicgKyBwcmVmaXggKyAnKFxcXFwvfFxcXFw/fCN8JCknLCAnaScpLnRlc3QocGF0aCk7XG59O1xuXG5leHBvcnQgdmFyIHN0cmlwQmFzZW5hbWUgPSBmdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgc3RyaXBUcmFpbGluZ1NsYXNoID0gZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgcGFyc2VQYXRoID0gZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcblxuICB2YXIgaGFzaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignIycpO1xuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59O1xuXG5leHBvcnQgdmFyIGNyZWF0ZVBhdGggPSBmdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG5cblxuICB2YXIgcGF0aCA9IHBhdGhuYW1lIHx8ICcvJztcblxuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6ICc/JyArIHNlYXJjaDtcblxuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiAnIycgKyBoYXNoO1xuXG4gIHJldHVybiBwYXRoO1xufTsiLCJleHBvcnQgdmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5cbmV4cG9ydCB2YXIgYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIobm9kZSwgZXZlbnQsIGxpc3RlbmVyKSB7XG4gIHJldHVybiBub2RlLmFkZEV2ZW50TGlzdGVuZXIgPyBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSkgOiBub2RlLmF0dGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xufTtcblxuZXhwb3J0IHZhciByZW1vdmVFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcihub2RlLCBldmVudCwgbGlzdGVuZXIpIHtcbiAgcmV0dXJuIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lciA/IG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKSA6IG5vZGUuZGV0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG59O1xuXG5leHBvcnQgdmFyIGdldENvbmZpcm1hdGlvbiA9IGZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICByZXR1cm4gY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpO1xufTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5leHBvcnQgdmFyIHN1cHBvcnRzSGlzdG9yeSA9IGZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG5cbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG5cbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5leHBvcnQgdmFyIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn07XG5cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5leHBvcnQgdmFyIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoID0gZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5leHBvcnQgdmFyIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQgPSBmdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XG59OyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgeyBhZGRMZWFkaW5nU2xhc2gsIHN0cmlwVHJhaWxpbmdTbGFzaCwgaGFzQmFzZW5hbWUsIHN0cmlwQmFzZW5hbWUsIGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5pbXBvcnQgeyBjYW5Vc2VET00sIGFkZEV2ZW50TGlzdGVuZXIsIHJlbW92ZUV2ZW50TGlzdGVuZXIsIGdldENvbmZpcm1hdGlvbiwgc3VwcG9ydHNIaXN0b3J5LCBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlLCBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IH0gZnJvbSAnLi9ET01VdGlscyc7XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbnZhciBnZXRIaXN0b3J5U3RhdGUgPSBmdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cbnZhciBjcmVhdGVCcm93c2VySGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KCkge1xuICB2YXIgcHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gIGludmFyaWFudChjYW5Vc2VET00sICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKTtcblxuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuXG4gIHZhciBfcHJvcHMkZm9yY2VSZWZyZXNoID0gcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHVuZGVmaW5lZCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBwcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB1bmRlZmluZWQgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcblxuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIHZhciBnZXRET01Mb2NhdGlvbiA9IGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xuICAgIHZhciBfcmVmID0gaGlzdG9yeVN0YXRlIHx8IHt9LFxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xuXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG5cblxuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuXG4gICAgd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKTtcblxuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuXG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9O1xuXG4gIHZhciBjcmVhdGVLZXkgPSBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9O1xuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgdmFyIHNldFN0YXRlID0gZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBoYW5kbGVQb3BTdGF0ZSA9IGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcblxuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICB9O1xuXG4gIHZhciBoYW5kbGVIYXNoQ2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcbiAgfTtcblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgdmFyIGhhbmRsZVBvcCA9IGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZXZlcnRQb3AgPSBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuXG4gICAgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcblxuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG5cbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuXG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG5cbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTtcblxuICAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH07XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZSh7IGtleToga2V5LCBzdGF0ZTogc3RhdGUgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG5cbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuXG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5Jyk7XG5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoeyBrZXk6IGtleSwgc3RhdGU6IHN0YXRlIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcblxuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG5cbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKTtcblxuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIHZhciBjaGVja0RPTUxpc3RlbmVycyA9IGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuXG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIGFkZEV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcih3aW5kb3csIFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcblxuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSByZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUJyb3dzZXJIaXN0b3J5OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsIH0gZnJvbSAnLi9Mb2NhdGlvblV0aWxzJztcbmltcG9ydCB7IGFkZExlYWRpbmdTbGFzaCwgc3RyaXBMZWFkaW5nU2xhc2gsIHN0cmlwVHJhaWxpbmdTbGFzaCwgaGFzQmFzZW5hbWUsIHN0cmlwQmFzZW5hbWUsIGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5pbXBvcnQgeyBjYW5Vc2VET00sIGFkZEV2ZW50TGlzdGVuZXIsIHJlbW92ZUV2ZW50TGlzdGVuZXIsIGdldENvbmZpcm1hdGlvbiwgc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2ggfSBmcm9tICcuL0RPTVV0aWxzJztcblxudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbnZhciBnZXRIYXNoUGF0aCA9IGZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufTtcblxudmFyIHB1c2hIYXNoUGF0aCA9IGZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHJldHVybiB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59O1xuXG52YXIgcmVwbGFjZUhhc2hQYXRoID0gZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgdmFyIGhhc2hJbmRleCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLmluZGV4T2YoJyMnKTtcblxuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZSh3aW5kb3cubG9jYXRpb24uaHJlZi5zbGljZSgwLCBoYXNoSW5kZXggPj0gMCA/IGhhc2hJbmRleCA6IDApICsgJyMnICsgcGF0aCk7XG59O1xuXG52YXIgY3JlYXRlSGFzaEhpc3RvcnkgPSBmdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblxuICBpbnZhcmlhbnQoY2FuVXNlRE9NLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJyk7XG5cbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG5cbiAgdmFyIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IHByb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB1bmRlZmluZWQgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBwcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB1bmRlZmluZWQgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuXG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuXG4gIHZhciBnZXRET01Mb2NhdGlvbiA9IGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcblxuICAgIHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJyk7XG5cbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcblxuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfTtcblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfTtcblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICB2YXIgaGFuZGxlSGFzaENoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcblxuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaGFuZGxlUG9wID0gZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG5cbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHJldmVydFBvcCA9IGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuXG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcblxuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuXG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG5cbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfTtcblxuICAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9O1xuXG4gIHZhciBwdXNoID0gZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG5cbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcblxuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG5cbiAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpO1xuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIHJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG5cbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcblxuICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpO1xuXG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIHZhciBjaGVja0RPTUxpc3RlbmVycyA9IGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgdmFyIGJsb2NrID0gZnVuY3Rpb24gYmxvY2soKSB7XG4gICAgdmFyIHByb21wdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlSGFzaEhpc3Rvcnk7IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCB7IGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5cbnZhciBjbGFtcCA9IGZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cbnZhciBjcmVhdGVNZW1vcnlIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIGdldFVzZXJDb25maXJtYXRpb24gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdW5kZWZpbmVkID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdW5kZWZpbmVkID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdW5kZWZpbmVkID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG5cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBjcmVhdGVLZXkgPSBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9O1xuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuXG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuXG4gICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvID0gZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGNhbkdvID0gZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfTtcblxuICB2YXIgYmxvY2sgPSBmdW5jdGlvbiBibG9jaygpIHtcbiAgICB2YXIgcHJvbXB0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlTWVtb3J5SGlzdG9yeTsiLCJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwgfSBmcm9tICdoaXN0b3J5JztcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgdXBkYXRpbmcgdGhlIGxvY2F0aW9uIHByb2dyYW1tYXRpY2FsbHlcbiAqIHdpdGggYSBjb21wb25lbnQuXG4gKi9cblxudmFyIFJlZGlyZWN0ID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJlZGlyZWN0LCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSZWRpcmVjdCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVkaXJlY3QpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBSZWRpcmVjdC5wcm90b3R5cGUuaXNTdGF0aWMgPSBmdW5jdGlvbiBpc1N0YXRpYygpIHtcbiAgICByZXR1cm4gdGhpcy5jb250ZXh0LnJvdXRlciAmJiB0aGlzLmNvbnRleHQucm91dGVyLnN0YXRpY0NvbnRleHQ7XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICBpbnZhcmlhbnQodGhpcy5jb250ZXh0LnJvdXRlciwgJ1lvdSBzaG91bGQgbm90IHVzZSA8UmVkaXJlY3Q+IG91dHNpZGUgYSA8Um91dGVyPicpO1xuXG4gICAgaWYgKHRoaXMuaXNTdGF0aWMoKSkgdGhpcy5wZXJmb3JtKCk7XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKCF0aGlzLmlzU3RhdGljKCkpIHRoaXMucGVyZm9ybSgpO1xuICB9O1xuXG4gIFJlZGlyZWN0LnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgdmFyIHByZXZUbyA9IGNyZWF0ZUxvY2F0aW9uKHByZXZQcm9wcy50byk7XG4gICAgdmFyIG5leHRUbyA9IGNyZWF0ZUxvY2F0aW9uKHRoaXMucHJvcHMudG8pO1xuXG4gICAgaWYgKGxvY2F0aW9uc0FyZUVxdWFsKHByZXZUbywgbmV4dFRvKSkge1xuICAgICAgd2FybmluZyhmYWxzZSwgJ1lvdSB0cmllZCB0byByZWRpcmVjdCB0byB0aGUgc2FtZSByb3V0ZSB5b3VcXCdyZSBjdXJyZW50bHkgb246ICcgKyAoJ1wiJyArIG5leHRUby5wYXRobmFtZSArIG5leHRUby5zZWFyY2ggKyAnXCInKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5wZXJmb3JtKCk7XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLnBlcmZvcm0gPSBmdW5jdGlvbiBwZXJmb3JtKCkge1xuICAgIHZhciBoaXN0b3J5ID0gdGhpcy5jb250ZXh0LnJvdXRlci5oaXN0b3J5O1xuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBwdXNoID0gX3Byb3BzLnB1c2gsXG4gICAgICAgIHRvID0gX3Byb3BzLnRvO1xuXG5cbiAgICBpZiAocHVzaCkge1xuICAgICAgaGlzdG9yeS5wdXNoKHRvKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaGlzdG9yeS5yZXBsYWNlKHRvKTtcbiAgICB9XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUmVkaXJlY3Q7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblJlZGlyZWN0LnByb3BUeXBlcyA9IHtcbiAgcHVzaDogUHJvcFR5cGVzLmJvb2wsXG4gIGZyb206IFByb3BUeXBlcy5zdHJpbmcsXG4gIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZFxufTtcblJlZGlyZWN0LmRlZmF1bHRQcm9wcyA9IHtcbiAgcHVzaDogZmFsc2Vcbn07XG5SZWRpcmVjdC5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgcHVzaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIHJlcGxhY2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgICB9KS5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfSkuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBSZWRpcmVjdDsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFJlZGlyZWN0IGZyb20gJ3JlYWN0LXJvdXRlci9lcy9SZWRpcmVjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IFJlZGlyZWN0OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHsgdmFyIHRhcmdldCA9IHt9OyBmb3IgKHZhciBpIGluIG9iaikgeyBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTsgdGFyZ2V0W2ldID0gb2JqW2ldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgYWRkTGVhZGluZ1NsYXNoLCBjcmVhdGVQYXRoLCBwYXJzZVBhdGggfSBmcm9tICdoaXN0b3J5L1BhdGhVdGlscyc7XG5pbXBvcnQgUm91dGVyIGZyb20gJy4vUm91dGVyJztcblxudmFyIG5vcm1hbGl6ZUxvY2F0aW9uID0gZnVuY3Rpb24gbm9ybWFsaXplTG9jYXRpb24ob2JqZWN0KSB7XG4gIHZhciBfb2JqZWN0JHBhdGhuYW1lID0gb2JqZWN0LnBhdGhuYW1lLFxuICAgICAgcGF0aG5hbWUgPSBfb2JqZWN0JHBhdGhuYW1lID09PSB1bmRlZmluZWQgPyAnLycgOiBfb2JqZWN0JHBhdGhuYW1lLFxuICAgICAgX29iamVjdCRzZWFyY2ggPSBvYmplY3Quc2VhcmNoLFxuICAgICAgc2VhcmNoID0gX29iamVjdCRzZWFyY2ggPT09IHVuZGVmaW5lZCA/ICcnIDogX29iamVjdCRzZWFyY2gsXG4gICAgICBfb2JqZWN0JGhhc2ggPSBvYmplY3QuaGFzaCxcbiAgICAgIGhhc2ggPSBfb2JqZWN0JGhhc2ggPT09IHVuZGVmaW5lZCA/ICcnIDogX29iamVjdCRoYXNoO1xuXG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxuICB9O1xufTtcblxudmFyIGFkZEJhc2VuYW1lID0gZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcblxuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSkgKyBsb2NhdGlvbi5wYXRobmFtZVxuICB9KTtcbn07XG5cbnZhciBzdHJpcEJhc2VuYW1lID0gZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuXG4gIHZhciBiYXNlID0gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKTtcblxuICBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZihiYXNlKSAhPT0gMCkgcmV0dXJuIGxvY2F0aW9uO1xuXG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyKGJhc2UubGVuZ3RoKVxuICB9KTtcbn07XG5cbnZhciBjcmVhdGVMb2NhdGlvbiA9IGZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgbG9jYXRpb24gPT09ICdzdHJpbmcnID8gcGFyc2VQYXRoKGxvY2F0aW9uKSA6IG5vcm1hbGl6ZUxvY2F0aW9uKGxvY2F0aW9uKTtcbn07XG5cbnZhciBjcmVhdGVVUkwgPSBmdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gJ3N0cmluZycgPyBsb2NhdGlvbiA6IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xufTtcblxudmFyIHN0YXRpY0hhbmRsZXIgPSBmdW5jdGlvbiBzdGF0aWNIYW5kbGVyKG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpbnZhcmlhbnQoZmFsc2UsICdZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj4nLCBtZXRob2ROYW1lKTtcbiAgfTtcbn07XG5cbnZhciBub29wID0gZnVuY3Rpb24gbm9vcCgpIHt9O1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgdG9wLWxldmVsIEFQSSBmb3IgYSBcInN0YXRpY1wiIDxSb3V0ZXI+LCBzby1jYWxsZWQgYmVjYXVzZSBpdFxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxuICogc2VydmVyLXJlbmRlcmluZyBzY2VuYXJpb3MuXG4gKi9cblxudmFyIFN0YXRpY1JvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhTdGF0aWNSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN0YXRpY1JvdXRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN0YXRpY1JvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuY3JlYXRlSHJlZiA9IGZ1bmN0aW9uIChwYXRoKSB7XG4gICAgICByZXR1cm4gYWRkTGVhZGluZ1NsYXNoKF90aGlzLnByb3BzLmJhc2VuYW1lICsgY3JlYXRlVVJMKHBhdGgpKTtcbiAgICB9LCBfdGhpcy5oYW5kbGVQdXNoID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzLmJhc2VuYW1lLFxuICAgICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wcy5jb250ZXh0O1xuXG4gICAgICBjb250ZXh0LmFjdGlvbiA9ICdQVVNIJztcbiAgICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcbiAgICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICAgIH0sIF90aGlzLmhhbmRsZVJlcGxhY2UgPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wczIgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzMi5iYXNlbmFtZSxcbiAgICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMyLmNvbnRleHQ7XG5cbiAgICAgIGNvbnRleHQuYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xuICAgICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XG4gICAgfSwgX3RoaXMuaGFuZGxlTGlzdGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfSwgX3RoaXMuaGFuZGxlQmxvY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXI6IHtcbiAgICAgICAgc3RhdGljQ29udGV4dDogdGhpcy5wcm9wcy5jb250ZXh0XG4gICAgICB9XG4gICAgfTtcbiAgfTtcblxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksICc8U3RhdGljUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCAnICsgJ3VzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IFN0YXRpY1JvdXRlciBhcyBSb3V0ZXIgfWAuJyk7XG4gIH07XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGJhc2VuYW1lID0gX3Byb3BzLmJhc2VuYW1lLFxuICAgICAgICBjb250ZXh0ID0gX3Byb3BzLmNvbnRleHQsXG4gICAgICAgIGxvY2F0aW9uID0gX3Byb3BzLmxvY2F0aW9uLFxuICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcHJvcHMsIFsnYmFzZW5hbWUnLCAnY29udGV4dCcsICdsb2NhdGlvbiddKTtcblxuICAgIHZhciBoaXN0b3J5ID0ge1xuICAgICAgY3JlYXRlSHJlZjogdGhpcy5jcmVhdGVIcmVmLFxuICAgICAgYWN0aW9uOiAnUE9QJyxcbiAgICAgIGxvY2F0aW9uOiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpLFxuICAgICAgcHVzaDogdGhpcy5oYW5kbGVQdXNoLFxuICAgICAgcmVwbGFjZTogdGhpcy5oYW5kbGVSZXBsYWNlLFxuICAgICAgZ286IHN0YXRpY0hhbmRsZXIoJ2dvJyksXG4gICAgICBnb0JhY2s6IHN0YXRpY0hhbmRsZXIoJ2dvQmFjaycpLFxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKCdnb0ZvcndhcmQnKSxcbiAgICAgIGxpc3RlbjogdGhpcy5oYW5kbGVMaXN0ZW4sXG4gICAgICBibG9jazogdGhpcy5oYW5kbGVCbG9ja1xuICAgIH07XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIF9leHRlbmRzKHt9LCBwcm9wcywgeyBoaXN0b3J5OiBoaXN0b3J5IH0pKTtcbiAgfTtcblxuICByZXR1cm4gU3RhdGljUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5TdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xuICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBsb2NhdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pXG59O1xuU3RhdGljUm91dGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgYmFzZW5hbWU6ICcnLFxuICBsb2NhdGlvbjogJy8nXG59O1xuU3RhdGljUm91dGVyLmNoaWxkQ29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBTdGF0aWNSb3V0ZXI7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBTdGF0aWNSb3V0ZXIgZnJvbSAncmVhY3Qtcm91dGVyL2VzL1N0YXRpY1JvdXRlcic7XG5cbmV4cG9ydCBkZWZhdWx0IFN0YXRpY1JvdXRlcjsiLCJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gJy4vbWF0Y2hQYXRoJztcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTd2l0Y2gpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICBpbnZhcmlhbnQodGhpcy5jb250ZXh0LnJvdXRlciwgJ1lvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj4nKTtcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIHdhcm5pbmcoIShuZXh0UHJvcHMubG9jYXRpb24gJiYgIXRoaXMucHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcblxuICAgIHdhcm5pbmcoISghbmV4dFByb3BzLmxvY2F0aW9uICYmIHRoaXMucHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciByb3V0ZSA9IHRoaXMuY29udGV4dC5yb3V0ZXIucm91dGU7XG4gICAgdmFyIGNoaWxkcmVuID0gdGhpcy5wcm9wcy5jaGlsZHJlbjtcblxuICAgIHZhciBsb2NhdGlvbiA9IHRoaXMucHJvcHMubG9jYXRpb24gfHwgcm91dGUubG9jYXRpb247XG5cbiAgICB2YXIgbWF0Y2ggPSB2b2lkIDAsXG4gICAgICAgIGNoaWxkID0gdm9pZCAwO1xuICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goY2hpbGRyZW4sIGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICBpZiAoIVJlYWN0LmlzVmFsaWRFbGVtZW50KGVsZW1lbnQpKSByZXR1cm47XG5cbiAgICAgIHZhciBfZWxlbWVudCRwcm9wcyA9IGVsZW1lbnQucHJvcHMsXG4gICAgICAgICAgcGF0aFByb3AgPSBfZWxlbWVudCRwcm9wcy5wYXRoLFxuICAgICAgICAgIGV4YWN0ID0gX2VsZW1lbnQkcHJvcHMuZXhhY3QsXG4gICAgICAgICAgc3RyaWN0ID0gX2VsZW1lbnQkcHJvcHMuc3RyaWN0LFxuICAgICAgICAgIHNlbnNpdGl2ZSA9IF9lbGVtZW50JHByb3BzLnNlbnNpdGl2ZSxcbiAgICAgICAgICBmcm9tID0gX2VsZW1lbnQkcHJvcHMuZnJvbTtcblxuICAgICAgdmFyIHBhdGggPSBwYXRoUHJvcCB8fCBmcm9tO1xuXG4gICAgICBpZiAobWF0Y2ggPT0gbnVsbCkge1xuICAgICAgICBjaGlsZCA9IGVsZW1lbnQ7XG4gICAgICAgIG1hdGNoID0gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgeyBwYXRoOiBwYXRoLCBleGFjdDogZXhhY3QsIHN0cmljdDogc3RyaWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9KSA6IHJvdXRlLm1hdGNoO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCB7IGxvY2F0aW9uOiBsb2NhdGlvbiwgY29tcHV0ZWRNYXRjaDogbWF0Y2ggfSkgOiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblN3aXRjaC5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICByb3V0ZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWRcbn07XG5Td2l0Y2gucHJvcFR5cGVzID0ge1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFN3aXRjaDsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFN3aXRjaCBmcm9tICdyZWFjdC1yb3V0ZXIvZXMvU3dpdGNoJztcblxuZXhwb3J0IGRlZmF1bHQgU3dpdGNoOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gJ3JlYWN0LXJvdXRlci9lcy9tYXRjaFBhdGgnO1xuXG5leHBvcnQgZGVmYXVsdCBtYXRjaFBhdGg7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuaW1wb3J0IFJvdXRlIGZyb20gJy4vUm91dGUnO1xuXG4vKipcbiAqIEEgcHVibGljIGhpZ2hlci1vcmRlciBjb21wb25lbnQgdG8gYWNjZXNzIHRoZSBpbXBlcmF0aXZlIEFQSVxuICovXG52YXIgd2l0aFJvdXRlciA9IGZ1bmN0aW9uIHdpdGhSb3V0ZXIoQ29tcG9uZW50KSB7XG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMocHJvcHMsIFsnd3JhcHBlZENvbXBvbmVudFJlZiddKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHJvdXRlQ29tcG9uZW50UHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcmVtYWluaW5nUHJvcHMsIHJvdXRlQ29tcG9uZW50UHJvcHMsIHsgcmVmOiB3cmFwcGVkQ29tcG9uZW50UmVmIH0pKTtcbiAgICAgIH0gfSk7XG4gIH07XG5cbiAgQy5kaXNwbGF5TmFtZSA9ICd3aXRoUm91dGVyKCcgKyAoQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lKSArICcpJztcbiAgQy5XcmFwcGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuICBDLnByb3BUeXBlcyA9IHtcbiAgICB3cmFwcGVkQ29tcG9uZW50UmVmOiBQcm9wVHlwZXMuZnVuY1xuICB9O1xuXG4gIHJldHVybiBob2lzdFN0YXRpY3MoQywgQ29tcG9uZW50KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXI7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCB3aXRoUm91dGVyIGZyb20gJ3JlYWN0LXJvdXRlci9lcy93aXRoUm91dGVyJztcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcjsiLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfd2FybmluZyA9IHJlcXVpcmUoJ3dhcm5pbmcnKTtcblxudmFyIF93YXJuaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3dhcm5pbmcpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgPSBmdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgdmFyIHNldFByb21wdCA9IGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgKDAsIF93YXJuaW5nMi5kZWZhdWx0KShwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJyk7XG5cbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgY29uZmlybVRyYW5zaXRpb25UbyA9IGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgKDAsIF93YXJuaW5nMi5kZWZhdWx0KShmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKTtcblxuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIHZhciBhcHBlbmRMaXN0ZW5lciA9IGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIHZhciBsaXN0ZW5lciA9IGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh1bmRlZmluZWQsIGFyZ3VtZW50cyk7XG4gICAgfTtcblxuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBub3RpZnlMaXN0ZW5lcnMgPSBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodW5kZWZpbmVkLCBhcmdzKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59O1xuXG5leHBvcnRzLmRlZmF1bHQgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcjsiLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmxvY2F0aW9uc0FyZUVxdWFsID0gZXhwb3J0cy5jcmVhdGVMb2NhdGlvbiA9IHVuZGVmaW5lZDtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9yZXNvbHZlUGF0aG5hbWUgPSByZXF1aXJlKCdyZXNvbHZlLXBhdGhuYW1lJyk7XG5cbnZhciBfcmVzb2x2ZVBhdGhuYW1lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Jlc29sdmVQYXRobmFtZSk7XG5cbnZhciBfdmFsdWVFcXVhbCA9IHJlcXVpcmUoJ3ZhbHVlLWVxdWFsJyk7XG5cbnZhciBfdmFsdWVFcXVhbDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWx1ZUVxdWFsKTtcblxudmFyIF9QYXRoVXRpbHMgPSByZXF1aXJlKCcuL1BhdGhVdGlscycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgY3JlYXRlTG9jYXRpb24gPSBleHBvcnRzLmNyZWF0ZUxvY2F0aW9uID0gZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSwgY3VycmVudExvY2F0aW9uKSB7XG4gIHZhciBsb2NhdGlvbiA9IHZvaWQgMDtcbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9ICgwLCBfUGF0aFV0aWxzLnBhcnNlUGF0aCkocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG5cbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gKDAsIF9yZXNvbHZlUGF0aG5hbWUyLmRlZmF1bHQpKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59O1xuXG52YXIgbG9jYXRpb25zQXJlRXF1YWwgPSBleHBvcnRzLmxvY2F0aW9uc0FyZUVxdWFsID0gZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmICgwLCBfdmFsdWVFcXVhbDIuZGVmYXVsdCkoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIFxuICovXG5cbmZ1bmN0aW9uIG1ha2VFbXB0eUZ1bmN0aW9uKGFyZykge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBhcmc7XG4gIH07XG59XG5cbi8qKlxuICogVGhpcyBmdW5jdGlvbiBhY2NlcHRzIGFuZCBkaXNjYXJkcyBpbnB1dHM7IGl0IGhhcyBubyBzaWRlIGVmZmVjdHMuIFRoaXMgaXNcbiAqIHByaW1hcmlseSB1c2VmdWwgaWRpb21hdGljYWxseSBmb3Igb3ZlcnJpZGFibGUgZnVuY3Rpb24gZW5kcG9pbnRzIHdoaWNoXG4gKiBhbHdheXMgbmVlZCB0byBiZSBjYWxsYWJsZSwgc2luY2UgSlMgbGFja3MgYSBudWxsLWNhbGwgaWRpb20gYWxhIENvY29hLlxuICovXG52YXIgZW1wdHlGdW5jdGlvbiA9IGZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fTtcblxuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJucyA9IG1ha2VFbXB0eUZ1bmN0aW9uO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc0ZhbHNlID0gbWFrZUVtcHR5RnVuY3Rpb24oZmFsc2UpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RydWUgPSBtYWtlRW1wdHlGdW5jdGlvbih0cnVlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNOdWxsID0gbWFrZUVtcHR5RnVuY3Rpb24obnVsbCk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zVGhpcyA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXM7XG59O1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc0FyZ3VtZW50ID0gZnVuY3Rpb24gKGFyZykge1xuICByZXR1cm4gYXJnO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBlbXB0eUZ1bmN0aW9uOyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpO1xuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KSk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDsiLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5mdW5jdGlvbiB2YWx1ZUVxdWFsKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHJldHVybiB0cnVlO1xuXG4gIGlmIChhID09IG51bGwgfHwgYiA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShiKSAmJiBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiYgYS5ldmVyeShmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGl0ZW0sIGJbaW5kZXhdKTtcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBhVHlwZSA9IHR5cGVvZiBhID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihhKTtcbiAgdmFyIGJUeXBlID0gdHlwZW9mIGIgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGIpO1xuXG4gIGlmIChhVHlwZSAhPT0gYlR5cGUpIHJldHVybiBmYWxzZTtcblxuICBpZiAoYVR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIGFWYWx1ZSA9IGEudmFsdWVPZigpO1xuICAgIHZhciBiVmFsdWUgPSBiLnZhbHVlT2YoKTtcblxuICAgIGlmIChhVmFsdWUgIT09IGEgfHwgYlZhbHVlICE9PSBiKSByZXR1cm4gdmFsdWVFcXVhbChhVmFsdWUsIGJWYWx1ZSk7XG5cbiAgICB2YXIgYUtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgICB2YXIgYktleXMgPSBPYmplY3Qua2V5cyhiKTtcblxuICAgIGlmIChhS2V5cy5sZW5ndGggIT09IGJLZXlzLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgcmV0dXJuIGFLZXlzLmV2ZXJ5KGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGFba2V5XSwgYltrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsdWVFcXVhbDsiLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvKSB7XG4gIHZhciBmcm9tID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnJztcblxuICB2YXIgdG9QYXJ0cyA9IHRvICYmIHRvLnNwbGl0KCcvJykgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSBmcm9tICYmIGZyb20uc3BsaXQoJy8nKSB8fCBbXTtcblxuICB2YXIgaXNUb0FicyA9IHRvICYmIGlzQWJzb2x1dGUodG8pO1xuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xuICB2YXIgbXVzdEVuZEFicyA9IGlzVG9BYnMgfHwgaXNGcm9tQWJzO1xuXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xuICAgIC8vIHRvIGlzIGFic29sdXRlXG4gICAgZnJvbVBhcnRzID0gdG9QYXJ0cztcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xuICAgIC8vIHRvIGlzIHJlbGF0aXZlLCBkcm9wIHRoZSBmaWxlbmFtZVxuICAgIGZyb21QYXJ0cy5wb3AoKTtcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xuICB9XG5cbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xuXG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoID0gdm9pZCAwO1xuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xuICAgIHZhciBsYXN0ID0gZnJvbVBhcnRzW2Zyb21QYXJ0cy5sZW5ndGggLSAxXTtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gbGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicgfHwgbGFzdCA9PT0gJyc7XG4gIH0gZWxzZSB7XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IGZyb21QYXJ0cy5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XG5cbiAgICBpZiAocGFydCA9PT0gJy4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICB9IGVsc2UgaWYgKHBhcnQgPT09ICcuLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKCFtdXN0RW5kQWJzKSBmb3IgKDsgdXAtLTsgdXApIHtcbiAgICBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcbiAgfWlmIChtdXN0RW5kQWJzICYmIGZyb21QYXJ0c1swXSAhPT0gJycgJiYgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSkpIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTsiLCJjb25zdCBCQVNFX1VSTCA9ICdodHRwczovL3JpY2thbmRtb3J0eWFwaS5jb20vYXBpLyc7XHJcbmNvbnN0IENIQVJBQ1RFUl9VUkwgPSAnY2hhcmFjdGVyLyc7XHJcblxyXG5jb25zdCBnZXQgPSB1cmwgPT4gZmV0Y2godXJsKVxyXG4gIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcclxuICAudGhlbihjaGVja1Jlc3BvbnNlRGF0YSlcclxuICBcclxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrUmVzcG9uc2VEYXRhKHJlc3BvbnNlKSB7XHJcbiAgaWYocmVzcG9uc2UuUmVzcG9uc2UgPT09ICdGYWxzZScpIHRocm93IHJlc3BvbnNlLkVycm9yO1xyXG4gIHJldHVybiByZXNwb25zZTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaENoYXJhY3RlcnMoeyBzZWFyY2ggfSwgeyBwYWdlID0gMSB9KSB7XHJcbiAgY29uc3QgcXVlcnkgPSBgP25hbWU9JHtzZWFyY2h9YDtcclxuICBjb25zdCBwYWdpbmcgPSBgcGFnZT0ke3BhZ2V9YDtcclxuXHJcbiAgcmV0dXJuICBnZXQoYCR7QkFTRV9VUkx9JHtDSEFSQUNURVJTX1VSTH0ke3F1ZXJ5fSYke3BhZ2luZ31gKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2hhcmFjdGVyKGlkKSB7XHJcbiAgY29uc3QgdXJsID0gYCR7QkFTRV9VUkx9JHtDSEFSQUNURVJfVVJMfSR7aWR9YDtcclxuICByZXR1cm4gZ2V0KHVybCk7XHJcbn0iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG52YXIgY2FuVXNlRE9NID0gZXhwb3J0cy5jYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG52YXIgYWRkRXZlbnRMaXN0ZW5lciA9IGV4cG9ydHMuYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIobm9kZSwgZXZlbnQsIGxpc3RlbmVyKSB7XG4gIHJldHVybiBub2RlLmFkZEV2ZW50TGlzdGVuZXIgPyBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSkgOiBub2RlLmF0dGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xufTtcblxudmFyIHJlbW92ZUV2ZW50TGlzdGVuZXIgPSBleHBvcnRzLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50LCBsaXN0ZW5lcikge1xuICByZXR1cm4gbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyID8gbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpIDogbm9kZS5kZXRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbn07XG5cbnZhciBnZXRDb25maXJtYXRpb24gPSBleHBvcnRzLmdldENvbmZpcm1hdGlvbiA9IGZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICByZXR1cm4gY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpO1xufTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG52YXIgc3VwcG9ydHNIaXN0b3J5ID0gZXhwb3J0cy5zdXBwb3J0c0hpc3RvcnkgPSBmdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuXG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuXG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xudmFyIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UgPSBleHBvcnRzLnN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn07XG5cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG52YXIgc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2ggPSBleHBvcnRzLnN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoID0gZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG52YXIgaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCA9IGV4cG9ydHMuaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCA9IGZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn07IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlPYmplY3QgPSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgT2JqZWN0LmZyZWV6ZShlbXB0eU9iamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlPYmplY3Q7IiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xuKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgICB0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgPyBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKSA6XG4gICAgdHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kID8gZGVmaW5lKGZhY3RvcnkpIDpcbiAgICAoZ2xvYmFsLmhvaXN0Tm9uUmVhY3RTdGF0aWNzID0gZmFjdG9yeSgpKTtcbn0odGhpcywgKGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG4gICAgXG4gICAgdmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gICAgICAgIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICAgICAgICBjb250ZXh0VHlwZXM6IHRydWUsXG4gICAgICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICAgICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgICAgIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICAgICAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICAgICAgICBtaXhpbnM6IHRydWUsXG4gICAgICAgIHByb3BUeXBlczogdHJ1ZSxcbiAgICAgICAgdHlwZTogdHJ1ZVxuICAgIH07XG4gICAgXG4gICAgdmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gICAgICAgIG5hbWU6IHRydWUsXG4gICAgICAgIGxlbmd0aDogdHJ1ZSxcbiAgICAgICAgcHJvdG90eXBlOiB0cnVlLFxuICAgICAgICBjYWxsZXI6IHRydWUsXG4gICAgICAgIGNhbGxlZTogdHJ1ZSxcbiAgICAgICAgYXJndW1lbnRzOiB0cnVlLFxuICAgICAgICBhcml0eTogdHJ1ZVxuICAgIH07XG4gICAgXG4gICAgdmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuICAgIHZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG4gICAgdmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG4gICAgdmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG4gICAgdmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuICAgIHZhciBvYmplY3RQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZiAmJiBnZXRQcm90b3R5cGVPZihPYmplY3QpO1xuICAgIFxuICAgIHJldHVybiBmdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykgeyAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG4gICAgICAgICAgICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICAgICAgICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICAgICAgICAgICAgaWYgKCFSRUFDVF9TVEFUSUNTW2tleV0gJiYgIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAoIWJsYWNrbGlzdCB8fCAhYmxhY2tsaXN0W2tleV0pKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHsgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgICB9O1xufSkpKTtcbiIsInZhciBpc2FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGhUb1JlZ2V4cFxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZVxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvRnVuY3Rpb24gPSB0b2tlbnNUb0Z1bmN0aW9uXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb1JlZ0V4cCA9IHRva2Vuc1RvUmVnRXhwXG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJylcblxuLyoqXG4gKiBQYXJzZSBhIHN0cmluZyBmb3IgdGhlIHJhdyB0b2tlbnMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshQXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHBhcnNlIChzdHIsIG9wdGlvbnMpIHtcbiAgdmFyIHRva2VucyA9IFtdXG4gIHZhciBrZXkgPSAwXG4gIHZhciBpbmRleCA9IDBcbiAgdmFyIHBhdGggPSAnJ1xuICB2YXIgZGVmYXVsdERlbGltaXRlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nXG4gIHZhciByZXNcblxuICB3aGlsZSAoKHJlcyA9IFBBVEhfUkVHRVhQLmV4ZWMoc3RyKSkgIT0gbnVsbCkge1xuICAgIHZhciBtID0gcmVzWzBdXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4XG4gICAgcGF0aCArPSBzdHIuc2xpY2UoaW5kZXgsIG9mZnNldClcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIHZhciBuZXh0ID0gc3RyW2luZGV4XVxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cbiAgICB2YXIgbmFtZSA9IHJlc1szXVxuICAgIHZhciBjYXB0dXJlID0gcmVzWzRdXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdXG4gICAgdmFyIGFzdGVyaXNrID0gcmVzWzddXG5cbiAgICAvLyBQdXNoIHRoZSBjdXJyZW50IHBhdGggb250byB0aGUgdG9rZW5zLlxuICAgIGlmIChwYXRoKSB7XG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxuICAgICAgcGF0aCA9ICcnXG4gICAgfVxuXG4gICAgdmFyIHBhcnRpYWwgPSBwcmVmaXggIT0gbnVsbCAmJiBuZXh0ICE9IG51bGwgJiYgbmV4dCAhPT0gcHJlZml4XG4gICAgdmFyIHJlcGVhdCA9IG1vZGlmaWVyID09PSAnKycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBkZWxpbWl0ZXIgPSByZXNbMl0gfHwgZGVmYXVsdERlbGltaXRlclxuICAgIHZhciBwYXR0ZXJuID0gY2FwdHVyZSB8fCBncm91cFxuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KVxuICB9XG5cbiAgLy8gTWF0Y2ggYW55IGNoYXJhY3RlcnMgc3RpbGwgcmVtYWluaW5nLlxuICBpZiAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxuICB9XG5cbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cbiAgaWYgKHBhdGgpIHtcbiAgICB0b2tlbnMucHVzaChwYXRoKVxuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXG5cbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHBhdHRlcm5zIGJlZm9yZSBjb21waWxhdGlvbi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAodHlwZW9mIHRva2Vuc1tpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG1hdGNoZXNbaV0gPSBuZXcgUmVnRXhwKCdeKD86JyArIHRva2Vuc1tpXS5wYXR0ZXJuICsgJykkJylcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKG9iaiwgb3B0cykge1xuICAgIHZhciBwYXRoID0gJydcbiAgICB2YXIgZGF0YSA9IG9iaiB8fCB7fVxuICAgIHZhciBvcHRpb25zID0gb3B0cyB8fCB7fVxuICAgIHZhciBlbmNvZGUgPSBvcHRpb25zLnByZXR0eSA/IGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSA6IGVuY29kZVVSSUNvbXBvbmVudFxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICBwYXRoICs9IHRva2VuXG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgdmFyIHZhbHVlID0gZGF0YVt0b2tlbi5uYW1lXVxuICAgICAgdmFyIHNlZ21lbnRcblxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgLy8gUHJlcGVuZCBwYXJ0aWFsIHNlZ21lbnQgcHJlZml4ZXMuXG4gICAgICAgICAgaWYgKHRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIGJlIGRlZmluZWQnKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChpc2FycmF5KHZhbHVlKSkge1xuICAgICAgICBpZiAoIXRva2VuLnJlcGVhdCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IHJlcGVhdCwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpICsgJ2AnKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgYmUgZW1wdHknKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdmFsdWUubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBzZWdtZW50ID0gZW5jb2RlKHZhbHVlW2pdKVxuXG4gICAgICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGFsbCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHNlZ21lbnQpICsgJ2AnKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHBhdGggKz0gKGogPT09IDAgPyB0b2tlbi5wcmVmaXggOiB0b2tlbi5kZWxpbWl0ZXIpICsgc2VnbWVudFxuICAgICAgICB9XG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgc2VnbWVudCA9IHRva2VuLmFzdGVyaXNrID8gZW5jb2RlQXN0ZXJpc2sodmFsdWUpIDogZW5jb2RlKHZhbHVlKVxuXG4gICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBcIicgKyBzZWdtZW50ICsgJ1wiJylcbiAgICAgIH1cblxuICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXggKyBzZWdtZW50XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhdGhcbiAgfVxufVxuXG4vKipcbiAqIEVzY2FwZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfFxcL1xcXFxdKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBFc2NhcGUgdGhlIGNhcHR1cmluZyBncm91cCBieSBlc2NhcGluZyBzcGVjaWFsIGNoYXJhY3RlcnMgYW5kIG1lYW5pbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBncm91cFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVHcm91cCAoZ3JvdXApIHtcbiAgcmV0dXJuIGdyb3VwLnJlcGxhY2UoLyhbPSE6JFxcLygpXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSByZVxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcbiAgcmUua2V5cyA9IGtleXNcbiAgcmV0dXJuIHJlXG59XG5cbi8qKlxuICogR2V0IHRoZSBmbGFncyBmb3IgYSByZWdleHAgZnJvbSB0aGUgb3B0aW9ucy5cbiAqXG4gKiBAcGFyYW0gIHtPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZmxhZ3MgKG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSdcbn1cblxuLyoqXG4gKiBQdWxsIG91dCBrZXlzIGZyb20gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcmVnZXhwVG9SZWdleHAgKHBhdGgsIGtleXMpIHtcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cbiAgdmFyIGdyb3VwcyA9IHBhdGguc291cmNlLm1hdGNoKC9cXCgoPyFcXD8pL2cpXG5cbiAgaWYgKGdyb3Vwcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXlzLnB1c2goe1xuICAgICAgICBuYW1lOiBpLFxuICAgICAgICBwcmVmaXg6IG51bGwsXG4gICAgICAgIGRlbGltaXRlcjogbnVsbCxcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxuICAgICAgICByZXBlYXQ6IGZhbHNlLFxuICAgICAgICBwYXJ0aWFsOiBmYWxzZSxcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxuICAgICAgICBwYXR0ZXJuOiBudWxsXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcbiAgfVxuXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxuICB2YXIgZW5kID0gb3B0aW9ucy5lbmQgIT09IGZhbHNlXG4gIHZhciByb3V0ZSA9ICcnXG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwcmVmaXggPSBlc2NhcGVTdHJpbmcodG9rZW4ucHJlZml4KVxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcblxuICAgICAga2V5cy5wdXNoKHRva2VuKVxuXG4gICAgICBpZiAodG9rZW4ucmVwZWF0KSB7XG4gICAgICAgIGNhcHR1cmUgKz0gJyg/OicgKyBwcmVmaXggKyBjYXB0dXJlICsgJykqJ1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcbiAgICB9XG4gIH1cblxuICB2YXIgZGVsaW1pdGVyID0gZXNjYXBlU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJylcbiAgdmFyIGVuZHNXaXRoRGVsaW1pdGVyID0gcm91dGUuc2xpY2UoLWRlbGltaXRlci5sZW5ndGgpID09PSBkZWxpbWl0ZXJcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xuICB9XG5cbiAgaWYgKGVuZCkge1xuICAgIHJvdXRlICs9ICckJ1xuICB9IGVsc2Uge1xuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXG4gICAgLy8gcG9zc2libGUgYnkgdXNpbmcgYSBwb3NpdGl2ZSBsb29rYWhlYWQgdG8gdGhlIGVuZCBvciBuZXh0IHBhdGggc2VnbWVudC5cbiAgICByb3V0ZSArPSBzdHJpY3QgJiYgZW5kc1dpdGhEZWxpbWl0ZXIgPyAnJyA6ICcoPz0nICsgZGVsaW1pdGVyICsgJ3wkKSdcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF93YXJuaW5nID0gcmVxdWlyZSgnd2FybmluZycpO1xuXG52YXIgX3dhcm5pbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd2FybmluZyk7XG5cbnZhciBfUGF0aFV0aWxzID0gcmVxdWlyZSgnLi9QYXRoVXRpbHMnKTtcblxudmFyIF9Mb2NhdGlvblV0aWxzID0gcmVxdWlyZSgnLi9Mb2NhdGlvblV0aWxzJyk7XG5cbnZhciBfY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgPSByZXF1aXJlKCcuL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyJyk7XG5cbnZhciBfY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgY2xhbXAgPSBmdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG52YXIgY3JlYXRlTWVtb3J5SGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkoKSB7XG4gIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIHZhciBnZXRVc2VyQ29uZmlybWF0aW9uID0gcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IHByb3BzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHVuZGVmaW5lZCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IHByb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHVuZGVmaW5lZCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IHByb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHVuZGVmaW5lZCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuXG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gKDAsIF9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcjIuZGVmYXVsdCkoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfTtcblxuICB2YXIgY3JlYXRlS2V5ID0gZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfTtcblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/ICgwLCBfTG9jYXRpb25VdGlscy5jcmVhdGVMb2NhdGlvbikoZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogKDAsIF9Mb2NhdGlvblV0aWxzLmNyZWF0ZUxvY2F0aW9uKShlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTtcblxuICAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBfUGF0aFV0aWxzLmNyZWF0ZVBhdGg7XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgKDAsIF93YXJuaW5nMi5kZWZhdWx0KSghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSAoMCwgX0xvY2F0aW9uVXRpbHMuY3JlYXRlTG9jYXRpb24pKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuXG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgICgwLCBfd2FybmluZzIuZGVmYXVsdCkoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gKDAsIF9Mb2NhdGlvblV0aWxzLmNyZWF0ZUxvY2F0aW9uKShwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgaGlzdG9yeS5lbnRyaWVzW2hpc3RvcnkuaW5kZXhdID0gbG9jYXRpb247XG5cbiAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgdmFyIGxvY2F0aW9uID0gaGlzdG9yeS5lbnRyaWVzW25leHRJbmRleF07XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKG9rKSB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XG4gICAgICAgIC8vIGNhdXNpbmcgYSByZW5kZXIgYWZ0ZXIgYSBjYW5jZWxsZWQgUE9QLlxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnb0JhY2sgPSBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgcmV0dXJuIGdvKC0xKTtcbiAgfTtcblxuICB2YXIgZ29Gb3J3YXJkID0gZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIHJldHVybiBnbygxKTtcbiAgfTtcblxuICB2YXIgY2FuR28gPSBmdW5jdGlvbiBjYW5HbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICB9O1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcbiAgfTtcblxuICB2YXIgbGlzdGVuID0gZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfTtcblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGVudHJpZXNbaW5kZXhdLFxuICAgIGluZGV4OiBpbmRleCxcbiAgICBlbnRyaWVzOiBlbnRyaWVzLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBjYW5HbzogY2FuR28sXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG5cbiAgcmV0dXJuIGhpc3Rvcnk7XG59O1xuXG5leHBvcnRzLmRlZmF1bHQgPSBjcmVhdGVNZW1vcnlIaXN0b3J5OyIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF93YXJuaW5nID0gcmVxdWlyZSgnd2FybmluZycpO1xuXG52YXIgX3dhcm5pbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd2FybmluZyk7XG5cbnZhciBfaW52YXJpYW50ID0gcmVxdWlyZSgnaW52YXJpYW50Jyk7XG5cbnZhciBfaW52YXJpYW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ludmFyaWFudCk7XG5cbnZhciBfTG9jYXRpb25VdGlscyA9IHJlcXVpcmUoJy4vTG9jYXRpb25VdGlscycpO1xuXG52YXIgX1BhdGhVdGlscyA9IHJlcXVpcmUoJy4vUGF0aFV0aWxzJyk7XG5cbnZhciBfY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgPSByZXF1aXJlKCcuL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyJyk7XG5cbnZhciBfY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIpO1xuXG52YXIgX0RPTVV0aWxzID0gcmVxdWlyZSgnLi9ET01VdGlscycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG52YXIgSGFzaFBhdGhDb2RlcnMgPSB7XG4gIGhhc2hiYW5nOiB7XG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGggOiAnIS8nICsgKDAsIF9QYXRoVXRpbHMuc3RyaXBMZWFkaW5nU2xhc2gpKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBfUGF0aFV0aWxzLnN0cmlwTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IF9QYXRoVXRpbHMuYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogX1BhdGhVdGlscy5hZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogX1BhdGhVdGlscy5hZGRMZWFkaW5nU2xhc2hcbiAgfVxufTtcblxudmFyIGdldEhhc2hQYXRoID0gZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XG59O1xuXG52YXIgcHVzaEhhc2hQYXRoID0gZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgcmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gcGF0aDtcbn07XG5cbnZhciByZXBsYWNlSGFzaFBhdGggPSBmdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB2YXIgaGFzaEluZGV4ID0gd2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZignIycpO1xuXG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNsaWNlKDAsIGhhc2hJbmRleCA+PSAwID8gaGFzaEluZGV4IDogMCkgKyAnIycgKyBwYXRoKTtcbn07XG5cbnZhciBjcmVhdGVIYXNoSGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KCkge1xuICB2YXIgcHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gICgwLCBfaW52YXJpYW50Mi5kZWZhdWx0KShfRE9NVXRpbHMuY2FuVXNlRE9NLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJyk7XG5cbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9ICgwLCBfRE9NVXRpbHMuc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2gpKCk7XG5cbiAgdmFyIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IHByb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB1bmRlZmluZWQgPyBfRE9NVXRpbHMuZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdW5kZWZpbmVkID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcblxuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/ICgwLCBfUGF0aFV0aWxzLnN0cmlwVHJhaWxpbmdTbGFzaCkoKDAsIF9QYXRoVXRpbHMuYWRkTGVhZGluZ1NsYXNoKShwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuXG4gIHZhciBnZXRET01Mb2NhdGlvbiA9IGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcblxuICAgICgwLCBfd2FybmluZzIuZGVmYXVsdCkoIWJhc2VuYW1lIHx8ICgwLCBfUGF0aFV0aWxzLmhhc0Jhc2VuYW1lKShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpO1xuXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gKDAsIF9QYXRoVXRpbHMuc3RyaXBCYXNlbmFtZSkocGF0aCwgYmFzZW5hbWUpO1xuXG4gICAgcmV0dXJuICgwLCBfTG9jYXRpb25VdGlscy5jcmVhdGVMb2NhdGlvbikocGF0aCk7XG4gIH07XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gKDAsIF9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcjIuZGVmYXVsdCkoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH07XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgdmFyIGhhbmRsZUhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmICgwLCBfTG9jYXRpb25VdGlscy5sb2NhdGlvbnNBcmVFcXVhbCkocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09ICgwLCBfUGF0aFV0aWxzLmNyZWF0ZVBhdGgpKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcblxuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGhhbmRsZVBvcCA9IGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZXZlcnRQb3AgPSBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuXG4gICAgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZigoMCwgX1BhdGhVdGlscy5jcmVhdGVQYXRoKSh0b0xvY2F0aW9uKSk7XG5cbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuXG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKCgwLCBfUGF0aFV0aWxzLmNyZWF0ZVBhdGgpKGZyb21Mb2NhdGlvbikpO1xuXG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG5cbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfTtcblxuICAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gWygwLCBfUGF0aFV0aWxzLmNyZWF0ZVBhdGgpKGluaXRpYWxMb2NhdGlvbildO1xuXG4gIC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArICgwLCBfUGF0aFV0aWxzLmNyZWF0ZVBhdGgpKGxvY2F0aW9uKSk7XG4gIH07XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgKDAsIF93YXJuaW5nMi5kZWZhdWx0KShzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9ICgwLCBfTG9jYXRpb25VdGlscy5jcmVhdGVMb2NhdGlvbikocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIHBhdGggPSAoMCwgX1BhdGhVdGlscy5jcmVhdGVQYXRoKShsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcblxuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoKDAsIF9QYXRoVXRpbHMuY3JlYXRlUGF0aCkoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcblxuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG5cbiAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgKDAsIF93YXJuaW5nMi5kZWZhdWx0KShmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpO1xuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIHJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgKDAsIF93YXJuaW5nMi5kZWZhdWx0KShzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9ICgwLCBfTG9jYXRpb25VdGlscy5jcmVhdGVMb2NhdGlvbikocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIHBhdGggPSAoMCwgX1BhdGhVdGlscy5jcmVhdGVQYXRoKShsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoKDAsIF9QYXRoVXRpbHMuY3JlYXRlUGF0aCkoaGlzdG9yeS5sb2NhdGlvbikpO1xuXG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG5cbiAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgKDAsIF93YXJuaW5nMi5kZWZhdWx0KShjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKTtcblxuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH07XG5cbiAgdmFyIGdvQmFjayA9IGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICByZXR1cm4gZ28oLTEpO1xuICB9O1xuXG4gIHZhciBnb0ZvcndhcmQgPSBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgcmV0dXJuIGdvKDEpO1xuICB9O1xuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICB2YXIgY2hlY2tET01MaXN0ZW5lcnMgPSBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSkge1xuICAgICAgKDAsIF9ET01VdGlscy5hZGRFdmVudExpc3RlbmVyKSh3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICAoMCwgX0RPTVV0aWxzLnJlbW92ZUV2ZW50TGlzdGVuZXIpKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGNyZWF0ZUhhc2hIaXN0b3J5OyIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG52YXIgX3dhcm5pbmcgPSByZXF1aXJlKCd3YXJuaW5nJyk7XG5cbnZhciBfd2FybmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93YXJuaW5nKTtcblxudmFyIF9pbnZhcmlhbnQgPSByZXF1aXJlKCdpbnZhcmlhbnQnKTtcblxudmFyIF9pbnZhcmlhbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW52YXJpYW50KTtcblxudmFyIF9Mb2NhdGlvblV0aWxzID0gcmVxdWlyZSgnLi9Mb2NhdGlvblV0aWxzJyk7XG5cbnZhciBfUGF0aFV0aWxzID0gcmVxdWlyZSgnLi9QYXRoVXRpbHMnKTtcblxudmFyIF9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlciA9IHJlcXVpcmUoJy4vY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXInKTtcblxudmFyIF9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcik7XG5cbnZhciBfRE9NVXRpbHMgPSByZXF1aXJlKCcuL0RPTVV0aWxzJyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbnZhciBnZXRIaXN0b3J5U3RhdGUgPSBmdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cbnZhciBjcmVhdGVCcm93c2VySGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KCkge1xuICB2YXIgcHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gICgwLCBfaW52YXJpYW50Mi5kZWZhdWx0KShfRE9NVXRpbHMuY2FuVXNlRE9NLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJyk7XG5cbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSAoMCwgX0RPTVV0aWxzLnN1cHBvcnRzSGlzdG9yeSkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gISgwLCBfRE9NVXRpbHMuc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSkoKTtcblxuICB2YXIgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IHByb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IHByb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB1bmRlZmluZWQgPyBfRE9NVXRpbHMuZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IHByb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHVuZGVmaW5lZCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuXG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gKDAsIF9QYXRoVXRpbHMuc3RyaXBUcmFpbGluZ1NsYXNoKSgoMCwgX1BhdGhVdGlscy5hZGRMZWFkaW5nU2xhc2gpKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICB2YXIgZ2V0RE9NTG9jYXRpb24gPSBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuXG5cbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcblxuICAgICgwLCBfd2FybmluZzIuZGVmYXVsdCkoIWJhc2VuYW1lIHx8ICgwLCBfUGF0aFV0aWxzLmhhc0Jhc2VuYW1lKShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpO1xuXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gKDAsIF9QYXRoVXRpbHMuc3RyaXBCYXNlbmFtZSkocGF0aCwgYmFzZW5hbWUpO1xuXG4gICAgcmV0dXJuICgwLCBfTG9jYXRpb25VdGlscy5jcmVhdGVMb2NhdGlvbikocGF0aCwgc3RhdGUsIGtleSk7XG4gIH07XG5cbiAgdmFyIGNyZWF0ZUtleSA9IGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH07XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gKDAsIF9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcjIuZGVmYXVsdCkoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH07XG5cbiAgdmFyIGhhbmRsZVBvcFN0YXRlID0gZnVuY3Rpb24gaGFuZGxlUG9wU3RhdGUoZXZlbnQpIHtcbiAgICAvLyBJZ25vcmUgZXh0cmFuZW91cyBwb3BzdGF0ZSBldmVudHMgaW4gV2ViS2l0LlxuICAgIGlmICgoMCwgX0RPTVV0aWxzLmlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQpKGV2ZW50KSkgcmV0dXJuO1xuXG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH07XG5cbiAgdmFyIGhhbmRsZUhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9O1xuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcblxuICB2YXIgaGFuZGxlUG9wID0gZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG5cbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHJldmVydFBvcCA9IGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuXG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcblxuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XG5cbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcblxuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldO1xuXG4gIC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gYmFzZW5hbWUgKyAoMCwgX1BhdGhVdGlscy5jcmVhdGVQYXRoKShsb2NhdGlvbik7XG4gIH07XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgKDAsIF93YXJuaW5nMi5kZWZhdWx0KSghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSAoMCwgX0xvY2F0aW9uVXRpbHMuY3JlYXRlTG9jYXRpb24pKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHsga2V5OiBrZXksIHN0YXRlOiBzdGF0ZSB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcblxuICAgICAgICAgIG5leHRLZXlzLnB1c2gobG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XG5cbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICgwLCBfd2FybmluZzIuZGVmYXVsdCkoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKTtcblxuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIHJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgKDAsIF93YXJuaW5nMi5kZWZhdWx0KSghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSAoMCwgX0xvY2F0aW9uVXRpbHMuY3JlYXRlTG9jYXRpb24pKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHsga2V5OiBrZXksIHN0YXRlOiBzdGF0ZSB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG5cbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuXG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAoMCwgX3dhcm5pbmcyLmRlZmF1bHQpKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5Jyk7XG5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvID0gZnVuY3Rpb24gZ28obikge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH07XG5cbiAgdmFyIGdvQmFjayA9IGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICByZXR1cm4gZ28oLTEpO1xuICB9O1xuXG4gIHZhciBnb0ZvcndhcmQgPSBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgcmV0dXJuIGdvKDEpO1xuICB9O1xuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICB2YXIgY2hlY2tET01MaXN0ZW5lcnMgPSBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSkge1xuICAgICAgKDAsIF9ET01VdGlscy5hZGRFdmVudExpc3RlbmVyKSh3aW5kb3csIFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcblxuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSAoMCwgX0RPTVV0aWxzLmFkZEV2ZW50TGlzdGVuZXIpKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgICgwLCBfRE9NVXRpbHMucmVtb3ZlRXZlbnRMaXN0ZW5lcikod2luZG93LCBQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG5cbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgKDAsIF9ET01VdGlscy5yZW1vdmVFdmVudExpc3RlbmVyKSh3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICB2YXIgYmxvY2sgPSBmdW5jdGlvbiBibG9jaygpIHtcbiAgICB2YXIgcHJvbXB0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgbGlzdGVuID0gZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG5cbiAgcmV0dXJuIGhpc3Rvcnk7XG59O1xuXG5leHBvcnRzLmRlZmF1bHQgPSBjcmVhdGVCcm93c2VySGlzdG9yeTsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBnZXRDaGFyYWN0ZXIgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9yaWNrQW5kTW9ydHlBcGknO1xyXG5cclxuLy8gaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW92aWVEZXRhaWwgZXh0ZW5kcyBDb21wb25lbnQge1xyXG5cclxuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xyXG4gICAgaWQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3RcclxuICB9O1xyXG5cclxuICBzdGF0ZSA9IHtcclxuICAgIG1vdmllOiBudWxsXHJcbiAgfTtcclxuXHJcbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICBnZXRDaGFyYWN0ZXIodGhpcy5wcm9wcy5pZClcclxuICAgICAgLnRoZW4oY2hhcmFjdGVyID0+IHRoaXMuc2V0U3RhdGUoeyBjaGFyYWN0ZXIgfSkpO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlQmFjayA9IGV2ZW50ID0+IHtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIHRoaXMucHJvcHMuaGlzdG9yeS5nb0JhY2soKTtcclxuICB9O1xyXG5cclxuICByZW5kZXIoKSB7XHJcbiAgICBjb25zdCB7IGNoYXJhY3RlciB9ID0gdGhpcy5zdGF0ZTtcclxuXHJcbiAgICBpZihjaGFyYWN0ZXIgPT09IG51bGwpIHJldHVybiBudWxsO1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxhcnRpY2xlIGNsYXNzTmFtZT17c3R5bGVzWydjaGFyYWN0ZXItZGV0YWlsJ119PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XHJcbiAgICAgICAgICB7IDxhIGhyZWY9XCJcIiBvbkNsaWNrPXt0aGlzLmhhbmRsZUJhY2t9PkJhY2s8L2E+IH1cclxuICAgICAgICAgIDxoMj57Y2hhcmFjdGVyLm5hbWV9PC9oMj5cclxuICAgICAgICAgIDxpbWcgc3JjPXtjaGFyYWN0ZXIuaW1hZ2V9Lz5cclxuICAgICAgICAgIDxoMz57Y2hhcmFjdGVyLmlkfTwvaDM+XHJcbiAgICAgICAgICA8aDM+e2NoYXJhY3Rlci5zcGVjaWVzfTwvaDM+XHJcbiAgICAgICAgICA8dWw+XHJcbiAgICAgICAgICAgICAgPGxpPntjaGFyYWN0ZXIuc3RhdHVzfTwvbGk+XHJcbiAgICAgICAgICAgICAgPGxpPntjaGFyYWN0ZXIuZ2VuZGVyfTwvbGk+XHJcbiAgICAgICAgICAgICAgPGxpPntjaGFyYWN0ZXIub3JpZ2luLm5hbWV9PC9saT5cclxuICAgICAgICAgICAgICA8bGk+e2NoYXJhY3Rlci5sb2NhdGlvbi5uYW1lfTwvbGk+XHJcbiAgICAgICAgICA8L3VsPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2FydGljbGU+XHJcbiAgICApO1xyXG4gIH1cclxufSIsIid1c2Ugc3RyaWN0JztcbnZhciB0b2tlbiA9ICclW2EtZjAtOV17Mn0nO1xudmFyIHNpbmdsZU1hdGNoZXIgPSBuZXcgUmVnRXhwKHRva2VuLCAnZ2knKTtcbnZhciBtdWx0aU1hdGNoZXIgPSBuZXcgUmVnRXhwKCcoJyArIHRva2VuICsgJykrJywgJ2dpJyk7XG5cbmZ1bmN0aW9uIGRlY29kZUNvbXBvbmVudHMoY29tcG9uZW50cywgc3BsaXQpIHtcblx0dHJ5IHtcblx0XHQvLyBUcnkgdG8gZGVjb2RlIHRoZSBlbnRpcmUgc3RyaW5nIGZpcnN0XG5cdFx0cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChjb21wb25lbnRzLmpvaW4oJycpKTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gRG8gbm90aGluZ1xuXHR9XG5cblx0aWYgKGNvbXBvbmVudHMubGVuZ3RoID09PSAxKSB7XG5cdFx0cmV0dXJuIGNvbXBvbmVudHM7XG5cdH1cblxuXHRzcGxpdCA9IHNwbGl0IHx8IDE7XG5cblx0Ly8gU3BsaXQgdGhlIGFycmF5IGluIDIgcGFydHNcblx0dmFyIGxlZnQgPSBjb21wb25lbnRzLnNsaWNlKDAsIHNwbGl0KTtcblx0dmFyIHJpZ2h0ID0gY29tcG9uZW50cy5zbGljZShzcGxpdCk7XG5cblx0cmV0dXJuIEFycmF5LnByb3RvdHlwZS5jb25jYXQuY2FsbChbXSwgZGVjb2RlQ29tcG9uZW50cyhsZWZ0KSwgZGVjb2RlQ29tcG9uZW50cyhyaWdodCkpO1xufVxuXG5mdW5jdGlvbiBkZWNvZGUoaW5wdXQpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGlucHV0KTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0dmFyIHRva2VucyA9IGlucHV0Lm1hdGNoKHNpbmdsZU1hdGNoZXIpO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDE7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcblx0XHRcdGlucHV0ID0gZGVjb2RlQ29tcG9uZW50cyh0b2tlbnMsIGkpLmpvaW4oJycpO1xuXG5cdFx0XHR0b2tlbnMgPSBpbnB1dC5tYXRjaChzaW5nbGVNYXRjaGVyKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gaW5wdXQ7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3VzdG9tRGVjb2RlVVJJQ29tcG9uZW50KGlucHV0KSB7XG5cdC8vIEtlZXAgdHJhY2sgb2YgYWxsIHRoZSByZXBsYWNlbWVudHMgYW5kIHByZWZpbGwgdGhlIG1hcCB3aXRoIHRoZSBgQk9NYFxuXHR2YXIgcmVwbGFjZU1hcCA9IHtcblx0XHQnJUZFJUZGJzogJ1xcdUZGRkRcXHVGRkZEJyxcblx0XHQnJUZGJUZFJzogJ1xcdUZGRkRcXHVGRkZEJ1xuXHR9O1xuXG5cdHZhciBtYXRjaCA9IG11bHRpTWF0Y2hlci5leGVjKGlucHV0KTtcblx0d2hpbGUgKG1hdGNoKSB7XG5cdFx0dHJ5IHtcblx0XHRcdC8vIERlY29kZSBhcyBiaWcgY2h1bmtzIGFzIHBvc3NpYmxlXG5cdFx0XHRyZXBsYWNlTWFwW21hdGNoWzBdXSA9IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFswXSk7XG5cdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHR2YXIgcmVzdWx0ID0gZGVjb2RlKG1hdGNoWzBdKTtcblxuXHRcdFx0aWYgKHJlc3VsdCAhPT0gbWF0Y2hbMF0pIHtcblx0XHRcdFx0cmVwbGFjZU1hcFttYXRjaFswXV0gPSByZXN1bHQ7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0bWF0Y2ggPSBtdWx0aU1hdGNoZXIuZXhlYyhpbnB1dCk7XG5cdH1cblxuXHQvLyBBZGQgYCVDMmAgYXQgdGhlIGVuZCBvZiB0aGUgbWFwIHRvIG1ha2Ugc3VyZSBpdCBkb2VzIG5vdCByZXBsYWNlIHRoZSBjb21iaW5hdG9yIGJlZm9yZSBldmVyeXRoaW5nIGVsc2Vcblx0cmVwbGFjZU1hcFsnJUMyJ10gPSAnXFx1RkZGRCc7XG5cblx0dmFyIGVudHJpZXMgPSBPYmplY3Qua2V5cyhyZXBsYWNlTWFwKTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGVudHJpZXMubGVuZ3RoOyBpKyspIHtcblx0XHQvLyBSZXBsYWNlIGFsbCBkZWNvZGVkIGNvbXBvbmVudHNcblx0XHR2YXIga2V5ID0gZW50cmllc1tpXTtcblx0XHRpbnB1dCA9IGlucHV0LnJlcGxhY2UobmV3IFJlZ0V4cChrZXksICdnJyksIHJlcGxhY2VNYXBba2V5XSk7XG5cdH1cblxuXHRyZXR1cm4gaW5wdXQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVuY29kZWRVUkkpIHtcblx0aWYgKHR5cGVvZiBlbmNvZGVkVVJJICE9PSAnc3RyaW5nJykge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGBlbmNvZGVkVVJJYCB0byBiZSBvZiB0eXBlIGBzdHJpbmdgLCBnb3QgYCcgKyB0eXBlb2YgZW5jb2RlZFVSSSArICdgJyk7XG5cdH1cblxuXHR0cnkge1xuXHRcdGVuY29kZWRVUkkgPSBlbmNvZGVkVVJJLnJlcGxhY2UoL1xcKy9nLCAnICcpO1xuXG5cdFx0Ly8gVHJ5IHRoZSBidWlsdCBpbiBkZWNvZGVyIGZpcnN0XG5cdFx0cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlbmNvZGVkVVJJKTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gRmFsbGJhY2sgdG8gYSBtb3JlIGFkdmFuY2VkIGRlY29kZXJcblx0XHRyZXR1cm4gY3VzdG9tRGVjb2RlVVJJQ29tcG9uZW50KGVuY29kZWRVUkkpO1xuXHR9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RyKSB7XG5cdHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoc3RyKS5yZXBsYWNlKC9bIScoKSpdL2csIGZ1bmN0aW9uIChjKSB7XG5cdFx0cmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKTtcblx0fSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHN0cmljdFVyaUVuY29kZSA9IHJlcXVpcmUoJ3N0cmljdC11cmktZW5jb2RlJyk7XG52YXIgb2JqZWN0QXNzaWduID0gcmVxdWlyZSgnb2JqZWN0LWFzc2lnbicpO1xudmFyIGRlY29kZUNvbXBvbmVudCA9IHJlcXVpcmUoJ2RlY29kZS11cmktY29tcG9uZW50Jyk7XG5cbmZ1bmN0aW9uIGVuY29kZXJGb3JBcnJheUZvcm1hdChvcHRzKSB7XG5cdHN3aXRjaCAob3B0cy5hcnJheUZvcm1hdCkge1xuXHRcdGNhc2UgJ2luZGV4Jzpcblx0XHRcdHJldHVybiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSwgaW5kZXgpIHtcblx0XHRcdFx0cmV0dXJuIHZhbHVlID09PSBudWxsID8gW1xuXHRcdFx0XHRcdGVuY29kZShrZXksIG9wdHMpLFxuXHRcdFx0XHRcdCdbJyxcblx0XHRcdFx0XHRpbmRleCxcblx0XHRcdFx0XHQnXSdcblx0XHRcdFx0XS5qb2luKCcnKSA6IFtcblx0XHRcdFx0XHRlbmNvZGUoa2V5LCBvcHRzKSxcblx0XHRcdFx0XHQnWycsXG5cdFx0XHRcdFx0ZW5jb2RlKGluZGV4LCBvcHRzKSxcblx0XHRcdFx0XHQnXT0nLFxuXHRcdFx0XHRcdGVuY29kZSh2YWx1ZSwgb3B0cylcblx0XHRcdFx0XS5qb2luKCcnKTtcblx0XHRcdH07XG5cblx0XHRjYXNlICdicmFja2V0Jzpcblx0XHRcdHJldHVybiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IG51bGwgPyBlbmNvZGUoa2V5LCBvcHRzKSA6IFtcblx0XHRcdFx0XHRlbmNvZGUoa2V5LCBvcHRzKSxcblx0XHRcdFx0XHQnW109Jyxcblx0XHRcdFx0XHRlbmNvZGUodmFsdWUsIG9wdHMpXG5cdFx0XHRcdF0uam9pbignJyk7XG5cdFx0XHR9O1xuXG5cdFx0ZGVmYXVsdDpcblx0XHRcdHJldHVybiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IG51bGwgPyBlbmNvZGUoa2V5LCBvcHRzKSA6IFtcblx0XHRcdFx0XHRlbmNvZGUoa2V5LCBvcHRzKSxcblx0XHRcdFx0XHQnPScsXG5cdFx0XHRcdFx0ZW5jb2RlKHZhbHVlLCBvcHRzKVxuXHRcdFx0XHRdLmpvaW4oJycpO1xuXHRcdFx0fTtcblx0fVxufVxuXG5mdW5jdGlvbiBwYXJzZXJGb3JBcnJheUZvcm1hdChvcHRzKSB7XG5cdHZhciByZXN1bHQ7XG5cblx0c3dpdGNoIChvcHRzLmFycmF5Rm9ybWF0KSB7XG5cdFx0Y2FzZSAnaW5kZXgnOlxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uIChrZXksIHZhbHVlLCBhY2N1bXVsYXRvcikge1xuXHRcdFx0XHRyZXN1bHQgPSAvXFxbKFxcZCopXFxdJC8uZXhlYyhrZXkpO1xuXG5cdFx0XHRcdGtleSA9IGtleS5yZXBsYWNlKC9cXFtcXGQqXFxdJC8sICcnKTtcblxuXHRcdFx0XHRpZiAoIXJlc3VsdCkge1xuXHRcdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSB2YWx1ZTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoYWNjdW11bGF0b3Jba2V5XSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IHt9O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XVtyZXN1bHRbMV1dID0gdmFsdWU7XG5cdFx0XHR9O1xuXG5cdFx0Y2FzZSAnYnJhY2tldCc6XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24gKGtleSwgdmFsdWUsIGFjY3VtdWxhdG9yKSB7XG5cdFx0XHRcdHJlc3VsdCA9IC8oXFxbXFxdKSQvLmV4ZWMoa2V5KTtcblx0XHRcdFx0a2V5ID0ga2V5LnJlcGxhY2UoL1xcW1xcXSQvLCAnJyk7XG5cblx0XHRcdFx0aWYgKCFyZXN1bHQpIHtcblx0XHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0gdmFsdWU7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9IGVsc2UgaWYgKGFjY3VtdWxhdG9yW2tleV0gPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSBbdmFsdWVdO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSBbXS5jb25jYXQoYWNjdW11bGF0b3Jba2V5XSwgdmFsdWUpO1xuXHRcdFx0fTtcblxuXHRcdGRlZmF1bHQ6XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24gKGtleSwgdmFsdWUsIGFjY3VtdWxhdG9yKSB7XG5cdFx0XHRcdGlmIChhY2N1bXVsYXRvcltrZXldID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0gdmFsdWU7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IFtdLmNvbmNhdChhY2N1bXVsYXRvcltrZXldLCB2YWx1ZSk7XG5cdFx0XHR9O1xuXHR9XG59XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWx1ZSwgb3B0cykge1xuXHRpZiAob3B0cy5lbmNvZGUpIHtcblx0XHRyZXR1cm4gb3B0cy5zdHJpY3QgPyBzdHJpY3RVcmlFbmNvZGUodmFsdWUpIDogZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKTtcblx0fVxuXG5cdHJldHVybiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24ga2V5c1NvcnRlcihpbnB1dCkge1xuXHRpZiAoQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcblx0XHRyZXR1cm4gaW5wdXQuc29ydCgpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ29iamVjdCcpIHtcblx0XHRyZXR1cm4ga2V5c1NvcnRlcihPYmplY3Qua2V5cyhpbnB1dCkpLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcblx0XHRcdHJldHVybiBOdW1iZXIoYSkgLSBOdW1iZXIoYik7XG5cdFx0fSkubWFwKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRcdHJldHVybiBpbnB1dFtrZXldO1xuXHRcdH0pO1xuXHR9XG5cblx0cmV0dXJuIGlucHV0O1xufVxuXG5mdW5jdGlvbiBleHRyYWN0KHN0cikge1xuXHR2YXIgcXVlcnlTdGFydCA9IHN0ci5pbmRleE9mKCc/Jyk7XG5cdGlmIChxdWVyeVN0YXJ0ID09PSAtMSkge1xuXHRcdHJldHVybiAnJztcblx0fVxuXHRyZXR1cm4gc3RyLnNsaWNlKHF1ZXJ5U3RhcnQgKyAxKTtcbn1cblxuZnVuY3Rpb24gcGFyc2Uoc3RyLCBvcHRzKSB7XG5cdG9wdHMgPSBvYmplY3RBc3NpZ24oe2FycmF5Rm9ybWF0OiAnbm9uZSd9LCBvcHRzKTtcblxuXHR2YXIgZm9ybWF0dGVyID0gcGFyc2VyRm9yQXJyYXlGb3JtYXQob3B0cyk7XG5cblx0Ly8gQ3JlYXRlIGFuIG9iamVjdCB3aXRoIG5vIHByb3RvdHlwZVxuXHQvLyBodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL3F1ZXJ5LXN0cmluZy9pc3N1ZXMvNDdcblx0dmFyIHJldCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cblx0aWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG5cdFx0cmV0dXJuIHJldDtcblx0fVxuXG5cdHN0ciA9IHN0ci50cmltKCkucmVwbGFjZSgvXls/IyZdLywgJycpO1xuXG5cdGlmICghc3RyKSB7XG5cdFx0cmV0dXJuIHJldDtcblx0fVxuXG5cdHN0ci5zcGxpdCgnJicpLmZvckVhY2goZnVuY3Rpb24gKHBhcmFtKSB7XG5cdFx0dmFyIHBhcnRzID0gcGFyYW0ucmVwbGFjZSgvXFwrL2csICcgJykuc3BsaXQoJz0nKTtcblx0XHQvLyBGaXJlZm94IChwcmUgNDApIGRlY29kZXMgYCUzRGAgdG8gYD1gXG5cdFx0Ly8gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9xdWVyeS1zdHJpbmcvcHVsbC8zN1xuXHRcdHZhciBrZXkgPSBwYXJ0cy5zaGlmdCgpO1xuXHRcdHZhciB2YWwgPSBwYXJ0cy5sZW5ndGggPiAwID8gcGFydHMuam9pbignPScpIDogdW5kZWZpbmVkO1xuXG5cdFx0Ly8gbWlzc2luZyBgPWAgc2hvdWxkIGJlIGBudWxsYDpcblx0XHQvLyBodHRwOi8vdzMub3JnL1RSLzIwMTIvV0QtdXJsLTIwMTIwNTI0LyNjb2xsZWN0LXVybC1wYXJhbWV0ZXJzXG5cdFx0dmFsID0gdmFsID09PSB1bmRlZmluZWQgPyBudWxsIDogZGVjb2RlQ29tcG9uZW50KHZhbCk7XG5cblx0XHRmb3JtYXR0ZXIoZGVjb2RlQ29tcG9uZW50KGtleSksIHZhbCwgcmV0KTtcblx0fSk7XG5cblx0cmV0dXJuIE9iamVjdC5rZXlzKHJldCkuc29ydCgpLnJlZHVjZShmdW5jdGlvbiAocmVzdWx0LCBrZXkpIHtcblx0XHR2YXIgdmFsID0gcmV0W2tleV07XG5cdFx0aWYgKEJvb2xlYW4odmFsKSAmJiB0eXBlb2YgdmFsID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheSh2YWwpKSB7XG5cdFx0XHQvLyBTb3J0IG9iamVjdCBrZXlzLCBub3QgdmFsdWVzXG5cdFx0XHRyZXN1bHRba2V5XSA9IGtleXNTb3J0ZXIodmFsKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmVzdWx0W2tleV0gPSB2YWw7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fSwgT2JqZWN0LmNyZWF0ZShudWxsKSk7XG59XG5cbmV4cG9ydHMuZXh0cmFjdCA9IGV4dHJhY3Q7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5cbmV4cG9ydHMuc3RyaW5naWZ5ID0gZnVuY3Rpb24gKG9iaiwgb3B0cykge1xuXHR2YXIgZGVmYXVsdHMgPSB7XG5cdFx0ZW5jb2RlOiB0cnVlLFxuXHRcdHN0cmljdDogdHJ1ZSxcblx0XHRhcnJheUZvcm1hdDogJ25vbmUnXG5cdH07XG5cblx0b3B0cyA9IG9iamVjdEFzc2lnbihkZWZhdWx0cywgb3B0cyk7XG5cblx0aWYgKG9wdHMuc29ydCA9PT0gZmFsc2UpIHtcblx0XHRvcHRzLnNvcnQgPSBmdW5jdGlvbiAoKSB7fTtcblx0fVxuXG5cdHZhciBmb3JtYXR0ZXIgPSBlbmNvZGVyRm9yQXJyYXlGb3JtYXQob3B0cyk7XG5cblx0cmV0dXJuIG9iaiA/IE9iamVjdC5rZXlzKG9iaikuc29ydChvcHRzLnNvcnQpLm1hcChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0dmFyIHZhbCA9IG9ialtrZXldO1xuXG5cdFx0aWYgKHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRyZXR1cm4gJyc7XG5cdFx0fVxuXG5cdFx0aWYgKHZhbCA9PT0gbnVsbCkge1xuXHRcdFx0cmV0dXJuIGVuY29kZShrZXksIG9wdHMpO1xuXHRcdH1cblxuXHRcdGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcblx0XHRcdHZhciByZXN1bHQgPSBbXTtcblxuXHRcdFx0dmFsLnNsaWNlKCkuZm9yRWFjaChmdW5jdGlvbiAodmFsMikge1xuXHRcdFx0XHRpZiAodmFsMiA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmVzdWx0LnB1c2goZm9ybWF0dGVyKGtleSwgdmFsMiwgcmVzdWx0Lmxlbmd0aCkpO1xuXHRcdFx0fSk7XG5cblx0XHRcdHJldHVybiByZXN1bHQuam9pbignJicpO1xuXHRcdH1cblxuXHRcdHJldHVybiBlbmNvZGUoa2V5LCBvcHRzKSArICc9JyArIGVuY29kZSh2YWwsIG9wdHMpO1xuXHR9KS5maWx0ZXIoZnVuY3Rpb24gKHgpIHtcblx0XHRyZXR1cm4geC5sZW5ndGggPiAwO1xuXHR9KS5qb2luKCcmJykgOiAnJztcbn07XG5cbmV4cG9ydHMucGFyc2VVcmwgPSBmdW5jdGlvbiAoc3RyLCBvcHRzKSB7XG5cdHJldHVybiB7XG5cdFx0dXJsOiBzdHIuc3BsaXQoJz8nKVswXSB8fCAnJyxcblx0XHRxdWVyeTogcGFyc2UoZXh0cmFjdChzdHIpLCBvcHRzKVxuXHR9O1xufTtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZWFyY2hGb3JtIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuXHJcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcclxuICAgIHNlYXJjaFRlcm06IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICBvblNlYXJjaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxyXG4gIH07XHJcblxyXG4gIHN0YXRlID0ge1xyXG4gICAgY3VycmVudDogdGhpcy5wcm9wcy5zZWFyY2hUZXJtIHx8ICcnXHJcbiAgfTtcclxuXHJcbiAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyh7IHNlYXJjaFRlcm0gfSkge1xyXG4gICAgaWYoc2VhcmNoVGVybSAhPT0gdGhpcy5zdGF0ZS5jdXJyZW50KSB7XHJcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBjdXJyZW50OiBzZWFyY2hUZXJtIHx8ICcnIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaGFuZGxlQ2hhbmdlID0gKHsgdGFyZ2V0IH0pID0+IHtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBjdXJyZW50OiB0YXJnZXQudmFsdWUgfSk7XHJcbiAgfTtcclxuXHJcbiAgaGFuZGxlU3VibWl0ID0gZXZlbnQgPT4ge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIHRoaXMuY2FsbFNlYXJjaCgpO1xyXG4gIH07XHJcblxyXG4gIGNhbGxTZWFyY2goKSB7XHJcbiAgICBjb25zdCB7IGN1cnJlbnQgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICBpZighY3VycmVudCkgcmV0dXJuO1xyXG4gICAgdGhpcy5wcm9wcy5vblNlYXJjaChjdXJyZW50KTtcclxuICB9XHJcblxyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnN0IHsgY3VycmVudCB9ID0gdGhpcy5zdGF0ZTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8Zm9ybSBjbGFzc05hbWU9e3N0eWxlcy5zZWFyY2h9IG9uU3VibWl0PXt0aGlzLmhhbmRsZVN1Ym1pdH0+XHJcbiAgICAgICAgPGZpZWxkc2V0PlxyXG4gICAgICAgICAgPGxhYmVsPlxyXG4gICAgICAgICAgICBTcXVhbmNoIGZvciBSaWNrIGFuZCBNb3J0eSBDaGFyYWN0ZXJzOiA8aW5wdXQgdmFsdWU9e2N1cnJlbnR9IFxyXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX0gXHJcbiAgICAgICAgICAgICAgbmFtZT1cInNlYXJjaFwiIFxyXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiTmFtZSBIZXJlXCIvPlxyXG4gICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgIDxsYWJlbD5cclxuICAgICAgICAgICAgJm5ic3A7PGJ1dHRvbj5TcXVhbmNoPC9idXR0b24+XHJcbiAgICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgIDwvZmllbGRzZXQ+XHJcbiAgICAgIDwvZm9ybT5cclxuICAgICk7XHJcbiAgfVxyXG59IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hhcmFjdGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICBcclxuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xyXG4gICAgaWQ6IFByb3BUeXBlcy5udW1iZXIsXHJcbiAgICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgaW1hZ2U6IFByb3BUeXBlcy5hbnksXHJcbiAgfTtcclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBpZCwgbmFtZSwgaW1hZ2UgfSA9IHRoaXMucHJvcHM7XHJcbiAgICBcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxsaT5cclxuICAgICAgICA8TGluayB0bz17YC9jaGFyYWN0ZXJzLyR7aWR9YH0+XHJcbiAgICAgICAgPGgyPntuYW1lfTwvaDI+XHJcbiAgICAgICAgPGltZyBzcmM9e2ltYWdlfS8+XHJcbiAgICAgICAgPC9MaW5rPlxyXG4gICAgICA8L2xpPlxyXG4gICAgKTtcclxuICB9XHJcbn0iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGFnaW5nIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuXHJcbiAgaGFuZGxlUGFnZShpbmNyZW1lbnQpIHtcclxuICAgIGNvbnN0IHsgcGFnZSwgb25QYWdlIH0gPSB0aGlzLnByb3BzO1xyXG4gICAgb25QYWdlKHsgcGFnZTogcGFnZSArIGluY3JlbWVudCB9KTtcclxuICB9XHJcblxyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnN0IHsgdG90YWxSZXN1bHRzLCBwYWdlIH0gPSB0aGlzLnByb3BzO1xyXG4gICAgXHJcbiAgICBpZighdG90YWxSZXN1bHRzKSByZXR1cm4gPGRpdj5TcXVhbmNoIGEgbmFtZTwvZGl2PjtcclxuXHJcbiAgICBjb25zdCB0b3RhbFBhZ2VzID0gTWF0aC5jZWlsKHRvdGFsUmVzdWx0cyAvIDIwKTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXY+XHJcbiAgICAgICAgPHNwYW4+UGFnZSB7cGFnZX0gb2Yge3RvdGFsUGFnZXN9PC9zcGFuPlxyXG4gICAgICAgICZuYnNwO1xyXG4gICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gdGhpcy5oYW5kbGVQYWdlKC0xKX0gZGlzYWJsZWQ9e3BhZ2UgPT09IDF9PiZsdDsgUHJldjwvYnV0dG9uPlxyXG4gICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gdGhpcy5oYW5kbGVQYWdlKCsxKX0gZGlzYWJsZWQ9e3BhZ2UgPT09IHRvdGFsUGFnZXN9Pk5leHQgJmd0OzwvYnV0dG9uPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG59IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFBhZ2luZyBmcm9tICcuLi9wYWdpbmcvUGFnaW5nJztcclxuaW1wb3J0IENoYXJhY3RlciBmcm9tICcuLi9jaGFyYWN0ZXJzL0NoYXJhY3Rlcic7XHJcbmltcG9ydCB7IHNlYXJjaCB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3JpY2tBbmRNb3J0eUFwaSc7XHJcbmltcG9ydCBTZWFyY2hGb3JtIGZyb20gJy4vU2VhcmNoRm9ybSc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcbmltcG9ydCBxdWVyeVN0cmluZyBmcm9tICdxdWVyeS1zdHJpbmcnO1xyXG5cclxuY29uc3QgZ2V0U2VhcmNoID0gbG9jYXRpb24gPT4gbG9jYXRpb24gPyBsb2NhdGlvbi5zZWFyY2ggOiAnJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlYXJjaCBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgXHJcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcclxuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcclxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcclxuICB9O1xyXG5cclxuICBzdGF0ZSA9IHtcclxuICAgIG5hbWU6ICcnLFxyXG4gICAgZXJyb3I6IG51bGwsXHJcbiAgICBjaGFyYWN0ZXJzOiBudWxsLFxyXG4gICAgcGFnZTogMVxyXG4gIH07XHJcbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICB0aGlzLnNlYXJjaEZyb21RdWVyeSh0aGlzLnByb3BzLmxvY2F0aW9uLnNlYXJjaCk7XHJcbiAgfVxyXG5cclxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKHsgbG9jYXRpb24gfSkge1xyXG4gICAgY29uc3QgbmV4dCA9IGdldFNlYXJjaChsb2NhdGlvbik7XHJcbiAgICBjb25zdCBjdXJyZW50ID0gZ2V0U2VhcmNoKHRoaXMucHJvcHMubG9jYXRpb24pO1xyXG4gICAgaWYoY3VycmVudCA9PT0gbmV4dCkgcmV0dXJuO1xyXG4gICAgdGhpcy5zZWFyY2hGcm9tUXVlcnkobmV4dCk7XHJcbiAgfVxyXG4gIFxyXG4gIHNlYXJjaEZyb21RdWVyeShxdWVyeSkge1xyXG4gICAgY29uc3QgeyBzZWFyY2g6IG5hbWUsIHBhZ2UgfSA9IHF1ZXJ5U3RyaW5nLnBhcnNlKHF1ZXJ5KTtcclxuXHJcbiAgICB0aGlzLnNldFN0YXRlKHsgbmFtZSwgcGFnZTogK3BhZ2UgfSk7XHJcbiAgICBpZighbmFtZSkgcmV0dXJuO1xyXG5cclxuICAgIHNlYXJjaChuYW1lLCBwYWdlKVxyXG4gICAgICAudGhlbigoeyBTZWFyY2ggfSkgPT4ge1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBjaGFyYWN0ZXJzOiBTZWFyY2ggfSk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChlcnJvciA9PiB7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGVycm9yIH0pO1xyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIG1ha2VTZWFyY2ggPSAoKSA9PiB7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgZXJyb3I6IG51bGwgfSk7XHJcbiAgICBjb25zdCB7IG5hbWUsIHBhZ2UgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICBcclxuICAgIGNvbnN0IHF1ZXJ5ID0ge1xyXG4gICAgICBzZWFyY2g6IG5hbWUgfHwgJycsXHJcbiAgICAgIHBhZ2U6IHBhZ2UgfHwgMVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKHtcclxuICAgICAgc2VhcmNoOiBxdWVyeVN0cmluZy5zdHJpbmdpZnkocXVlcnkpXHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICBoYW5kbGVTZWFyY2ggPSBuYW1lID0+IHtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBcclxuICAgICAgZXJyb3I6IG51bGwsXHJcbiAgICAgIG5hbWUsXHJcbiAgICAgIHBhZ2U6IDFcclxuICAgIH0sIHRoaXMubWFrZVNlYXJjaCk7XHJcbiAgfTtcclxuXHJcbiAgaGFuZGxlUGFnZSA9IHBhZ2UgPT4ge1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7IFxyXG4gICAgICBlcnJvcjogbnVsbCxcclxuICAgICAgcGFnZVxyXG4gICAgfSwgdGhpcy5tYWtlU2VhcmNoKTtcclxuICB9XHJcbiAgXHJcblxyXG4gXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBjaGFyYWN0ZXJzLCBlcnJvciwgbmFtZSwgcGFnZSB9ID0gdGhpcy5zdGF0ZTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxTZWFyY2hGb3JtIG5hbWU9e25hbWV9IG9uU2VhcmNoPXt0aGlzLmhhbmRsZVNlYXJjaH0vPlxyXG4gICAgICAgIHtlcnJvciAmJiA8ZGl2PntlcnJvcn08L2Rpdj59XHJcbiAgICAgICAgPFBhZ2luZyBwYWdlPXtwYWdlfSBvblBhZ2U9e3RoaXMuaGFuZGxlUGFnZX0vPlxyXG4gICAgICAgIHsoIWVycm9yICYmIGNoYXJhY3RlcnMpICYmIDxDaGFyYWN0ZXJzIGNoYXJhY3RlcnM9e2NoYXJhY3RlcnN9Lz59XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuICB9XHJcbn0iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSG9tZSBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIDxkaXY+UmljayBhbmQgTW9ydHkgQ2hhcmFjdGVyIFNlYXJjaDwvZGl2PjtcclxuICB9XHJcbn0iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBMaW5rLCBSb3V0ZSB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGVhZGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICByZW5kZXIoKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8aGVhZGVyIGNsYXNzTmFtZT17c3R5bGVzLmhlYWRlcn0+XHJcbiAgICAgICAgPGgxPkdvIHRvIHRoZSBNb3ZpZXMhPC9oMT5cclxuICAgICAgICA8bmF2PlxyXG4gICAgICAgICAgPHVsPlxyXG4gICAgICAgICAgICA8bGk+PExpbmsgdG89XCIvXCI+SG9tZTwvTGluaz48L2xpPlxyXG4gICAgICAgICAgICA8bGk+PExpbmsgdG89XCIvYWJvdXRcIj5BYm91dDwvTGluaz48L2xpPlxyXG4gICAgICAgICAgICA8bGk+PExpbmsgdG89XCIvc2VhcmNoXCI+U2VhcmNoPC9MaW5rPjwvbGk+XHJcbiAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL2NoYXJhY3RlcnNcIiByZW5kZXI9eygpID0+IDxsaT5vbmx5IG9uIGNoYXJhY3RlcnMhPC9saT59Lz5cclxuICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgPC9uYXY+XHJcbiAgICAgIDwvaGVhZGVyPlxyXG4gICAgKTtcclxuICB9XHJcbn0iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoJ2ZianMvbGliL2VtcHR5RnVuY3Rpb24nKTtcbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKCdmYmpzL2xpYi9pbnZhcmlhbnQnKTtcbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpbnZhcmlhbnQoXG4gICAgICBmYWxzZSxcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsIFN3aXRjaCwgUm91dGUsIFJlZGlyZWN0IH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcbmltcG9ydCBIZWFkZXIgZnJvbSAnLi9IZWFkZXInO1xyXG5pbXBvcnQgSG9tZSBmcm9tICcuL0hvbWUnO1xyXG5pbXBvcnQgU2VhcmNoIGZyb20gJy4uL3NlYXJjaC9TZWFyY2gnO1xyXG5pbXBvcnQgQ2hhcmFjdGVyRGV0YWlsIGZyb20gJy4uL2NoYXJhY3RlcnMvQ2hhcmFjdGVyRGV0YWlsJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XHJcblxyXG4gXHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgIHJldHVybiAoXHJcbiAgICAgICAgPFJvdXRlcj5cclxuICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxIZWFkZXIgLz5cclxuICAgICAgICAgICAgPG1haW4+XHJcbiAgICAgICAgICAgICAgPFN3aXRjaD5cclxuICAgICAgICAgICAgICAgIDxSb3V0ZSBleGFjdCBwYXRoPVwiL1wiIGNvbXBvbmVudD17SG9tZX0vPlxyXG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvc2VhcmNoXCIgY29tcG9uZW50PXtTZWFyY2h9Lz5cclxuICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL2NoYXJhY3RlcnMvOmlkXCIgcmVuZGVyPXsoeyBtYXRjaCB9KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgIHJldHVybiA8Q2hhcmFjdGVyRGV0YWlsIGNoYXJhY3RlcklEPXttYXRjaC5wYXJhbXMuaWR9Lz47XHJcbiAgICAgICAgICAgICAgICB9fS8+XHJcbiAgICAgICAgICAgICAgICA8UmVkaXJlY3QgdG89XCIvXCIvPlxyXG4gICAgICAgICAgICAgIDwvU3dpdGNoPlxyXG4gICAgICAgICAgICA8L21haW4+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L1JvdXRlcj5cclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHsqfSBvYmplY3QgVGhlIG9iamVjdCB0byBjaGVjay5cbiAqIEByZXR1cm4ge2Jvb2xlYW59IFdoZXRoZXIgb3Igbm90IHRoZSBvYmplY3QgaXMgYSBET00gbm9kZS5cbiAqL1xuZnVuY3Rpb24gaXNOb2RlKG9iamVjdCkge1xuICB2YXIgZG9jID0gb2JqZWN0ID8gb2JqZWN0Lm93bmVyRG9jdW1lbnQgfHwgb2JqZWN0IDogZG9jdW1lbnQ7XG4gIHZhciBkZWZhdWx0VmlldyA9IGRvYy5kZWZhdWx0VmlldyB8fCB3aW5kb3c7XG4gIHJldHVybiAhIShvYmplY3QgJiYgKHR5cGVvZiBkZWZhdWx0Vmlldy5Ob2RlID09PSAnZnVuY3Rpb24nID8gb2JqZWN0IGluc3RhbmNlb2YgZGVmYXVsdFZpZXcuTm9kZSA6IHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmIHR5cGVvZiBvYmplY3Qubm9kZVR5cGUgPT09ICdudW1iZXInICYmIHR5cGVvZiBvYmplY3Qubm9kZU5hbWUgPT09ICdzdHJpbmcnKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNOb2RlOyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbnZhciBpc05vZGUgPSByZXF1aXJlKCcuL2lzTm9kZScpO1xuXG4vKipcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2hlY2suXG4gKiBAcmV0dXJuIHtib29sZWFufSBXaGV0aGVyIG9yIG5vdCB0aGUgb2JqZWN0IGlzIGEgRE9NIHRleHQgbm9kZS5cbiAqL1xuZnVuY3Rpb24gaXNUZXh0Tm9kZShvYmplY3QpIHtcbiAgcmV0dXJuIGlzTm9kZShvYmplY3QpICYmIG9iamVjdC5ub2RlVHlwZSA9PSAzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzVGV4dE5vZGU7IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIFxuICovXG5cbnZhciBpc1RleHROb2RlID0gcmVxdWlyZSgnLi9pc1RleHROb2RlJyk7XG5cbi8qZXNsaW50LWRpc2FibGUgbm8tYml0d2lzZSAqL1xuXG4vKipcbiAqIENoZWNrcyBpZiBhIGdpdmVuIERPTSBub2RlIGNvbnRhaW5zIG9yIGlzIGFub3RoZXIgRE9NIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGNvbnRhaW5zTm9kZShvdXRlck5vZGUsIGlubmVyTm9kZSkge1xuICBpZiAoIW91dGVyTm9kZSB8fCAhaW5uZXJOb2RlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2UgaWYgKG91dGVyTm9kZSA9PT0gaW5uZXJOb2RlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAoaXNUZXh0Tm9kZShvdXRlck5vZGUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2UgaWYgKGlzVGV4dE5vZGUoaW5uZXJOb2RlKSkge1xuICAgIHJldHVybiBjb250YWluc05vZGUob3V0ZXJOb2RlLCBpbm5lck5vZGUucGFyZW50Tm9kZSk7XG4gIH0gZWxzZSBpZiAoJ2NvbnRhaW5zJyBpbiBvdXRlck5vZGUpIHtcbiAgICByZXR1cm4gb3V0ZXJOb2RlLmNvbnRhaW5zKGlubmVyTm9kZSk7XG4gIH0gZWxzZSBpZiAob3V0ZXJOb2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKSB7XG4gICAgcmV0dXJuICEhKG91dGVyTm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihpbm5lck5vZGUpICYgMTYpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRhaW5zTm9kZTsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKiBcbiAqL1xuXG4vKmVzbGludC1kaXNhYmxlIG5vLXNlbGYtY29tcGFyZSAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogaW5saW5lZCBPYmplY3QuaXMgcG9seWZpbGwgdG8gYXZvaWQgcmVxdWlyaW5nIGNvbnN1bWVycyBzaGlwIHRoZWlyIG93blxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L2lzXG4gKi9cbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgLy8gU2FtZVZhbHVlIGFsZ29yaXRobVxuICBpZiAoeCA9PT0geSkge1xuICAgIC8vIFN0ZXBzIDEtNSwgNy0xMFxuICAgIC8vIFN0ZXBzIDYuYi02LmU6ICswICE9IC0wXG4gICAgLy8gQWRkZWQgdGhlIG5vbnplcm8geSBjaGVjayB0byBtYWtlIEZsb3cgaGFwcHksIGJ1dCBpdCBpcyByZWR1bmRhbnRcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICAvLyBTdGVwIDYuYTogTmFOID09IE5hTlxuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuLyoqXG4gKiBQZXJmb3JtcyBlcXVhbGl0eSBieSBpdGVyYXRpbmcgdGhyb3VnaCBrZXlzIG9uIGFuIG9iamVjdCBhbmQgcmV0dXJuaW5nIGZhbHNlXG4gKiB3aGVuIGFueSBrZXkgaGFzIHZhbHVlcyB3aGljaCBhcmUgbm90IHN0cmljdGx5IGVxdWFsIGJldHdlZW4gdGhlIGFyZ3VtZW50cy5cbiAqIFJldHVybnMgdHJ1ZSB3aGVuIHRoZSB2YWx1ZXMgb2YgYWxsIGtleXMgYXJlIHN0cmljdGx5IGVxdWFsLlxuICovXG5mdW5jdGlvbiBzaGFsbG93RXF1YWwob2JqQSwgb2JqQikge1xuICBpZiAoaXMob2JqQSwgb2JqQikpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb2JqQSAhPT0gJ29iamVjdCcgfHwgb2JqQSA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqQiAhPT0gJ29iamVjdCcgfHwgb2JqQiA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBrZXlzQSA9IE9iamVjdC5rZXlzKG9iakEpO1xuICB2YXIga2V5c0IgPSBPYmplY3Qua2V5cyhvYmpCKTtcblxuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBUZXN0IGZvciBBJ3Mga2V5cyBkaWZmZXJlbnQgZnJvbSBCLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXNBLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iakIsIGtleXNBW2ldKSB8fCAhaXMob2JqQVtrZXlzQVtpXV0sIG9iakJba2V5c0FbaV1dKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNoYWxsb3dFcXVhbDsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBmYi13d3cvdHlwZW9mLXVuZGVmaW5lZCAqL1xuXG4vKipcbiAqIFNhbWUgYXMgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBidXQgd3JhcHMgaW4gYSB0cnktY2F0Y2ggYmxvY2suIEluIElFIGl0IGlzXG4gKiBub3Qgc2FmZSB0byBjYWxsIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgaWYgdGhlcmUgaXMgbm90aGluZyBmb2N1c2VkLlxuICpcbiAqIFRoZSBhY3RpdmVFbGVtZW50IHdpbGwgYmUgbnVsbCBvbmx5IGlmIHRoZSBkb2N1bWVudCBvciBkb2N1bWVudCBib2R5IGlzIG5vdFxuICogeWV0IGRlZmluZWQuXG4gKlxuICogQHBhcmFtIHs/RE9NRG9jdW1lbnR9IGRvYyBEZWZhdWx0cyB0byBjdXJyZW50IGRvY3VtZW50LlxuICogQHJldHVybiB7P0RPTUVsZW1lbnR9XG4gKi9cbmZ1bmN0aW9uIGdldEFjdGl2ZUVsZW1lbnQoZG9jKSAvKj9ET01FbGVtZW50Ki97XG4gIGRvYyA9IGRvYyB8fCAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDogdW5kZWZpbmVkKTtcbiAgaWYgKHR5cGVvZiBkb2MgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdHJ5IHtcbiAgICByZXR1cm4gZG9jLmFjdGl2ZUVsZW1lbnQgfHwgZG9jLmJvZHk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZG9jLmJvZHk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRBY3RpdmVFbGVtZW50OyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5cbi8qKlxuICogU2ltcGxlLCBsaWdodHdlaWdodCBtb2R1bGUgYXNzaXN0aW5nIHdpdGggdGhlIGRldGVjdGlvbiBhbmQgY29udGV4dCBvZlxuICogV29ya2VyLiBIZWxwcyBhdm9pZCBjaXJjdWxhciBkZXBlbmRlbmNpZXMgYW5kIGFsbG93cyBjb2RlIHRvIHJlYXNvbiBhYm91dFxuICogd2hldGhlciBvciBub3QgdGhleSBhcmUgaW4gYSBXb3JrZXIsIGV2ZW4gaWYgdGhleSBuZXZlciBpbmNsdWRlIHRoZSBtYWluXG4gKiBgUmVhY3RXb3JrZXJgIGRlcGVuZGVuY3kuXG4gKi9cbnZhciBFeGVjdXRpb25FbnZpcm9ubWVudCA9IHtcblxuICBjYW5Vc2VET006IGNhblVzZURPTSxcblxuICBjYW5Vc2VXb3JrZXJzOiB0eXBlb2YgV29ya2VyICE9PSAndW5kZWZpbmVkJyxcblxuICBjYW5Vc2VFdmVudExpc3RlbmVyczogY2FuVXNlRE9NICYmICEhKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyIHx8IHdpbmRvdy5hdHRhY2hFdmVudCksXG5cbiAgY2FuVXNlVmlld3BvcnQ6IGNhblVzZURPTSAmJiAhIXdpbmRvdy5zY3JlZW4sXG5cbiAgaXNJbldvcmtlcjogIWNhblVzZURPTSAvLyBGb3Igbm93LCB0aGlzIGlzIHRydWUgLSBtaWdodCBjaGFuZ2UgaW4gdGhlIGZ1dHVyZS5cblxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBFeGVjdXRpb25FbnZpcm9ubWVudDsiLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjQuMFxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJmYmpzL2xpYi9pbnZhcmlhbnRcIiksY2E9cmVxdWlyZShcInJlYWN0XCIpLG09cmVxdWlyZShcImZianMvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50XCIpLHA9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksdj1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlGdW5jdGlvblwiKSxkYT1yZXF1aXJlKFwiZmJqcy9saWIvZ2V0QWN0aXZlRWxlbWVudFwiKSxlYT1yZXF1aXJlKFwiZmJqcy9saWIvc2hhbGxvd0VxdWFsXCIpLGZhPXJlcXVpcmUoXCJmYmpzL2xpYi9jb250YWluc05vZGVcIiksaGE9cmVxdWlyZShcImZianMvbGliL2VtcHR5T2JqZWN0XCIpO1xuZnVuY3Rpb24gQShhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGM9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGQ9MDtkPGI7ZCsrKWMrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2QrMV0pO2FhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsYyl9Y2E/dm9pZCAwOkEoXCIyMjdcIik7XG5mdW5jdGlvbiBpYShhLGIsYyxkLGUsZixnLGgsayl7dGhpcy5faGFzQ2F1Z2h0RXJyb3I9ITE7dGhpcy5fY2F1Z2h0RXJyb3I9bnVsbDt2YXIgbj1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxuKX1jYXRjaChyKXt0aGlzLl9jYXVnaHRFcnJvcj1yLHRoaXMuX2hhc0NhdWdodEVycm9yPSEwfX1cbnZhciBCPXtfY2F1Z2h0RXJyb3I6bnVsbCxfaGFzQ2F1Z2h0RXJyb3I6ITEsX3JldGhyb3dFcnJvcjpudWxsLF9oYXNSZXRocm93RXJyb3I6ITEsaW52b2tlR3VhcmRlZENhbGxiYWNrOmZ1bmN0aW9uKGEsYixjLGQsZSxmLGcsaCxrKXtpYS5hcHBseShCLGFyZ3VtZW50cyl9LGludm9rZUd1YXJkZWRDYWxsYmFja0FuZENhdGNoRmlyc3RFcnJvcjpmdW5jdGlvbihhLGIsYyxkLGUsZixnLGgsayl7Qi5pbnZva2VHdWFyZGVkQ2FsbGJhY2suYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKEIuaGFzQ2F1Z2h0RXJyb3IoKSl7dmFyIG49Qi5jbGVhckNhdWdodEVycm9yKCk7Qi5faGFzUmV0aHJvd0Vycm9yfHwoQi5faGFzUmV0aHJvd0Vycm9yPSEwLEIuX3JldGhyb3dFcnJvcj1uKX19LHJldGhyb3dDYXVnaHRFcnJvcjpmdW5jdGlvbigpe3JldHVybiBrYS5hcHBseShCLGFyZ3VtZW50cyl9LGhhc0NhdWdodEVycm9yOmZ1bmN0aW9uKCl7cmV0dXJuIEIuX2hhc0NhdWdodEVycm9yfSxjbGVhckNhdWdodEVycm9yOmZ1bmN0aW9uKCl7aWYoQi5faGFzQ2F1Z2h0RXJyb3Ipe3ZhciBhPVxuQi5fY2F1Z2h0RXJyb3I7Qi5fY2F1Z2h0RXJyb3I9bnVsbDtCLl9oYXNDYXVnaHRFcnJvcj0hMTtyZXR1cm4gYX1BKFwiMTk4XCIpfX07ZnVuY3Rpb24ga2EoKXtpZihCLl9oYXNSZXRocm93RXJyb3Ipe3ZhciBhPUIuX3JldGhyb3dFcnJvcjtCLl9yZXRocm93RXJyb3I9bnVsbDtCLl9oYXNSZXRocm93RXJyb3I9ITE7dGhyb3cgYTt9fXZhciBsYT1udWxsLG1hPXt9O1xuZnVuY3Rpb24gbmEoKXtpZihsYSlmb3IodmFyIGEgaW4gbWEpe3ZhciBiPW1hW2FdLGM9bGEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDpBKFwiOTZcIixhKTtpZighb2FbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6QShcIjk3XCIsYSk7b2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtwYS5oYXNPd25Qcm9wZXJ0eShoKT9BKFwiOTlcIixoKTp2b2lkIDA7cGFbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmcWEoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHFhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6QShcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIHFhKGEsYixjKXtyYVthXT9BKFwiMTAwXCIsYSk6dm9pZCAwO3JhW2FdPWI7c2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgb2E9W10scGE9e30scmE9e30sc2E9e307ZnVuY3Rpb24gdGEoYSl7bGE/QShcIjEwMVwiKTp2b2lkIDA7bGE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7bmEoKX1mdW5jdGlvbiB1YShhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTttYS5oYXNPd25Qcm9wZXJ0eShjKSYmbWFbY109PT1kfHwobWFbY10/QShcIjEwMlwiLGMpOnZvaWQgMCxtYVtjXT1kLGI9ITApfWImJm5hKCl9XG52YXIgdmE9e3BsdWdpbnM6b2EsZXZlbnROYW1lRGlzcGF0Y2hDb25maWdzOnBhLHJlZ2lzdHJhdGlvbk5hbWVNb2R1bGVzOnJhLHJlZ2lzdHJhdGlvbk5hbWVEZXBlbmRlbmNpZXM6c2EscG9zc2libGVSZWdpc3RyYXRpb25OYW1lczpudWxsLGluamVjdEV2ZW50UGx1Z2luT3JkZXI6dGEsaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOnVhfSx3YT1udWxsLHhhPW51bGwseWE9bnVsbDtmdW5jdGlvbiB6YShhLGIsYyxkKXtiPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXlhKGQpO0IuaW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yKGIsYyx2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG5mdW5jdGlvbiBBYShhLGIpe251bGw9PWI/QShcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19ZnVuY3Rpb24gQmEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIENhPW51bGw7XG5mdW5jdGlvbiBEYShhLGIpe2lmKGEpe3ZhciBjPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGQ9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShjKSlmb3IodmFyIGU9MDtlPGMubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2UrKyl6YShhLGIsY1tlXSxkW2VdKTtlbHNlIGMmJnphKGEsYixjLGQpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fWZ1bmN0aW9uIEVhKGEpe3JldHVybiBEYShhLCEwKX1mdW5jdGlvbiBGYShhKXtyZXR1cm4gRGEoYSwhMSl9dmFyIEdhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOnRhLGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTp1YX07XG5mdW5jdGlvbiBIYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXdhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP0EoXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY31mdW5jdGlvbiBJYShhLGIpe251bGwhPT1hJiYoQ2E9QWEoQ2EsYSkpO2E9Q2E7Q2E9bnVsbDthJiYoYj9CYShhLEVhKTpCYShhLEZhKSxDYT9BKFwiOTVcIik6dm9pZCAwLEIucmV0aHJvd0NhdWdodEVycm9yKCkpfWZ1bmN0aW9uIEphKGEsYixjLGQpe2Zvcih2YXIgZT1udWxsLGY9MDtmPG9hLmxlbmd0aDtmKyspe3ZhciBnPW9hW2ZdO2cmJihnPWcuZXh0cmFjdEV2ZW50cyhhLGIsYyxkKSkmJihlPUFhKGUsZykpfUlhKGUsITEpfXZhciBLYT17aW5qZWN0aW9uOkdhLGdldExpc3RlbmVyOkhhLHJ1bkV2ZW50c0luQmF0Y2g6SWEscnVuRXh0cmFjdGVkRXZlbnRzSW5CYXRjaDpKYX0sTGE9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksQz1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0xhLE1hPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrTGE7XG5mdW5jdGlvbiBOYShhKXtpZihhW0NdKXJldHVybiBhW0NdO2Zvcig7IWFbQ107KWlmKGEucGFyZW50Tm9kZSlhPWEucGFyZW50Tm9kZTtlbHNlIHJldHVybiBudWxsO2E9YVtDXTtyZXR1cm4gNT09PWEudGFnfHw2PT09YS50YWc/YTpudWxsfWZ1bmN0aW9uIE9hKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTtBKFwiMzNcIil9ZnVuY3Rpb24gUGEoYSl7cmV0dXJuIGFbTWFdfHxudWxsfXZhciBRYT17cHJlY2FjaGVGaWJlck5vZGU6ZnVuY3Rpb24oYSxiKXtiW0NdPWF9LGdldENsb3Nlc3RJbnN0YW5jZUZyb21Ob2RlOk5hLGdldEluc3RhbmNlRnJvbU5vZGU6ZnVuY3Rpb24oYSl7YT1hW0NdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZz9udWxsOmF9LGdldE5vZGVGcm9tSW5zdGFuY2U6T2EsZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZTpQYSx1cGRhdGVGaWJlclByb3BzOmZ1bmN0aW9uKGEsYil7YVtNYV09Yn19O1xuZnVuY3Rpb24gRihhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIFJhKGEsYixjKXtmb3IodmFyIGQ9W107YTspZC5wdXNoKGEpLGE9RihhKTtmb3IoYT1kLmxlbmd0aDswPGEtLTspYihkW2FdLFwiY2FwdHVyZWRcIixjKTtmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKWIoZFthXSxcImJ1YmJsZWRcIixjKX1mdW5jdGlvbiBTYShhLGIsYyl7aWYoYj1IYShhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPUFhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPUFhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfWZ1bmN0aW9uIFRhKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMmJlJhKGEuX3RhcmdldEluc3QsU2EsYSl9XG5mdW5jdGlvbiBVYShhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXt2YXIgYj1hLl90YXJnZXRJbnN0O2I9Yj9GKGIpOm51bGw7UmEoYixTYSxhKX19ZnVuY3Rpb24gVmEoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9SGEoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPUFhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPUFhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBYYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlZhKGEuX3RhcmdldEluc3QsbnVsbCxhKX1mdW5jdGlvbiBZYShhKXtCYShhLFRhKX1cbmZ1bmN0aW9uIFphKGEsYixjLGQpe2lmKGMmJmQpYTp7dmFyIGU9Yztmb3IodmFyIGY9ZCxnPTAsaD1lO2g7aD1GKGgpKWcrKztoPTA7Zm9yKHZhciBrPWY7aztrPUYoaykpaCsrO2Zvcig7MDxnLWg7KWU9RihlKSxnLS07Zm9yKDswPGgtZzspZj1GKGYpLGgtLTtmb3IoO2ctLTspe2lmKGU9PT1mfHxlPT09Zi5hbHRlcm5hdGUpYnJlYWsgYTtlPUYoZSk7Zj1GKGYpfWU9bnVsbH1lbHNlIGU9bnVsbDtmPWU7Zm9yKGU9W107YyYmYyE9PWY7KXtnPWMuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09ZilicmVhaztlLnB1c2goYyk7Yz1GKGMpfWZvcihjPVtdO2QmJmQhPT1mOyl7Zz1kLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PWYpYnJlYWs7Yy5wdXNoKGQpO2Q9RihkKX1mb3IoZD0wO2Q8ZS5sZW5ndGg7ZCsrKVZhKGVbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGE9Yy5sZW5ndGg7MDxhLS07KVZhKGNbYV0sXCJjYXB0dXJlZFwiLGIpfVxudmFyICRhPXthY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzOllhLGFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXNTa2lwVGFyZ2V0OmZ1bmN0aW9uKGEpe0JhKGEsVWEpfSxhY2N1bXVsYXRlRW50ZXJMZWF2ZURpc3BhdGNoZXM6WmEsYWNjdW11bGF0ZURpcmVjdERpc3BhdGNoZXM6ZnVuY3Rpb24oYSl7QmEoYSxYYSl9fTtmdW5jdGlvbiBhYihhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO2NbXCJtc1wiK2FdPVwiTVNcIitiO2NbXCJPXCIrYV09XCJvXCIrYi50b0xvd2VyQ2FzZSgpO3JldHVybiBjfVxudmFyIGJiPXthbmltYXRpb25lbmQ6YWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246YWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDphYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDphYihcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LGNiPXt9LGRiPXt9O20uY2FuVXNlRE9NJiYoZGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgYmIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgYmIuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgYmIuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgYmIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtcbmZ1bmN0aW9uIGViKGEpe2lmKGNiW2FdKXJldHVybiBjYlthXTtpZighYmJbYV0pcmV0dXJuIGE7dmFyIGI9YmJbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gZGIpcmV0dXJuIGNiW2FdPWJbY107cmV0dXJuIGF9dmFyIGZiPWViKFwiYW5pbWF0aW9uZW5kXCIpLGdiPWViKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLGhiPWViKFwiYW5pbWF0aW9uc3RhcnRcIiksaWI9ZWIoXCJ0cmFuc2l0aW9uZW5kXCIpLGpiPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxrYj1udWxsO1xuZnVuY3Rpb24gbGIoKXsha2ImJm0uY2FuVXNlRE9NJiYoa2I9XCJ0ZXh0Q29udGVudFwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50P1widGV4dENvbnRlbnRcIjpcImlubmVyVGV4dFwiKTtyZXR1cm4ga2J9dmFyIEc9e19yb290Om51bGwsX3N0YXJ0VGV4dDpudWxsLF9mYWxsYmFja1RleHQ6bnVsbH07ZnVuY3Rpb24gbWIoKXtpZihHLl9mYWxsYmFja1RleHQpcmV0dXJuIEcuX2ZhbGxiYWNrVGV4dDt2YXIgYSxiPUcuX3N0YXJ0VGV4dCxjPWIubGVuZ3RoLGQsZT1uYigpLGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7Ry5fZmFsbGJhY2tUZXh0PWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCk7cmV0dXJuIEcuX2ZhbGxiYWNrVGV4dH1mdW5jdGlvbiBuYigpe3JldHVyblwidmFsdWVcImluIEcuX3Jvb3Q/Ry5fcm9vdC52YWx1ZTpHLl9yb290W2xiKCldfVxudmFyIG9iPVwiZGlzcGF0Y2hDb25maWcgX3RhcmdldEluc3QgbmF0aXZlRXZlbnQgaXNEZWZhdWx0UHJldmVudGVkIGlzUHJvcGFnYXRpb25TdG9wcGVkIF9kaXNwYXRjaExpc3RlbmVycyBfZGlzcGF0Y2hJbnN0YW5jZXNcIi5zcGxpdChcIiBcIikscGI9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OnYudGhhdFJldHVybnNOdWxsLGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5mdW5jdGlvbiBIKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT92LnRoYXRSZXR1cm5zVHJ1ZTp2LnRoYXRSZXR1cm5zRmFsc2U7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD12LnRoYXRSZXR1cm5zRmFsc2U7cmV0dXJuIHRoaXN9XG5wKEgucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9di50aGF0UmV0dXJuc1RydWUpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9di50aGF0UmV0dXJuc1RydWUpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9di50aGF0UmV0dXJuc1RydWV9LGlzUGVyc2lzdGVudDp2LnRoYXRSZXR1cm5zRmFsc2UsXG5kZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDtmb3IoYT0wO2E8b2IubGVuZ3RoO2ErKyl0aGlzW29iW2FdXT1udWxsfX0pO0guSW50ZXJmYWNlPXBiO0guZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO3AoZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPXAoe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7cWIoYyk7cmV0dXJuIGN9O3FiKEgpO1xuZnVuY3Rpb24gcmIoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9ZnVuY3Rpb24gc2IoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOkEoXCIyMjNcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIHFiKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPXJiO2EucmVsZWFzZT1zYn12YXIgdGI9SC5leHRlbmQoe2RhdGE6bnVsbH0pLHViPUguZXh0ZW5kKHtkYXRhOm51bGx9KSx2Yj1bOSwxMywyNywzMl0sd2I9bS5jYW5Vc2VET00mJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LHhiPW51bGw7bS5jYW5Vc2VET00mJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKHhiPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgeWI9bS5jYW5Vc2VET00mJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiF4Yix6Yj1tLmNhblVzZURPTSYmKCF3Ynx8eGImJjg8eGImJjExPj14YiksQWI9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksQmI9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0sQ2I9ITE7XG5mdW5jdGlvbiBEYihhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PXZiLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gRWIoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgRmI9ITE7ZnVuY3Rpb24gR2IoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIEViKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtDYj0hMDtyZXR1cm4gQWI7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09QWImJkNiP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIEhiKGEsYil7aWYoRmIpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IXdiJiZEYihhLGIpPyhhPW1iKCksRy5fcm9vdD1udWxsLEcuX3N0YXJ0VGV4dD1udWxsLEcuX2ZhbGxiYWNrVGV4dD1udWxsLEZiPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiB6Yj9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBJYj17ZXZlbnRUeXBlczpCYixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZvaWQgMDt2YXIgZj12b2lkIDA7aWYod2IpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6ZT1CYi5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6ZT1CYi5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmU9QmIuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1lPXZvaWQgMH1lbHNlIEZiP0RiKGEsYykmJihlPUJiLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGU9QmIuY29tcG9zaXRpb25TdGFydCk7ZT8oemImJihGYnx8ZSE9PUJiLmNvbXBvc2l0aW9uU3RhcnQ/ZT09PUJiLmNvbXBvc2l0aW9uRW5kJiZGYiYmKGY9bWIoKSk6KEcuX3Jvb3Q9ZCxHLl9zdGFydFRleHQ9bmIoKSxGYj0hMCkpLGU9dGIuZ2V0UG9vbGVkKGUsYixjLGQpLGY/ZS5kYXRhPVxuZjooZj1FYihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksWWEoZSksZj1lKTpmPW51bGw7KGE9eWI/R2IoYSxjKTpIYihhLGMpKT8oYj11Yi5nZXRQb29sZWQoQmIuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFlhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LEpiPW51bGwsS2I9e2luamVjdEZpYmVyQ29udHJvbGxlZEhvc3RDb21wb25lbnQ6ZnVuY3Rpb24oYSl7SmI9YX19LExiPW51bGwsTWI9bnVsbDtmdW5jdGlvbiBOYihhKXtpZihhPXhhKGEpKXtKYiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIEpiLnJlc3RvcmVDb250cm9sbGVkU3RhdGU/dm9pZCAwOkEoXCIxOTRcIik7dmFyIGI9d2EoYS5zdGF0ZU5vZGUpO0piLnJlc3RvcmVDb250cm9sbGVkU3RhdGUoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBPYihhKXtMYj9NYj9NYi5wdXNoKGEpOk1iPVthXTpMYj1hfVxuZnVuY3Rpb24gUGIoKXtyZXR1cm4gbnVsbCE9PUxifHxudWxsIT09TWJ9ZnVuY3Rpb24gUWIoKXtpZihMYil7dmFyIGE9TGIsYj1NYjtNYj1MYj1udWxsO05iKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylOYihiW2FdKX19dmFyIFJiPXtpbmplY3Rpb246S2IsZW5xdWV1ZVN0YXRlUmVzdG9yZTpPYixuZWVkc1N0YXRlUmVzdG9yZTpQYixyZXN0b3JlU3RhdGVJZk5lZWRlZDpRYn07ZnVuY3Rpb24gU2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBUYihhLGIsYyl7cmV0dXJuIGEoYixjKX1mdW5jdGlvbiBVYigpe312YXIgVmI9ITE7ZnVuY3Rpb24gV2IoYSxiKXtpZihWYilyZXR1cm4gYShiKTtWYj0hMDt0cnl7cmV0dXJuIFNiKGEsYil9ZmluYWxseXtWYj0hMSxQYigpJiYoVWIoKSxRYigpKX19XG52YXIgWGI9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gWWIoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFYYlthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gWmIoYSl7YT1hLnRhcmdldHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1cbmZ1bmN0aW9uICRiKGEsYil7aWYoIW0uY2FuVXNlRE9NfHxiJiYhKFwiYWRkRXZlbnRMaXN0ZW5lclwiaW4gZG9jdW1lbnQpKXJldHVybiExO2E9XCJvblwiK2E7Yj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9ZnVuY3Rpb24gYWMoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIGJjKGEpe3ZhciBiPWFjKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBjYyhhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9YmMoYSkpfWZ1bmN0aW9uIGRjKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1hYyhhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfVxudmFyIGVjPWNhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELlJlYWN0Q3VycmVudE93bmVyLEk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixmYz1JP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGdjPUk/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixoYz1JP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxpYz1JP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxqYz1JP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxtYz1JP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxuYz1JP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLG9jPUk/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEscGM9ST9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscWM9ST9TeW1ib2wuZm9yKFwicmVhY3QudGltZW91dFwiKTpcbjYwMTEzLHJjPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBzYyhhKXtpZihudWxsPT09YXx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO2E9cmMmJmFbcmNdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XG5mdW5jdGlvbiB0YyhhKXt2YXIgYj1hLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGIuZGlzcGxheU5hbWV8fGIubmFtZTtpZihcInN0cmluZ1wiPT09dHlwZW9mIGIpcmV0dXJuIGI7c3dpdGNoKGIpe2Nhc2Ugb2M6cmV0dXJuXCJBc3luY01vZGVcIjtjYXNlIG5jOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgaGM6cmV0dXJuXCJSZWFjdEZyYWdtZW50XCI7Y2FzZSBnYzpyZXR1cm5cIlJlYWN0UG9ydGFsXCI7Y2FzZSBqYzpyZXR1cm5cIlByb2ZpbGVyKFwiK2EucGVuZGluZ1Byb3BzLmlkK1wiKVwiO2Nhc2UgbWM6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBpYzpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIHFjOnJldHVyblwiVGltZW91dFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpc3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgcGM6cmV0dXJuIGE9Yi5yZW5kZXIuZGlzcGxheU5hbWV8fGIucmVuZGVyLm5hbWV8fFwiXCIsXCJcIiE9PWE/XCJGb3J3YXJkUmVmKFwiK1xuYStcIilcIjpcIkZvcndhcmRSZWZcIn1yZXR1cm4gbnVsbH1mdW5jdGlvbiB2YyhhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDA6Y2FzZSAxOmNhc2UgMjpjYXNlIDU6dmFyIGM9YS5fZGVidWdPd25lcixkPWEuX2RlYnVnU291cmNlO3ZhciBlPXRjKGEpO3ZhciBmPW51bGw7YyYmKGY9dGMoYykpO2M9ZDtlPVwiXFxuICAgIGluIFwiKyhlfHxcIlVua25vd25cIikrKGM/XCIgKGF0IFwiK2MuZmlsZU5hbWUucmVwbGFjZSgvXi4qW1xcXFxcXC9dLyxcIlwiKStcIjpcIitjLmxpbmVOdW1iZXIrXCIpXCI6Zj9cIiAoY3JlYXRlZCBieSBcIitmK1wiKVwiOlwiXCIpO2JyZWFrIGE7ZGVmYXVsdDplPVwiXCJ9Yis9ZTthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxudmFyIHdjPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyx4Yz17fSx5Yz17fTtmdW5jdGlvbiB6YyhhKXtpZih5Yy5oYXNPd25Qcm9wZXJ0eShhKSlyZXR1cm4hMDtpZih4Yy5oYXNPd25Qcm9wZXJ0eShhKSlyZXR1cm4hMTtpZih3Yy50ZXN0KGEpKXJldHVybiB5Y1thXT0hMDt4Y1thXT0hMDtyZXR1cm4hMX1cbmZ1bmN0aW9uIEFjKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIEJjKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fEFjKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9XG5mdW5jdGlvbiBKKGEsYixjLGQsZSl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yn12YXIgSz17fTtcImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0tbYV09bmV3IEooYSwwLCExLGEsbnVsbCl9KTtcbltbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtLW2JdPW5ldyBKKGIsMSwhMSxhWzFdLG51bGwpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7S1thXT1uZXcgSihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtLW2FdPW5ldyBKKGEsMiwhMSxhLG51bGwpfSk7XG5cImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0tbYV09bmV3IEooYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtLW2FdPW5ldyBKKGEsMywhMCxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0tbYV09bmV3IEooYSw0LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1xuW1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0tbYV09bmV3IEooYSw2LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7S1thXT1uZXcgSihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7dmFyIENjPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gRGMoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoQ2MsXG5EYyk7S1tiXT1uZXcgSihiLDEsITEsYSxudWxsKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOmhyZWYgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoQ2MsRGMpO0tbYl09bmV3IEooYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoQ2MsRGMpO0tbYl09bmV3IEooYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIil9KTtLLnRhYkluZGV4PW5ldyBKKFwidGFiSW5kZXhcIiwxLCExLFwidGFiaW5kZXhcIixudWxsKTtcbmZ1bmN0aW9uIEVjKGEsYixjLGQpe3ZhciBlPUsuaGFzT3duUHJvcGVydHkoYik/S1tiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KEJjKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT96YyhiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxuZnVuY3Rpb24gRmMoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIHAoe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIEdjKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPUhjKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gSWMoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZFYyhhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gSmMoYSxiKXtJYyhhLGIpO3ZhciBjPUhjKGIudmFsdWUpO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWIudHlwZSl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtiLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/S2MoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmS2MoYSxiLnR5cGUsSGMoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBMYyhhLGIpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSlcIlwiPT09YS52YWx1ZSYmKGEudmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlKSxhLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Yj1hLm5hbWU7XCJcIiE9PWImJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO1wiXCIhPT1iJiYoYS5uYW1lPWIpfWZ1bmN0aW9uIEtjKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1cbmZ1bmN0aW9uIEhjKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX12YXIgTWM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gTmMoYSxiLGMpe2E9SC5nZXRQb29sZWQoTWMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtPYihjKTtZYShhKTtyZXR1cm4gYX12YXIgT2M9bnVsbCxQYz1udWxsO2Z1bmN0aW9uIFFjKGEpe0lhKGEsITEpfWZ1bmN0aW9uIFJjKGEpe3ZhciBiPU9hKGEpO2lmKGRjKGIpKXJldHVybiBhfVxuZnVuY3Rpb24gU2MoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgVGM9ITE7bS5jYW5Vc2VET00mJihUYz0kYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBVYygpe09jJiYoT2MuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsVmMpLFBjPU9jPW51bGwpfWZ1bmN0aW9uIFZjKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZSYyhQYykmJihhPU5jKFBjLGEsWmIoYSkpLFdiKFFjLGEpKX1mdW5jdGlvbiBXYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oVWMoKSxPYz1iLFBjPWMsT2MuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsVmMpKTpcImJsdXJcIj09PWEmJlVjKCl9ZnVuY3Rpb24gWGMoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gUmMoUGMpfVxuZnVuY3Rpb24gWWMoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBSYyhiKX1mdW5jdGlvbiBaYyhhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBSYyhiKX1cbnZhciAkYz17ZXZlbnRUeXBlczpNYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOlRjLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9PYShiKTp3aW5kb3csZj12b2lkIDAsZz12b2lkIDAsaD1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XCJzZWxlY3RcIj09PWh8fFwiaW5wdXRcIj09PWgmJlwiZmlsZVwiPT09ZS50eXBlP2Y9U2M6WWIoZSk/VGM/Zj1aYzooZj1YYyxnPVdjKTooaD1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09aC50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZj1ZYyk7aWYoZiYmKGY9ZihhLGIpKSlyZXR1cm4gTmMoZixjLGQpO2cmJmcoYSxlLGIpO1wiYmx1clwiPT09YSYmbnVsbCE9YiYmKGE9Yi5fd3JhcHBlclN0YXRlfHxlLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJktjKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LGFkPUguZXh0ZW5kKHt2aWV3Om51bGwsXG5kZXRhaWw6bnVsbH0pLGJkPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBjZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPWJkW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gZGQoKXtyZXR1cm4gY2R9XG52YXIgZWQ9YWQuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmRkLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfX0pLGZkPWVkLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksZ2Q9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sXG5tb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LGhkPXtldmVudFR5cGVzOmdkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZj1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFmJiYhZSlyZXR1cm4gbnVsbDtlPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8XG5lLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/TmEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxrPXZvaWQgMCxuPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPWVkLGg9Z2QubW91c2VMZWF2ZSxrPWdkLm1vdXNlRW50ZXIsbj1cIm1vdXNlXCI7ZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpZz1mZCxoPWdkLnBvaW50ZXJMZWF2ZSxrPWdkLnBvaW50ZXJFbnRlcixuPVwicG9pbnRlclwiO2E9bnVsbD09Zj9lOk9hKGYpO2U9bnVsbD09Yj9lOk9hKGIpO2g9Zy5nZXRQb29sZWQoaCxmLGMsZCk7aC50eXBlPW4rXCJsZWF2ZVwiO2gudGFyZ2V0PWE7aC5yZWxhdGVkVGFyZ2V0PWU7Yz1nLmdldFBvb2xlZChrLGIsYyxkKTtjLnR5cGU9bitcImVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9YTtaYShoLFxuYyxmLGIpO3JldHVybltoLGNdfX07ZnVuY3Rpb24gaWQoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gamQoYSl7MiE9PWlkKGEpP0EoXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24ga2QoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9aWQoYSksMz09PWI/QShcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gamQoZSksYTtpZihnPT09ZClyZXR1cm4gamQoZSksYjtnPWcuc2libGluZ31BKFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6QShcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP0EoXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz9BKFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGxkKGEpe2E9a2QoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBtZChhKXthPWtkKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQmJjQhPT1iLnRhZyliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9dmFyIG5kPUguZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxvZD1ILmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLHBkPWFkLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7XG5mdW5jdGlvbiBxZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciByZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sc2Q9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LHRkPWFkLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1yZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1xZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/c2RbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOmRkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP3FkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP3FkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksdWQ9ZWQuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHZkPWFkLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmRkfSksd2Q9SC5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSkseGQ9ZWQuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx5ZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtmYixcImFuaW1hdGlvbkVuZFwiXSxbZ2IsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sW2hiLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbaWIsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSx6ZD17fSxBZD17fTtmdW5jdGlvbiBCZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O3pkW2FdPWI7QWRbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiZGJsY2xpY2tcIixcImRvdWJsZUNsaWNrXCJdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIl0sW1wiZHJhZ3N0YXJ0XCIsXCJkcmFnU3RhcnRcIl0sW1wiZHJvcFwiLFwiZHJvcFwiXSxbXCJmb2N1c1wiLFwiZm9jdXNcIl0sW1wiaW5wdXRcIixcImlucHV0XCJdLFtcImludmFsaWRcIixcImludmFsaWRcIl0sW1wia2V5ZG93blwiLFwia2V5RG93blwiXSxbXCJrZXlwcmVzc1wiLFwia2V5UHJlc3NcIl0sW1wia2V5dXBcIixcImtleVVwXCJdLFtcIm1vdXNlZG93blwiLFwibW91c2VEb3duXCJdLFtcIm1vdXNldXBcIixcIm1vdXNlVXBcIl0sW1wicGFzdGVcIixcInBhc3RlXCJdLFtcInBhdXNlXCIsXCJwYXVzZVwiXSxbXCJwbGF5XCIsXCJwbGF5XCJdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIl0sW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFxuW1wicG9pbnRlcnVwXCIsXCJwb2ludGVyVXBcIl0sW1wicmF0ZWNoYW5nZVwiLFwicmF0ZUNoYW5nZVwiXSxbXCJyZXNldFwiLFwicmVzZXRcIl0sW1wic2Vla2VkXCIsXCJzZWVrZWRcIl0sW1wic3VibWl0XCIsXCJzdWJtaXRcIl0sW1widG91Y2hjYW5jZWxcIixcInRvdWNoQ2FuY2VsXCJdLFtcInRvdWNoZW5kXCIsXCJ0b3VjaEVuZFwiXSxbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaFN0YXJ0XCJdLFtcInZvbHVtZWNoYW5nZVwiLFwidm9sdW1lQ2hhbmdlXCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0JkKGEsITApfSk7eWQuZm9yRWFjaChmdW5jdGlvbihhKXtCZChhLCExKX0pO1xudmFyIENkPXtldmVudFR5cGVzOnpkLGlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZTpmdW5jdGlvbihhKXthPUFkW2FdO3JldHVybiB2b2lkIDAhPT1hJiYhMD09PWEuaXNJbnRlcmFjdGl2ZX0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1BZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PXFkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT10ZDticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9cGQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1lZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPVxudWQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT12ZDticmVhaztjYXNlIGZiOmNhc2UgZ2I6Y2FzZSBoYjphPW5kO2JyZWFrO2Nhc2UgaWI6YT13ZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1hZDticmVhaztjYXNlIFwid2hlZWxcIjphPXhkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9b2Q7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1mZDticmVhaztkZWZhdWx0OmE9SH1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1lhKGIpO3JldHVybiBifX0sRGQ9Q2QuaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlLFxuRWQ9W107ZnVuY3Rpb24gRmQoYSl7dmFyIGI9YS50YXJnZXRJbnN0O2Rve2lmKCFiKXthLmFuY2VzdG9ycy5wdXNoKGIpO2JyZWFrfXZhciBjO2ZvcihjPWI7Yy5yZXR1cm47KWM9Yy5yZXR1cm47Yz0zIT09Yy50YWc/bnVsbDpjLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKCFjKWJyZWFrO2EuYW5jZXN0b3JzLnB1c2goYik7Yj1OYShjKX13aGlsZShiKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyliPWEuYW5jZXN0b3JzW2NdLEphKGEudG9wTGV2ZWxUeXBlLGIsYS5uYXRpdmVFdmVudCxaYihhLm5hdGl2ZUV2ZW50KSl9dmFyIEdkPSEwO2Z1bmN0aW9uIElkKGEpe0dkPSEhYX1mdW5jdGlvbiBMKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KERkKGEpP0pkOktkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9XG5mdW5jdGlvbiBMZChhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPShEZChhKT9KZDpLZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITApfWZ1bmN0aW9uIEpkKGEsYil7VGIoS2QsYSxiKX1mdW5jdGlvbiBLZChhLGIpe2lmKEdkKXt2YXIgYz1aYihiKTtjPU5hKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09aWQoYyl8fChjPW51bGwpO2lmKEVkLmxlbmd0aCl7dmFyIGQ9RWQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7V2IoRmQsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD5FZC5sZW5ndGgmJkVkLnB1c2goYSl9fX1cbnZhciBNZD17Z2V0IF9lbmFibGVkKCl7cmV0dXJuIEdkfSxzZXRFbmFibGVkOklkLGlzRW5hYmxlZDpmdW5jdGlvbigpe3JldHVybiBHZH0sdHJhcEJ1YmJsZWRFdmVudDpMLHRyYXBDYXB0dXJlZEV2ZW50OkxkLGRpc3BhdGNoRXZlbnQ6S2R9LE5kPXt9LE9kPTAsUGQ9XCJfcmVhY3RMaXN0ZW5lcnNJRFwiKyhcIlwiK01hdGgucmFuZG9tKCkpLnNsaWNlKDIpO2Z1bmN0aW9uIFFkKGEpe09iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLFBkKXx8KGFbUGRdPU9kKyssTmRbYVtQZF1dPXt9KTtyZXR1cm4gTmRbYVtQZF1dfWZ1bmN0aW9uIFJkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIFNkKGEsYil7dmFyIGM9UmQoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9UmQoYyl9fWZ1bmN0aW9uIFRkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJlwidGV4dFwiPT09YS50eXBlfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBVZD1tLmNhblVzZURPTSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFZkPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sV2Q9bnVsbCxYZD1udWxsLFlkPW51bGwsWmQ9ITE7XG5mdW5jdGlvbiAkZChhLGIpe2lmKFpkfHxudWxsPT1XZHx8V2QhPT1kYSgpKXJldHVybiBudWxsO3ZhciBjPVdkO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJlRkKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTp3aW5kb3cuZ2V0U2VsZWN0aW9uPyhjPXdpbmRvdy5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTpjPXZvaWQgMDtyZXR1cm4gWWQmJmVhKFlkLGMpP251bGw6KFlkPWMsYT1ILmdldFBvb2xlZChWZC5zZWxlY3QsWGQsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1XZCxZYShhKSxhKX1cbnZhciBhZT17ZXZlbnRUeXBlczpWZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1RZChlKTtmPXNhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddO2lmKCFlLmhhc093blByb3BlcnR5KGgpfHwhZVtoXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/T2EoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZihZYihlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSlXZD1lLFhkPWIsWWQ9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOllkPVhkPVdkPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlpkPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6cmV0dXJuIFpkPSExLCRkKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFVkKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gJGQoYyxkKX1yZXR1cm4gbnVsbH19O0dhLmluamVjdEV2ZW50UGx1Z2luT3JkZXIoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBUYXBFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7d2E9UWEuZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZTt4YT1RYS5nZXRJbnN0YW5jZUZyb21Ob2RlO3lhPVFhLmdldE5vZGVGcm9tSW5zdGFuY2U7R2EuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lKHtTaW1wbGVFdmVudFBsdWdpbjpDZCxFbnRlckxlYXZlRXZlbnRQbHVnaW46aGQsQ2hhbmdlRXZlbnRQbHVnaW46JGMsU2VsZWN0RXZlbnRQbHVnaW46YWUsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjpJYn0pO3ZhciBiZT12b2lkIDA7XG5iZT1cIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93P2Z1bmN0aW9uKCl7cmV0dXJuIHBlcmZvcm1hbmNlLm5vdygpfTpmdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpfTt2YXIgY2U9dm9pZCAwLGRlPXZvaWQgMDtcbmlmKG0uY2FuVXNlRE9NKXt2YXIgZWU9W10sZmU9MCxnZT17fSxoZT0tMSxpZT0hMSxqZT0hMSxrZT0wLGxlPTMzLG1lPTMzLG5lPXtkaWRUaW1lb3V0OiExLHRpbWVSZW1haW5pbmc6ZnVuY3Rpb24oKXt2YXIgYT1rZS1iZSgpO3JldHVybiAwPGE/YTowfX0sb2U9ZnVuY3Rpb24oYSxiKXtpZihnZVtiXSl0cnl7YShuZSl9ZmluYWxseXtkZWxldGUgZ2VbYl19fSxwZT1cIl9fcmVhY3RJZGxlQ2FsbGJhY2skXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsZnVuY3Rpb24oYSl7aWYoYS5zb3VyY2U9PT13aW5kb3cmJmEuZGF0YT09PXBlJiYoaWU9ITEsMCE9PWVlLmxlbmd0aCkpe2lmKDAhPT1lZS5sZW5ndGgmJihhPWJlKCksISgtMT09PWhlfHxoZT5hKSkpe2hlPS0xO25lLmRpZFRpbWVvdXQ9ITA7Zm9yKHZhciBiPTAsYz1lZS5sZW5ndGg7YjxjO2IrKyl7dmFyIGQ9ZWVbYl0sZT1kLnRpbWVvdXRUaW1lOy0xIT09XG5lJiZlPD1hP29lKGQuc2NoZWR1bGVkQ2FsbGJhY2ssZC5jYWxsYmFja0lkKTotMSE9PWUmJigtMT09PWhlfHxlPGhlKSYmKGhlPWUpfX1mb3IoYT1iZSgpOzA8a2UtYSYmMDxlZS5sZW5ndGg7KWE9ZWUuc2hpZnQoKSxuZS5kaWRUaW1lb3V0PSExLG9lKGEuc2NoZWR1bGVkQ2FsbGJhY2ssYS5jYWxsYmFja0lkKSxhPWJlKCk7MDxlZS5sZW5ndGgmJiFqZSYmKGplPSEwLHJlcXVlc3RBbmltYXRpb25GcmFtZShxZSkpfX0sITEpO3ZhciBxZT1mdW5jdGlvbihhKXtqZT0hMTt2YXIgYj1hLWtlK21lO2I8bWUmJmxlPG1lPyg4PmImJihiPTgpLG1lPWI8bGU/bGU6Yik6bGU9YjtrZT1hK21lO2llfHwoaWU9ITAsd2luZG93LnBvc3RNZXNzYWdlKHBlLFwiKlwiKSl9O2NlPWZ1bmN0aW9uKGEsYil7dmFyIGM9LTE7bnVsbCE9YiYmXCJudW1iZXJcIj09PXR5cGVvZiBiLnRpbWVvdXQmJihjPWJlKCkrYi50aW1lb3V0KTtpZigtMT09PWhlfHwtMSE9PWMmJmM8aGUpaGU9YztmZSsrO2I9ZmU7ZWUucHVzaCh7c2NoZWR1bGVkQ2FsbGJhY2s6YSxcbmNhbGxiYWNrSWQ6Yix0aW1lb3V0VGltZTpjfSk7Z2VbYl09ITA7amV8fChqZT0hMCxyZXF1ZXN0QW5pbWF0aW9uRnJhbWUocWUpKTtyZXR1cm4gYn07ZGU9ZnVuY3Rpb24oYSl7ZGVsZXRlIGdlW2FdfX1lbHNle3ZhciByZT0wLHNlPXt9O2NlPWZ1bmN0aW9uKGEpe3ZhciBiPXJlKyssYz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YSh7dGltZVJlbWFpbmluZzpmdW5jdGlvbigpe3JldHVybiBJbmZpbml0eX0sZGlkVGltZW91dDohMX0pfSk7c2VbYl09YztyZXR1cm4gYn07ZGU9ZnVuY3Rpb24oYSl7dmFyIGI9c2VbYV07ZGVsZXRlIHNlW2FdO2NsZWFyVGltZW91dChiKX19ZnVuY3Rpb24gdGUoYSl7dmFyIGI9XCJcIjtjYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbD09YXx8XCJzdHJpbmdcIiE9PXR5cGVvZiBhJiZcIm51bWJlclwiIT09dHlwZW9mIGF8fChiKz1hKX0pO3JldHVybiBifVxuZnVuY3Rpb24gdWUoYSxiKXthPXAoe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj10ZShiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9ZnVuY3Rpb24gdmUoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK2M7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIHdlKGEsYil7dmFyIGM9Yi52YWx1ZTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpudWxsIT1jP2M6Yi5kZWZhdWx0VmFsdWUsd2FzTXVsdGlwbGU6ISFiLm11bHRpcGxlfX1mdW5jdGlvbiB4ZShhLGIpe251bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/QShcIjkxXCIpOnZvaWQgMDtyZXR1cm4gcCh7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiB5ZShhLGIpe3ZhciBjPWIudmFsdWU7bnVsbD09YyYmKGM9Yi5kZWZhdWx0VmFsdWUsYj1iLmNoaWxkcmVuLG51bGwhPWImJihudWxsIT1jP0EoXCI5MlwiKTp2b2lkIDAsQXJyYXkuaXNBcnJheShiKSYmKDE+PWIubGVuZ3RoP3ZvaWQgMDpBKFwiOTNcIiksYj1iWzBdKSxjPVwiXCIrYiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOlwiXCIrY319XG5mdW5jdGlvbiB6ZShhLGIpe3ZhciBjPWIudmFsdWU7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1iLmRlZmF1bHRWYWx1ZSYmKGEuZGVmYXVsdFZhbHVlPWIuZGVmYXVsdFZhbHVlKX1mdW5jdGlvbiBBZShhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiYoYS52YWx1ZT1iKX12YXIgQmU9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gQ2UoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBEZShhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/Q2UoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgRWU9dm9pZCAwLEZlPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PUJlLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle0VlPUVlfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO0VlLmlubmVySFRNTD1cIjxzdmc+XCIrYitcIjwvc3ZnPlwiO2ZvcihiPUVlLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIEdlKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgSGU9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLGZsb29kT3BhY2l0eTohMCxcbnN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sSWU9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKEhlKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0llLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7SGVbYl09SGVbYV19KX0pO1xuZnVuY3Rpb24gSmUoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpO3ZhciBlPWM7dmFyIGY9YltjXTtlPW51bGw9PWZ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGZ8fFwiXCI9PT1mP1wiXCI6ZHx8XCJudW1iZXJcIiE9PXR5cGVvZiBmfHwwPT09Znx8SGUuaGFzT3duUHJvcGVydHkoZSkmJkhlW2VdPyhcIlwiK2YpLnRyaW0oKTpmK1wicHhcIjtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIEtlPXAoe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBMZShhLGIsYyl7YiYmKEtlW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD9BKFwiMTM3XCIsYSxjKCkpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/QShcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDpBKFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT9BKFwiNjJcIixjKCkpOnZvaWQgMCl9XG5mdW5jdGlvbiBNZShhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIE5lPXYudGhhdFJldHVybnMoXCJcIik7XG5mdW5jdGlvbiBPZShhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1RZChhKTtiPXNhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXt2YXIgZT1iW2RdO2lmKCFjLmhhc093blByb3BlcnR5KGUpfHwhY1tlXSl7c3dpdGNoKGUpe2Nhc2UgXCJzY3JvbGxcIjpMZChcInNjcm9sbFwiLGEpO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6TGQoXCJmb2N1c1wiLGEpO0xkKFwiYmx1clwiLGEpO2MuYmx1cj0hMDtjLmZvY3VzPSEwO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjokYihlLCEwKSYmTGQoZSxhKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09amIuaW5kZXhPZihlKSYmTChlLGEpfWNbZV09ITB9fX1cbmZ1bmN0aW9uIFBlKGEsYixjLGQpe2M9OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7ZD09PUJlLmh0bWwmJihkPUNlKGEpKTtkPT09QmUuaHRtbD9cInNjcmlwdFwiPT09YT8oYT1jLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6YT1cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM/Yy5jcmVhdGVFbGVtZW50KGEse2lzOmIuaXN9KTpjLmNyZWF0ZUVsZW1lbnQoYSk6YT1jLmNyZWF0ZUVsZW1lbnROUyhkLGEpO3JldHVybiBhfWZ1bmN0aW9uIFFlKGEsYil7cmV0dXJuKDk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShhKX1cbmZ1bmN0aW9uIFJlKGEsYixjLGQpe3ZhciBlPU1lKGIsYyk7c3dpdGNoKGIpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6TChcImxvYWRcIixhKTt2YXIgZj1jO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihmPTA7ZjxqYi5sZW5ndGg7ZisrKUwoamJbZl0sYSk7Zj1jO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpMKFwiZXJyb3JcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6TChcImVycm9yXCIsYSk7TChcImxvYWRcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImZvcm1cIjpMKFwicmVzZXRcIixhKTtMKFwic3VibWl0XCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6TChcInRvZ2dsZVwiLGEpO2Y9YzticmVhaztjYXNlIFwiaW5wdXRcIjpHYyhhLGMpO2Y9RmMoYSxjKTtMKFwiaW52YWxpZFwiLGEpO09lKGQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj11ZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjp3ZShhLGMpO2Y9cCh7fSxjLHt2YWx1ZTp2b2lkIDB9KTtcbkwoXCJpbnZhbGlkXCIsYSk7T2UoZCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnllKGEsYyk7Zj14ZShhLGMpO0woXCJpbnZhbGlkXCIsYSk7T2UoZCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6Zj1jfUxlKGIsZixOZSk7dmFyIGc9ZixoO2ZvcihoIGluIGcpaWYoZy5oYXNPd25Qcm9wZXJ0eShoKSl7dmFyIGs9Z1toXTtcInN0eWxlXCI9PT1oP0plKGEsayxOZSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZGZShhLGspKTpcImNoaWxkcmVuXCI9PT1oP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09Ynx8XCJcIiE9PWspJiZHZShhLGspOlwibnVtYmVyXCI9PT10eXBlb2YgayYmR2UoYSxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmXCJhdXRvRm9jdXNcIiE9PWgmJihyYS5oYXNPd25Qcm9wZXJ0eShoKT9udWxsIT1rJiZPZShkLFxuaCk6bnVsbCE9ayYmRWMoYSxoLGssZSkpfXN3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpjYyhhKTtMYyhhLGMpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmNjKGEpO0FlKGEsYyk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWMudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixjLnZhbHVlKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWMubXVsdGlwbGU7Yj1jLnZhbHVlO251bGwhPWI/dmUoYSwhIWMubXVsdGlwbGUsYiwhMSk6bnVsbCE9Yy5kZWZhdWx0VmFsdWUmJnZlKGEsISFjLm11bHRpcGxlLGMuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJihhLm9uY2xpY2s9dil9fVxuZnVuY3Rpb24gU2UoYSxiLGMsZCxlKXt2YXIgZj1udWxsO3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpjPUZjKGEsYyk7ZD1GYyhhLGQpO2Y9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmM9dWUoYSxjKTtkPXVlKGEsZCk7Zj1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Yz1wKHt9LGMse3ZhbHVlOnZvaWQgMH0pO2Q9cCh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtmPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmM9eGUoYSxjKTtkPXhlKGEsZCk7Zj1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihhLm9uY2xpY2s9dil9TGUoYixkLE5lKTtiPWE9dm9pZCAwO3ZhciBnPW51bGw7Zm9yKGEgaW4gYylpZighZC5oYXNPd25Qcm9wZXJ0eShhKSYmYy5oYXNPd25Qcm9wZXJ0eShhKSYmbnVsbCE9Y1thXSlpZihcInN0eWxlXCI9PT1hKXt2YXIgaD1jW2FdO2ZvcihiIGluIGgpaC5oYXNPd25Qcm9wZXJ0eShiKSYmKGd8fFxuKGc9e30pLGdbYl09XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWEmJlwiY2hpbGRyZW5cIiE9PWEmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1hJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YSYmXCJhdXRvRm9jdXNcIiE9PWEmJihyYS5oYXNPd25Qcm9wZXJ0eShhKT9mfHwoZj1bXSk6KGY9Znx8W10pLnB1c2goYSxudWxsKSk7Zm9yKGEgaW4gZCl7dmFyIGs9ZFthXTtoPW51bGwhPWM/Y1thXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShhKSYmayE9PWgmJihudWxsIT1rfHxudWxsIT1oKSlpZihcInN0eWxlXCI9PT1hKWlmKGgpe2ZvcihiIGluIGgpIWguaGFzT3duUHJvcGVydHkoYil8fGsmJmsuaGFzT3duUHJvcGVydHkoYil8fChnfHwoZz17fSksZ1tiXT1cIlwiKTtmb3IoYiBpbiBrKWsuaGFzT3duUHJvcGVydHkoYikmJmhbYl0hPT1rW2JdJiYoZ3x8KGc9e30pLGdbYl09a1tiXSl9ZWxzZSBnfHwoZnx8KGY9W10pLGYucHVzaChhLGcpKSxcbmc9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09YT8oaz1rP2suX19odG1sOnZvaWQgMCxoPWg/aC5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmghPT1rJiYoZj1mfHxbXSkucHVzaChhLFwiXCIraykpOlwiY2hpbGRyZW5cIj09PWE/aD09PWt8fFwic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoZj1mfHxbXSkucHVzaChhLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWEmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1hJiYocmEuaGFzT3duUHJvcGVydHkoYSk/KG51bGwhPWsmJk9lKGUsYSksZnx8aD09PWt8fChmPVtdKSk6KGY9Znx8W10pLnB1c2goYSxrKSl9ZyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLGcpO3JldHVybiBmfVxuZnVuY3Rpb24gVGUoYSxiLGMsZCxlKXtcImlucHV0XCI9PT1jJiZcInJhZGlvXCI9PT1lLnR5cGUmJm51bGwhPWUubmFtZSYmSWMoYSxlKTtNZShjLGQpO2Q9TWUoYyxlKTtmb3IodmFyIGY9MDtmPGIubGVuZ3RoO2YrPTIpe3ZhciBnPWJbZl0saD1iW2YrMV07XCJzdHlsZVwiPT09Zz9KZShhLGgsTmUpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/RmUoYSxoKTpcImNoaWxkcmVuXCI9PT1nP0dlKGEsaCk6RWMoYSxnLGgsZCl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOkpjKGEsZSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6emUoYSxlKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZT12b2lkIDAsYj1hLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZS5tdWx0aXBsZSxjPWUudmFsdWUsbnVsbCE9Yz92ZShhLCEhZS5tdWx0aXBsZSxjLCExKTpiIT09ISFlLm11bHRpcGxlJiYobnVsbCE9ZS5kZWZhdWx0VmFsdWU/XG52ZShhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSwhMCk6dmUoYSwhIWUubXVsdGlwbGUsZS5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fVxuZnVuY3Rpb24gVWUoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpMKFwibG9hZFwiLGEpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihkPTA7ZDxqYi5sZW5ndGg7ZCsrKUwoamJbZF0sYSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkwoXCJlcnJvclwiLGEpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkwoXCJlcnJvclwiLGEpO0woXCJsb2FkXCIsYSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpMKFwicmVzZXRcIixhKTtMKFwic3VibWl0XCIsYSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpMKFwidG9nZ2xlXCIsYSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6R2MoYSxjKTtMKFwiaW52YWxpZFwiLGEpO09lKGUsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6d2UoYSxjKTtMKFwiaW52YWxpZFwiLGEpO09lKGUsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp5ZShhLGMpLEwoXCJpbnZhbGlkXCIsYSksT2UoZSxcIm9uQ2hhbmdlXCIpfUxlKGIsXG5jLE5lKTtkPW51bGw7Zm9yKHZhciBmIGluIGMpaWYoYy5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGc9Y1tmXTtcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgZz9hLnRleHRDb250ZW50IT09ZyYmKGQ9W1wiY2hpbGRyZW5cIixnXSk6XCJudW1iZXJcIj09PXR5cGVvZiBnJiZhLnRleHRDb250ZW50IT09XCJcIitnJiYoZD1bXCJjaGlsZHJlblwiLFwiXCIrZ10pOnJhLmhhc093blByb3BlcnR5KGYpJiZudWxsIT1nJiZPZShlLGYpfXN3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpjYyhhKTtMYyhhLGMpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmNjKGEpO0FlKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLm9uQ2xpY2smJihhLm9uY2xpY2s9dil9cmV0dXJuIGR9ZnVuY3Rpb24gVmUoYSxiKXtyZXR1cm4gYS5ub2RlVmFsdWUhPT1ifVxudmFyIFdlPXtjcmVhdGVFbGVtZW50OlBlLGNyZWF0ZVRleHROb2RlOlFlLHNldEluaXRpYWxQcm9wZXJ0aWVzOlJlLGRpZmZQcm9wZXJ0aWVzOlNlLHVwZGF0ZVByb3BlcnRpZXM6VGUsZGlmZkh5ZHJhdGVkUHJvcGVydGllczpVZSxkaWZmSHlkcmF0ZWRUZXh0OlZlLHdhcm5Gb3JVbm1hdGNoZWRUZXh0OmZ1bmN0aW9uKCl7fSx3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVFbGVtZW50OmZ1bmN0aW9uKCl7fSx3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVUZXh0OmZ1bmN0aW9uKCl7fSx3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZEVsZW1lbnQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkVGV4dDpmdW5jdGlvbigpe30scmVzdG9yZUNvbnRyb2xsZWRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkpjKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7XG5jPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPVBhKGQpO2U/dm9pZCAwOkEoXCI5MFwiKTtkYyhkKTtKYyhkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6emUoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJnZlKGEsISFjLm11bHRpcGxlLGIsITEpfX19LFhlPW51bGwsWWU9bnVsbDtmdW5jdGlvbiBaZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiAkZShhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcInN0cmluZ1wiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBhZj1iZSxiZj1jZSxjZj1kZTtmdW5jdGlvbiBkZihhKXtmb3IoYT1hLm5leHRTaWJsaW5nO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGVmKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1uZXcgU2V0O3ZhciBmZj1bXSxnZj0tMTtmdW5jdGlvbiBoZihhKXtyZXR1cm57Y3VycmVudDphfX1cbmZ1bmN0aW9uIE0oYSl7MD5nZnx8KGEuY3VycmVudD1mZltnZl0sZmZbZ2ZdPW51bGwsZ2YtLSl9ZnVuY3Rpb24gTihhLGIpe2dmKys7ZmZbZ2ZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgamY9aGYoaGEpLE89aGYoITEpLGtmPWhhO2Z1bmN0aW9uIGxmKGEpe3JldHVybiBtZihhKT9rZjpqZi5jdXJyZW50fVxuZnVuY3Rpb24gbmYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBoYTt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBtZihhKXtyZXR1cm4gMj09PWEudGFnJiZudWxsIT1hLnR5cGUuY2hpbGRDb250ZXh0VHlwZXN9ZnVuY3Rpb24gb2YoYSl7bWYoYSkmJihNKE8sYSksTShqZixhKSl9ZnVuY3Rpb24gcGYoYSl7TShPLGEpO00oamYsYSl9XG5mdW5jdGlvbiBxZihhLGIsYyl7amYuY3VycmVudCE9PWhhP0EoXCIxNjhcIik6dm9pZCAwO04oamYsYixhKTtOKE8sYyxhKX1mdW5jdGlvbiByZihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlLGQ9YS50eXBlLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldENoaWxkQ29udGV4dClyZXR1cm4gYjtjPWMuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGMpZSBpbiBkP3ZvaWQgMDpBKFwiMTA4XCIsdGMoYSl8fFwiVW5rbm93blwiLGUpO3JldHVybiBwKHt9LGIsYyl9ZnVuY3Rpb24gc2YoYSl7aWYoIW1mKGEpKXJldHVybiExO3ZhciBiPWEuc3RhdGVOb2RlO2I9YiYmYi5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8aGE7a2Y9amYuY3VycmVudDtOKGpmLGIsYSk7TihPLE8uY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIHRmKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7Yz92b2lkIDA6QShcIjE2OVwiKTtpZihiKXt2YXIgZD1yZihhLGtmKTtjLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWQ7TShPLGEpO00oamYsYSk7TihqZixkLGEpfWVsc2UgTShPLGEpO04oTyxiLGEpfVxuZnVuY3Rpb24gdWYoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1cbmZ1bmN0aW9uIHZmKGEsYixjKXt2YXIgZD1hLmFsdGVybmF0ZTtudWxsPT09ZD8oZD1uZXcgdWYoYS50YWcsYixhLmtleSxhLm1vZGUpLGQudHlwZT1hLnR5cGUsZC5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsZC5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1kKTooZC5wZW5kaW5nUHJvcHM9YixkLmVmZmVjdFRhZz0wLGQubmV4dEVmZmVjdD1udWxsLGQuZmlyc3RFZmZlY3Q9bnVsbCxkLmxhc3RFZmZlY3Q9bnVsbCk7ZC5leHBpcmF0aW9uVGltZT1jO2QuY2hpbGQ9YS5jaGlsZDtkLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2QubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZC51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2Quc2libGluZz1hLnNpYmxpbmc7ZC5pbmRleD1hLmluZGV4O2QucmVmPWEucmVmO3JldHVybiBkfVxuZnVuY3Rpb24gd2YoYSxiLGMpe3ZhciBkPWEudHlwZSxlPWEua2V5O2E9YS5wcm9wcztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl2YXIgZj1kLnByb3RvdHlwZSYmZC5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD8yOjA7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGQpZj01O2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgaGM6cmV0dXJuIHhmKGEuY2hpbGRyZW4sYixjLGUpO2Nhc2Ugb2M6Zj0xMTtifD0zO2JyZWFrO2Nhc2UgaWM6Zj0xMTtifD0yO2JyZWFrO2Nhc2UgamM6cmV0dXJuIGQ9bmV3IHVmKDE1LGEsZSxifDQpLGQudHlwZT1qYyxkLmV4cGlyYXRpb25UaW1lPWMsZDtjYXNlIHFjOmY9MTY7Ynw9MjticmVhaztkZWZhdWx0OmE6e3N3aXRjaChcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kP2QuJCR0eXBlb2Y6bnVsbCl7Y2FzZSBtYzpmPTEzO2JyZWFrIGE7Y2FzZSBuYzpmPTEyO2JyZWFrIGE7Y2FzZSBwYzpmPTE0O2JyZWFrIGE7ZGVmYXVsdDpBKFwiMTMwXCIsbnVsbD09ZD9cbmQ6dHlwZW9mIGQsXCJcIil9Zj12b2lkIDB9fWI9bmV3IHVmKGYsYSxlLGIpO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYn1mdW5jdGlvbiB4ZihhLGIsYyxkKXthPW5ldyB1ZigxMCxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIHlmKGEsYixjKXthPW5ldyB1Zig2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gemYoYSxiLGMpe2I9bmV3IHVmKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gQWYoYSxiLGMpe2I9bmV3IHVmKDMsbnVsbCxudWxsLGI/MzowKTthPXtjdXJyZW50OmIsY29udGFpbmVySW5mbzphLHBlbmRpbmdDaGlsZHJlbjpudWxsLGVhcmxpZXN0UGVuZGluZ1RpbWU6MCxsYXRlc3RQZW5kaW5nVGltZTowLGVhcmxpZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RQaW5nZWRUaW1lOjAscGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOjAsZmluaXNoZWRXb3JrOm51bGwsY29udGV4dDpudWxsLHBlbmRpbmdDb250ZXh0Om51bGwsaHlkcmF0ZTpjLHJlbWFpbmluZ0V4cGlyYXRpb25UaW1lOjAsZmlyc3RCYXRjaDpudWxsLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3JldHVybiBiLnN0YXRlTm9kZT1hfXZhciBCZj1udWxsLENmPW51bGw7ZnVuY3Rpb24gRGYoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1cbmZ1bmN0aW9uIEVmKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO0JmPURmKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtDZj1EZihmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfWZ1bmN0aW9uIEZmKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBCZiYmQmYoYSl9ZnVuY3Rpb24gR2YoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIENmJiZDZihhKX12YXIgSGY9ITE7XG5mdW5jdGlvbiBJZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6MCxiYXNlU3RhdGU6YSxmaXJzdFVwZGF0ZTpudWxsLGxhc3RVcGRhdGU6bnVsbCxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1mdW5jdGlvbiBKZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YS5leHBpcmF0aW9uVGltZSxiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RVcGRhdGU6YS5maXJzdFVwZGF0ZSxsYXN0VXBkYXRlOmEubGFzdFVwZGF0ZSxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1cbmZ1bmN0aW9uIEtmKGEpe3JldHVybntleHBpcmF0aW9uVGltZTphLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIExmKGEsYixjKXtudWxsPT09YS5sYXN0VXBkYXRlP2EuZmlyc3RVcGRhdGU9YS5sYXN0VXBkYXRlPWI6KGEubGFzdFVwZGF0ZS5uZXh0PWIsYS5sYXN0VXBkYXRlPWIpO2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lfHxhLmV4cGlyYXRpb25UaW1lPmMpYS5leHBpcmF0aW9uVGltZT1jfVxuZnVuY3Rpb24gTWYoYSxiLGMpe3ZhciBkPWEuYWx0ZXJuYXRlO2lmKG51bGw9PT1kKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3ZhciBmPW51bGw7bnVsbD09PWUmJihlPWEudXBkYXRlUXVldWU9SWYoYS5tZW1vaXplZFN0YXRlKSl9ZWxzZSBlPWEudXBkYXRlUXVldWUsZj1kLnVwZGF0ZVF1ZXVlLG51bGw9PT1lP251bGw9PT1mPyhlPWEudXBkYXRlUXVldWU9SWYoYS5tZW1vaXplZFN0YXRlKSxmPWQudXBkYXRlUXVldWU9SWYoZC5tZW1vaXplZFN0YXRlKSk6ZT1hLnVwZGF0ZVF1ZXVlPUpmKGYpOm51bGw9PT1mJiYoZj1kLnVwZGF0ZVF1ZXVlPUpmKGUpKTtudWxsPT09Znx8ZT09PWY/TGYoZSxiLGMpOm51bGw9PT1lLmxhc3RVcGRhdGV8fG51bGw9PT1mLmxhc3RVcGRhdGU/KExmKGUsYixjKSxMZihmLGIsYykpOihMZihlLGIsYyksZi5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gTmYoYSxiLGMpe3ZhciBkPWEudXBkYXRlUXVldWU7ZD1udWxsPT09ZD9hLnVwZGF0ZVF1ZXVlPUlmKGEubWVtb2l6ZWRTdGF0ZSk6T2YoYSxkKTtudWxsPT09ZC5sYXN0Q2FwdHVyZWRVcGRhdGU/ZC5maXJzdENhcHR1cmVkVXBkYXRlPWQubGFzdENhcHR1cmVkVXBkYXRlPWI6KGQubGFzdENhcHR1cmVkVXBkYXRlLm5leHQ9YixkLmxhc3RDYXB0dXJlZFVwZGF0ZT1iKTtpZigwPT09ZC5leHBpcmF0aW9uVGltZXx8ZC5leHBpcmF0aW9uVGltZT5jKWQuZXhwaXJhdGlvblRpbWU9Y31mdW5jdGlvbiBPZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZiPT09Yy51cGRhdGVRdWV1ZSYmKGI9YS51cGRhdGVRdWV1ZT1KZihiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBQZihhLGIsYyxkLGUsZil7c3dpdGNoKGMudGFnKXtjYXNlIDE6cmV0dXJuIGE9Yy5wYXlsb2FkLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtjYXNlIDM6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8NjQ7Y2FzZSAwOmE9Yy5wYXlsb2FkO2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2lmKG51bGw9PT1lfHx2b2lkIDA9PT1lKWJyZWFrO3JldHVybiBwKHt9LGQsZSk7Y2FzZSAyOkhmPSEwfXJldHVybiBkfVxuZnVuY3Rpb24gUWYoYSxiLGMsZCxlKXtIZj0hMTtpZighKDA9PT1iLmV4cGlyYXRpb25UaW1lfHxiLmV4cGlyYXRpb25UaW1lPmUpKXtiPU9mKGEsYik7Zm9yKHZhciBmPWIuYmFzZVN0YXRlLGc9bnVsbCxoPTAsaz1iLmZpcnN0VXBkYXRlLG49ZjtudWxsIT09azspe3ZhciByPWsuZXhwaXJhdGlvblRpbWU7aWYocj5lKXtpZihudWxsPT09ZyYmKGc9ayxmPW4pLDA9PT1ofHxoPnIpaD1yfWVsc2Ugbj1QZihhLGIsayxuLGMsZCksbnVsbCE9PWsuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9MzIsay5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdEVmZmVjdD9iLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1rOihiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdEVmZmVjdD1rKSk7az1rLm5leHR9cj1udWxsO2ZvcihrPWIuZmlyc3RDYXB0dXJlZFVwZGF0ZTtudWxsIT09azspe3ZhciB3PWsuZXhwaXJhdGlvblRpbWU7aWYodz5lKXtpZihudWxsPT09ciYmKHI9ayxudWxsPT09XG5nJiYoZj1uKSksMD09PWh8fGg+dyloPXd9ZWxzZSBuPVBmKGEsYixrLG4sYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q/Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PWs6KGIubGFzdENhcHR1cmVkRWZmZWN0Lm5leHRFZmZlY3Q9ayxiLmxhc3RDYXB0dXJlZEVmZmVjdD1rKSk7az1rLm5leHR9bnVsbD09PWcmJihiLmxhc3RVcGRhdGU9bnVsbCk7bnVsbD09PXI/Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbDphLmVmZmVjdFRhZ3w9MzI7bnVsbD09PWcmJm51bGw9PT1yJiYoZj1uKTtiLmJhc2VTdGF0ZT1mO2IuZmlyc3RVcGRhdGU9ZztiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9cjtiLmV4cGlyYXRpb25UaW1lPWg7YS5tZW1vaXplZFN0YXRlPW59fVxuZnVuY3Rpb24gUmYoYSxiKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYT9BKFwiMTkxXCIsYSk6dm9pZCAwO2EuY2FsbChiKX1cbmZ1bmN0aW9uIFNmKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTthPWIuZmlyc3RFZmZlY3Q7Zm9yKGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7bnVsbCE9PWE7KXt2YXIgZD1hLmNhbGxiYWNrO251bGwhPT1kJiYoYS5jYWxsYmFjaz1udWxsLFJmKGQsYykpO2E9YS5uZXh0RWZmZWN0fWE9Yi5maXJzdENhcHR1cmVkRWZmZWN0O2ZvcihiLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bnVsbDtudWxsIT09YTspYj1hLmNhbGxiYWNrLG51bGwhPT1iJiYoYS5jYWxsYmFjaz1udWxsLFJmKGIsYykpLGE9YS5uZXh0RWZmZWN0fVxuZnVuY3Rpb24gVGYoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazp2YyhiKX19dmFyIFVmPWhmKG51bGwpLFZmPWhmKG51bGwpLFdmPWhmKDApO2Z1bmN0aW9uIFhmKGEpe3ZhciBiPWEudHlwZS5fY29udGV4dDtOKFdmLGIuX2NoYW5nZWRCaXRzLGEpO04oVmYsYi5fY3VycmVudFZhbHVlLGEpO04oVWYsYSxhKTtiLl9jdXJyZW50VmFsdWU9YS5wZW5kaW5nUHJvcHMudmFsdWU7Yi5fY2hhbmdlZEJpdHM9YS5zdGF0ZU5vZGV9ZnVuY3Rpb24gWWYoYSl7dmFyIGI9V2YuY3VycmVudCxjPVZmLmN1cnJlbnQ7TShVZixhKTtNKFZmLGEpO00oV2YsYSk7YT1hLnR5cGUuX2NvbnRleHQ7YS5fY3VycmVudFZhbHVlPWM7YS5fY2hhbmdlZEJpdHM9Yn12YXIgWmY9e30sJGY9aGYoWmYpLGFnPWhmKFpmKSxiZz1oZihaZik7ZnVuY3Rpb24gY2coYSl7YT09PVpmP0EoXCIxNzRcIik6dm9pZCAwO3JldHVybiBhfVxuZnVuY3Rpb24gZGcoYSxiKXtOKGJnLGIsYSk7TihhZyxhLGEpO04oJGYsWmYsYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6RGUobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPURlKGIsYyl9TSgkZixhKTtOKCRmLGIsYSl9ZnVuY3Rpb24gZWcoYSl7TSgkZixhKTtNKGFnLGEpO00oYmcsYSl9ZnVuY3Rpb24gZmcoYSl7YWcuY3VycmVudD09PWEmJihNKCRmLGEpLE0oYWcsYSkpfWZ1bmN0aW9uIGhnKGEsYixjKXt2YXIgZD1hLm1lbW9pemVkU3RhdGU7Yj1iKGMsZCk7ZD1udWxsPT09Ynx8dm9pZCAwPT09Yj9kOnAoe30sZCxiKTthLm1lbW9pemVkU3RhdGU9ZDthPWEudXBkYXRlUXVldWU7bnVsbCE9PWEmJjA9PT1hLmV4cGlyYXRpb25UaW1lJiYoYS5iYXNlU3RhdGU9ZCl9XG52YXIgbGc9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpPzI9PT1pZChhKTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1pZygpO2Q9amcoZCxhKTt2YXIgZT1LZihkKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7TWYoYSxlLGQpO2tnKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWlnKCk7ZD1qZyhkLGEpO3ZhciBlPUtmKGQpO2UudGFnPTE7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO01mKGEsZSxkKTtrZyhhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1pZygpO2M9amcoYyxhKTt2YXIgZD1LZihjKTtkLnRhZz0yO3ZvaWQgMCE9PVxuYiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO01mKGEsZCxjKTtrZyhhLGMpfX07ZnVuY3Rpb24gbWcoYSxiLGMsZCxlLGYpe3ZhciBnPWEuc3RhdGVOb2RlO2E9YS50eXBlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLnNob3VsZENvbXBvbmVudFVwZGF0ZT9nLnNob3VsZENvbXBvbmVudFVwZGF0ZShjLGUsZik6YS5wcm90b3R5cGUmJmEucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFlYShiLGMpfHwhZWEoZCxlKTohMH1cbmZ1bmN0aW9uIG5nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZsZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIG9nKGEsYil7dmFyIGM9YS50eXBlLGQ9YS5zdGF0ZU5vZGUsZT1hLnBlbmRpbmdQcm9wcyxmPWxmKGEpO2QucHJvcHM9ZTtkLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtkLnJlZnM9aGE7ZC5jb250ZXh0PW5mKGEsZik7Zj1hLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoUWYoYSxmLGUsZCxiKSxkLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7Zj1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoaGcoYSxmLGUpLGQuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnRXaWxsTW91bnR8fChjPWQuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50V2lsbE1vdW50JiZcbmQuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZC5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYyE9PWQuc3RhdGUmJmxnLmVucXVldWVSZXBsYWNlU3RhdGUoZCxkLnN0YXRlLG51bGwpLGY9YS51cGRhdGVRdWV1ZSxudWxsIT09ZiYmKFFmKGEsZixlLGQsYiksZC5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgcGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIHFnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjt2YXIgZD12b2lkIDA7YyYmKDIhPT1jLnRhZz9BKFwiMTEwXCIpOnZvaWQgMCxkPWMuc3RhdGVOb2RlKTtkP3ZvaWQgMDpBKFwiMTQ3XCIsYSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzPT09aGE/ZC5yZWZzPXt9OmQucmVmcztudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifVwic3RyaW5nXCIhPT10eXBlb2YgYT9BKFwiMTQ4XCIpOnZvaWQgMDtjLl9vd25lcj92b2lkIDA6QShcIjI1NFwiLGEpfXJldHVybiBhfVxuZnVuY3Rpb24gcmcoYSxiKXtcInRleHRhcmVhXCIhPT1hLnR5cGUmJkEoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKX1cbmZ1bmN0aW9uIHNnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9dmYoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj15ZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIudHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyxkKSxkLnJlZj1xZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9d2YoYyxhLm1vZGUsZCk7ZC5yZWY9cWcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbihhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9XG56ZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10sZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiByKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDEwIT09Yi50YWcpcmV0dXJuIGI9eGYoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHcoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPXlmKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIGZjOnJldHVybiBjPXdmKGIsYS5tb2RlLGMpLGMucmVmPXFnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSBnYzpyZXR1cm4gYj16ZihiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYocGcoYil8fHNjKGIpKXJldHVybiBiPXhmKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49XG5hLGI7cmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBQKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIGZjOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09aGM/cihhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIGdjOnJldHVybiBjLmtleT09PWU/bihhLGIsYyxkKTpudWxsfWlmKHBnKGMpfHxzYyhjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDpyKGEsYixjLGQsbnVsbCk7cmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBrYyhhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtcbmlmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIGZjOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1oYz9yKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSBnYzpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbihiLGEsZCxlKX1pZihwZyhkKXx8c2MoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwscihiLGEsZCxlLG51bGwpO3JnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSGQoZSxnLGgsayl7Zm9yKHZhciB1PW51bGwseD1udWxsLHQ9ZyxxPWc9MCxuPW51bGw7bnVsbCE9PXQmJnE8aC5sZW5ndGg7cSsrKXt0LmluZGV4PnE/KG49dCx0PW51bGwpOm49dC5zaWJsaW5nO3ZhciBsPVAoZSx0LGhbcV0sayk7aWYobnVsbD09PWwpe251bGw9PT10JiYodD1uKTticmVha31hJiZ0JiZudWxsPT09bC5hbHRlcm5hdGUmJmIoZSxcbnQpO2c9ZihsLGcscSk7bnVsbD09PXg/dT1sOnguc2libGluZz1sO3g9bDt0PW59aWYocT09PWgubGVuZ3RoKXJldHVybiBjKGUsdCksdTtpZihudWxsPT09dCl7Zm9yKDtxPGgubGVuZ3RoO3ErKylpZih0PXcoZSxoW3FdLGspKWc9Zih0LGcscSksbnVsbD09PXg/dT10Onguc2libGluZz10LHg9dDtyZXR1cm4gdX1mb3IodD1kKGUsdCk7cTxoLmxlbmd0aDtxKyspaWYobj1rYyh0LGUscSxoW3FdLGspKWEmJm51bGwhPT1uLmFsdGVybmF0ZSYmdC5kZWxldGUobnVsbD09PW4ua2V5P3E6bi5rZXkpLGc9ZihuLGcscSksbnVsbD09PXg/dT1uOnguc2libGluZz1uLHg9bjthJiZ0LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiB1fWZ1bmN0aW9uIEUoZSxnLGgsayl7dmFyIHQ9c2MoaCk7XCJmdW5jdGlvblwiIT09dHlwZW9mIHQ/QShcIjE1MFwiKTp2b2lkIDA7aD10LmNhbGwoaCk7bnVsbD09aD9BKFwiMTUxXCIpOnZvaWQgMDtmb3IodmFyIHU9dD1udWxsLG49Zyx4PVxuZz0wLHk9bnVsbCxsPWgubmV4dCgpO251bGwhPT1uJiYhbC5kb25lO3grKyxsPWgubmV4dCgpKXtuLmluZGV4Png/KHk9bixuPW51bGwpOnk9bi5zaWJsaW5nO3ZhciByPVAoZSxuLGwudmFsdWUsayk7aWYobnVsbD09PXIpe258fChuPXkpO2JyZWFrfWEmJm4mJm51bGw9PT1yLmFsdGVybmF0ZSYmYihlLG4pO2c9ZihyLGcseCk7bnVsbD09PXU/dD1yOnUuc2libGluZz1yO3U9cjtuPXl9aWYobC5kb25lKXJldHVybiBjKGUsbiksdDtpZihudWxsPT09bil7Zm9yKDshbC5kb25lO3grKyxsPWgubmV4dCgpKWw9dyhlLGwudmFsdWUsayksbnVsbCE9PWwmJihnPWYobCxnLHgpLG51bGw9PT11P3Q9bDp1LnNpYmxpbmc9bCx1PWwpO3JldHVybiB0fWZvcihuPWQoZSxuKTshbC5kb25lO3grKyxsPWgubmV4dCgpKWw9a2MobixlLHgsbC52YWx1ZSxrKSxudWxsIT09bCYmKGEmJm51bGwhPT1sLmFsdGVybmF0ZSYmbi5kZWxldGUobnVsbD09PWwua2V5P3g6bC5rZXkpLGc9ZihsLGcseCksbnVsbD09PVxudT90PWw6dS5zaWJsaW5nPWwsdT1sKTthJiZuLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiB0fXJldHVybiBmdW5jdGlvbihhLGQsZixoKXtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1oYyYmbnVsbD09PWYua2V5JiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGspc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgZmM6YTp7dmFyIG49Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bilpZigxMD09PWsudGFnP2YudHlwZT09PWhjOmsudHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi50eXBlPT09aGM/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPXFnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PWhjPyhkPXhmKGYucHJvcHMuY2hpbGRyZW4sXG5hLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPXdmKGYsYS5tb2RlLGgpLGgucmVmPXFnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSBnYzphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPXpmKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpLGQucmV0dXJuPVxuYSxhPWQpOihjKGEsZCksZD15ZihmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihwZyhmKSlyZXR1cm4gSGQoYSxkLGYsaCk7aWYoc2MoZikpcmV0dXJuIEUoYSxkLGYsaCk7ayYmcmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYpc3dpdGNoKGEudGFnKXtjYXNlIDI6Y2FzZSAxOmg9YS50eXBlLEEoXCIxNTJcIixoLmRpc3BsYXlOYW1lfHxoLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBjKGEsZCl9fXZhciB0Zz1zZyghMCksdWc9c2coITEpLHZnPW51bGwsd2c9bnVsbCx4Zz0hMTtmdW5jdGlvbiB5ZyhhLGIpe3ZhciBjPW5ldyB1Zig1LG51bGwsbnVsbCwwKTtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31cbmZ1bmN0aW9uIHpnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIEFnKGEpe2lmKHhnKXt2YXIgYj13ZztpZihiKXt2YXIgYz1iO2lmKCF6ZyhhLGIpKXtiPWRmKGMpO2lmKCFifHwhemcoYSxiKSl7YS5lZmZlY3RUYWd8PTI7eGc9ITE7dmc9YTtyZXR1cm59eWcodmcsYyl9dmc9YTt3Zz1lZihiKX1lbHNlIGEuZWZmZWN0VGFnfD0yLHhnPSExLHZnPWF9fVxuZnVuY3Rpb24gQmcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnOylhPWEucmV0dXJuO3ZnPWF9ZnVuY3Rpb24gQ2coYSl7aWYoYSE9PXZnKXJldHVybiExO2lmKCF4ZylyZXR1cm4gQmcoYSkseGc9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiEkZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9d2c7YjspeWcoYSxiKSxiPWRmKGIpO0JnKGEpO3dnPXZnP2RmKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIERnKCl7d2c9dmc9bnVsbDt4Zz0hMX1mdW5jdGlvbiBRKGEsYixjKXtFZyhhLGIsYyxiLmV4cGlyYXRpb25UaW1lKX1mdW5jdGlvbiBFZyhhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP3VnKGIsbnVsbCxjLGQpOnRnKGIsYS5jaGlsZCxjLGQpfVxuZnVuY3Rpb24gRmcoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBHZyhhLGIsYyxkLGUpe0ZnKGEsYik7dmFyIGY9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWMmJiFmKXJldHVybiBkJiZ0ZihiLCExKSxSKGEsYik7Yz1iLnN0YXRlTm9kZTtlYy5jdXJyZW50PWI7dmFyIGc9Zj9udWxsOmMucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7ZiYmKEVnKGEsYixudWxsLGUpLGIuY2hpbGQ9bnVsbCk7RWcoYSxiLGcsZSk7Yi5tZW1vaXplZFN0YXRlPWMuc3RhdGU7Yi5tZW1vaXplZFByb3BzPWMucHJvcHM7ZCYmdGYoYiwhMCk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBIZyhhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P3FmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJnFmKGEsYi5jb250ZXh0LCExKTtkZyhhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiBJZyhhLGIsYyxkKXt2YXIgZT1hLmNoaWxkO251bGwhPT1lJiYoZS5yZXR1cm49YSk7Zm9yKDtudWxsIT09ZTspe3N3aXRjaChlLnRhZyl7Y2FzZSAxMjp2YXIgZj1lLnN0YXRlTm9kZXwwO2lmKGUudHlwZT09PWImJjAhPT0oZiZjKSl7Zm9yKGY9ZTtudWxsIT09Zjspe3ZhciBnPWYuYWx0ZXJuYXRlO2lmKDA9PT1mLmV4cGlyYXRpb25UaW1lfHxmLmV4cGlyYXRpb25UaW1lPmQpZi5leHBpcmF0aW9uVGltZT1kLG51bGwhPT1nJiYoMD09PWcuZXhwaXJhdGlvblRpbWV8fGcuZXhwaXJhdGlvblRpbWU+ZCkmJihnLmV4cGlyYXRpb25UaW1lPWQpO2Vsc2UgaWYobnVsbCE9PWcmJigwPT09Zy5leHBpcmF0aW9uVGltZXx8Zy5leHBpcmF0aW9uVGltZT5kKSlnLmV4cGlyYXRpb25UaW1lPWQ7ZWxzZSBicmVhaztmPWYucmV0dXJufWY9bnVsbH1lbHNlIGY9ZS5jaGlsZDticmVhaztjYXNlIDEzOmY9ZS50eXBlPT09YS50eXBlP251bGw6ZS5jaGlsZDticmVhaztkZWZhdWx0OmY9XG5lLmNoaWxkfWlmKG51bGwhPT1mKWYucmV0dXJuPWU7ZWxzZSBmb3IoZj1lO251bGwhPT1mOyl7aWYoZj09PWEpe2Y9bnVsbDticmVha31lPWYuc2libGluZztpZihudWxsIT09ZSl7ZS5yZXR1cm49Zi5yZXR1cm47Zj1lO2JyZWFrfWY9Zi5yZXR1cm59ZT1mfX1cbmZ1bmN0aW9uIEpnKGEsYixjKXt2YXIgZD1iLnR5cGUuX2NvbnRleHQsZT1iLnBlbmRpbmdQcm9wcyxmPWIubWVtb2l6ZWRQcm9wcyxnPSEwO2lmKE8uY3VycmVudClnPSExO2Vsc2UgaWYoZj09PWUpcmV0dXJuIGIuc3RhdGVOb2RlPTAsWGYoYiksUihhLGIpO3ZhciBoPWUudmFsdWU7Yi5tZW1vaXplZFByb3BzPWU7aWYobnVsbD09PWYpaD0xMDczNzQxODIzO2Vsc2UgaWYoZi52YWx1ZT09PWUudmFsdWUpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiZnKXJldHVybiBiLnN0YXRlTm9kZT0wLFhmKGIpLFIoYSxiKTtoPTB9ZWxzZXt2YXIgaz1mLnZhbHVlO2lmKGs9PT1oJiYoMCE9PWt8fDEvaz09PTEvaCl8fGshPT1rJiZoIT09aCl7aWYoZi5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJmcpcmV0dXJuIGIuc3RhdGVOb2RlPTAsWGYoYiksUihhLGIpO2g9MH1lbHNlIGlmKGg9XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGssXG5oKToxMDczNzQxODIzLGh8PTAsMD09PWgpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiZnKXJldHVybiBiLnN0YXRlTm9kZT0wLFhmKGIpLFIoYSxiKX1lbHNlIElnKGIsZCxoLGMpfWIuc3RhdGVOb2RlPWg7WGYoYik7UShhLGIsZS5jaGlsZHJlbik7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gUihhLGIpe251bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZD9BKFwiMTUzXCIpOnZvaWQgMDtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO3ZhciBjPXZmKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPXZmKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIEtnKGEsYixjKXtpZigwPT09Yi5leHBpcmF0aW9uVGltZXx8Yi5leHBpcmF0aW9uVGltZT5jKXtzd2l0Y2goYi50YWcpe2Nhc2UgMzpIZyhiKTticmVhaztjYXNlIDI6c2YoYik7YnJlYWs7Y2FzZSA0OmRnKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMzpYZihiKX1yZXR1cm4gbnVsbH1zd2l0Y2goYi50YWcpe2Nhc2UgMDpudWxsIT09YT9BKFwiMTU1XCIpOnZvaWQgMDt2YXIgZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPWxmKGIpO2Y9bmYoYixmKTtkPWQoZSxmKTtiLmVmZmVjdFRhZ3w9MTtcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5yZW5kZXImJnZvaWQgMD09PWQuJCR0eXBlb2Y/KGY9Yi50eXBlLGIudGFnPTIsYi5tZW1vaXplZFN0YXRlPW51bGwhPT1kLnN0YXRlJiZ2b2lkIDAhPT1kLnN0YXRlP2Quc3RhdGU6bnVsbCxmPWYuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGYmJmhnKGIsZixlKSxlPXNmKGIpLGQudXBkYXRlcj1sZyxiLnN0YXRlTm9kZT1kLGQuX3JlYWN0SW50ZXJuYWxGaWJlcj1iLG9nKGIsYyksYT1HZyhhLGIsITAsZSxjKSk6KGIudGFnPTEsUShhLGIsZCksYi5tZW1vaXplZFByb3BzPWUsYT1iLmNoaWxkKTtyZXR1cm4gYTtjYXNlIDE6cmV0dXJuIGU9Yi50eXBlLGM9Yi5wZW5kaW5nUHJvcHMsTy5jdXJyZW50fHxiLm1lbW9pemVkUHJvcHMhPT1jPyhkPWxmKGIpLGQ9bmYoYixkKSxlPWUoYyxkKSxiLmVmZmVjdFRhZ3w9MSxRKGEsYixlKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpOmE9UihhLGIpLGE7Y2FzZSAyOmU9c2YoYik7aWYobnVsbD09PWEpaWYobnVsbD09PWIuc3RhdGVOb2RlKXt2YXIgZz1iLnBlbmRpbmdQcm9wcyxoPWIudHlwZTtkPWxmKGIpO3ZhciBrPTI9PT1iLnRhZyYmbnVsbCE9Yi50eXBlLmNvbnRleHRUeXBlcztmPWs/bmYoYixkKTpoYTtnPW5ldyBoKGcsZik7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1cbmcuc3RhdGUmJnZvaWQgMCE9PWcuc3RhdGU/Zy5zdGF0ZTpudWxsO2cudXBkYXRlcj1sZztiLnN0YXRlTm9kZT1nO2cuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO2smJihrPWIuc3RhdGVOb2RlLGsuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1kLGsuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7b2coYixjKTtkPSEwfWVsc2V7aD1iLnR5cGU7ZD1iLnN0YXRlTm9kZTtrPWIubWVtb2l6ZWRQcm9wcztmPWIucGVuZGluZ1Byb3BzO2QucHJvcHM9azt2YXIgbj1kLmNvbnRleHQ7Zz1sZihiKTtnPW5mKGIsZyk7dmFyIHI9aC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7KGg9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJ8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGQuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fFxuKGshPT1mfHxuIT09ZykmJm5nKGIsZCxmLGcpO0hmPSExO3ZhciB3PWIubWVtb2l6ZWRTdGF0ZTtuPWQuc3RhdGU9dzt2YXIgUD1iLnVwZGF0ZVF1ZXVlO251bGwhPT1QJiYoUWYoYixQLGYsZCxjKSxuPWIubWVtb2l6ZWRTdGF0ZSk7ayE9PWZ8fHchPT1ufHxPLmN1cnJlbnR8fEhmPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgciYmKGhnKGIscixmKSxuPWIubWVtb2l6ZWRTdGF0ZSksKGs9SGZ8fG1nKGIsayxmLHcsbixnKSk/KGh8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxNb3VudCYmZC5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZkLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkTW91bnQmJlxuKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1mLGIubWVtb2l6ZWRTdGF0ZT1uKSxkLnByb3BzPWYsZC5zdGF0ZT1uLGQuY29udGV4dD1nLGQ9ayk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgaD1iLnR5cGUsZD1iLnN0YXRlTm9kZSxmPWIubWVtb2l6ZWRQcm9wcyxrPWIucGVuZGluZ1Byb3BzLGQucHJvcHM9ZixuPWQuY29udGV4dCxnPWxmKGIpLGc9bmYoYixnKSxyPWguZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHxcbihmIT09a3x8biE9PWcpJiZuZyhiLGQsayxnKSxIZj0hMSxuPWIubWVtb2l6ZWRTdGF0ZSx3PWQuc3RhdGU9bixQPWIudXBkYXRlUXVldWUsbnVsbCE9PVAmJihRZihiLFAsayxkLGMpLHc9Yi5tZW1vaXplZFN0YXRlKSxmIT09a3x8biE9PXd8fE8uY3VycmVudHx8SGY/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiByJiYoaGcoYixyLGspLHc9Yi5tZW1vaXplZFN0YXRlKSwocj1IZnx8bWcoYixmLGssbix3LGcpKT8oaHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGQuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsVXBkYXRlJiZkLmNvbXBvbmVudFdpbGxVcGRhdGUoayx3LGcpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZkLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGssdyxnKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkVXBkYXRlJiZcbihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmNvbXBvbmVudERpZFVwZGF0ZXx8Zj09PWEubWVtb2l6ZWRQcm9wcyYmbj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8Zj09PWEubWVtb2l6ZWRQcm9wcyYmbj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1rLGIubWVtb2l6ZWRTdGF0ZT13KSxkLnByb3BzPWssZC5zdGF0ZT13LGQuY29udGV4dD1nLGQ9cik6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmNvbXBvbmVudERpZFVwZGF0ZXx8Zj09PWEubWVtb2l6ZWRQcm9wcyYmbj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XG5mPT09YS5tZW1vaXplZFByb3BzJiZuPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIEdnKGEsYixkLGUsYyk7Y2FzZSAzOkhnKGIpO2U9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09ZSlpZihkPWIubWVtb2l6ZWRTdGF0ZSxkPW51bGwhPT1kP2QuZWxlbWVudDpudWxsLFFmKGIsZSxiLnBlbmRpbmdQcm9wcyxudWxsLGMpLGU9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQsZT09PWQpRGcoKSxhPVIoYSxiKTtlbHNle2Q9Yi5zdGF0ZU5vZGU7aWYoZD0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZC5oeWRyYXRlKXdnPWVmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLHZnPWIsZD14Zz0hMDtkPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPXVnKGIsbnVsbCxlLGMpKTooRGcoKSxRKGEsYixlKSk7YT1iLmNoaWxkfWVsc2UgRGcoKSxhPVIoYSxiKTtyZXR1cm4gYTtjYXNlIDU6YTp7Y2coYmcuY3VycmVudCk7ZT1jZygkZi5jdXJyZW50KTtkPURlKGUsXG5iLnR5cGUpO2UhPT1kJiYoTihhZyxiLGIpLE4oJGYsZCxiKSk7bnVsbD09PWEmJkFnKGIpO2U9Yi50eXBlO2s9Yi5tZW1vaXplZFByb3BzO2Q9Yi5wZW5kaW5nUHJvcHM7Zj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbDtpZighTy5jdXJyZW50JiZrPT09ZCl7aWYoaz1iLm1vZGUmMSYmISFkLmhpZGRlbiliLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7aWYoIWt8fDEwNzM3NDE4MjMhPT1jKXthPVIoYSxiKTticmVhayBhfX1rPWQuY2hpbGRyZW47JGUoZSxkKT9rPW51bGw6ZiYmJGUoZSxmKSYmKGIuZWZmZWN0VGFnfD0xNik7RmcoYSxiKTsxMDczNzQxODIzIT09YyYmYi5tb2RlJjEmJmQuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjMsYi5tZW1vaXplZFByb3BzPWQsYT1udWxsKTooUShhLGIsayksYi5tZW1vaXplZFByb3BzPWQsYT1iLmNoaWxkKX1yZXR1cm4gYTtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZBZyhiKSxiLm1lbW9pemVkUHJvcHM9Yi5wZW5kaW5nUHJvcHMsXG5udWxsO2Nhc2UgMTY6cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBkZyhiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGU9Yi5wZW5kaW5nUHJvcHMsTy5jdXJyZW50fHxiLm1lbW9pemVkUHJvcHMhPT1lPyhudWxsPT09YT9iLmNoaWxkPXRnKGIsbnVsbCxlLGMpOlEoYSxiLGUpLGIubWVtb2l6ZWRQcm9wcz1lLGE9Yi5jaGlsZCk6YT1SKGEsYiksYTtjYXNlIDE0OnJldHVybiBlPWIudHlwZS5yZW5kZXIsYz1iLnBlbmRpbmdQcm9wcyxkPWIucmVmLE8uY3VycmVudHx8Yi5tZW1vaXplZFByb3BzIT09Y3x8ZCE9PShudWxsIT09YT9hLnJlZjpudWxsKT8oZT1lKGMsZCksUShhLGIsZSksYi5tZW1vaXplZFByb3BzPWMsYT1iLmNoaWxkKTphPVIoYSxiKSxhO2Nhc2UgMTA6cmV0dXJuIGM9Yi5wZW5kaW5nUHJvcHMsTy5jdXJyZW50fHxiLm1lbW9pemVkUHJvcHMhPT1jPyhRKGEsYixjKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpOmE9UihhLGIpLGE7Y2FzZSAxMTpyZXR1cm4gYz1cbmIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLE8uY3VycmVudHx8bnVsbCE9PWMmJmIubWVtb2l6ZWRQcm9wcyE9PWM/KFEoYSxiLGMpLGIubWVtb2l6ZWRQcm9wcz1jLGE9Yi5jaGlsZCk6YT1SKGEsYiksYTtjYXNlIDE1OnJldHVybiBjPWIucGVuZGluZ1Byb3BzLGIubWVtb2l6ZWRQcm9wcz09PWM/YT1SKGEsYik6KFEoYSxiLGMuY2hpbGRyZW4pLGIubWVtb2l6ZWRQcm9wcz1jLGE9Yi5jaGlsZCksYTtjYXNlIDEzOnJldHVybiBKZyhhLGIsYyk7Y2FzZSAxMjphOmlmKGQ9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsaz1iLm1lbW9pemVkUHJvcHMsZT1kLl9jdXJyZW50VmFsdWUsZz1kLl9jaGFuZ2VkQml0cyxPLmN1cnJlbnR8fDAhPT1nfHxrIT09Zil7Yi5tZW1vaXplZFByb3BzPWY7aD1mLnVuc3RhYmxlX29ic2VydmVkQml0cztpZih2b2lkIDA9PT1ofHxudWxsPT09aCloPTEwNzM3NDE4MjM7Yi5zdGF0ZU5vZGU9aDtpZigwIT09KGcmaCkpSWcoYixkLGcsYyk7ZWxzZSBpZihrPT09Zil7YT1cblIoYSxiKTticmVhayBhfWM9Zi5jaGlsZHJlbjtjPWMoZSk7Yi5lZmZlY3RUYWd8PTE7UShhLGIsYyk7YT1iLmNoaWxkfWVsc2UgYT1SKGEsYik7cmV0dXJuIGE7ZGVmYXVsdDpBKFwiMTU2XCIpfX1mdW5jdGlvbiBMZyhhKXthLmVmZmVjdFRhZ3w9NH12YXIgUGc9dm9pZCAwLFFnPXZvaWQgMCxSZz12b2lkIDA7UGc9ZnVuY3Rpb24oKXt9O1FnPWZ1bmN0aW9uKGEsYixjKXsoYi51cGRhdGVRdWV1ZT1jKSYmTGcoYil9O1JnPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZMZyhiKX07XG5mdW5jdGlvbiBTZyhhLGIpe3ZhciBjPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnJldHVybiBudWxsO2Nhc2UgMjpyZXR1cm4gb2YoYiksbnVsbDtjYXNlIDM6ZWcoYik7cGYoYik7dmFyIGQ9Yi5zdGF0ZU5vZGU7ZC5wZW5kaW5nQ29udGV4dCYmKGQuY29udGV4dD1kLnBlbmRpbmdDb250ZXh0LGQucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKUNnKGIpLGIuZWZmZWN0VGFnJj0tMztQZyhiKTtyZXR1cm4gbnVsbDtjYXNlIDU6ZmcoYik7ZD1jZyhiZy5jdXJyZW50KTt2YXIgZT1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHMsZz1iLnN0YXRlTm9kZSxoPWNnKCRmLmN1cnJlbnQpO2c9U2UoZyxlLGYsYyxkKTtRZyhhLGIsZyxlLGYsYyxkLGgpO2EucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNle2lmKCFjKXJldHVybiBudWxsPT09Yi5zdGF0ZU5vZGU/XG5BKFwiMTY2XCIpOnZvaWQgMCxudWxsO2E9Y2coJGYuY3VycmVudCk7aWYoQ2coYikpYz1iLnN0YXRlTm9kZSxlPWIudHlwZSxmPWIubWVtb2l6ZWRQcm9wcyxjW0NdPWIsY1tNYV09ZixkPVVlKGMsZSxmLGEsZCksYi51cGRhdGVRdWV1ZT1kLG51bGwhPT1kJiZMZyhiKTtlbHNle2E9UGUoZSxjLGQsYSk7YVtDXT1iO2FbTWFdPWM7YTpmb3IoZj1iLmNoaWxkO251bGwhPT1mOyl7aWYoNT09PWYudGFnfHw2PT09Zi50YWcpYS5hcHBlbmRDaGlsZChmLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Zi50YWcmJm51bGwhPT1mLmNoaWxkKXtmLmNoaWxkLnJldHVybj1mO2Y9Zi5jaGlsZDtjb250aW51ZX1pZihmPT09YilicmVhaztmb3IoO251bGw9PT1mLnNpYmxpbmc7KXtpZihudWxsPT09Zi5yZXR1cm58fGYucmV0dXJuPT09YilicmVhayBhO2Y9Zi5yZXR1cm59Zi5zaWJsaW5nLnJldHVybj1mLnJldHVybjtmPWYuc2libGluZ31SZShhLGUsYyxkKTtaZShlLGMpJiZMZyhiKTtiLnN0YXRlTm9kZT1cbmF9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKVJnKGEsYixhLm1lbW9pemVkUHJvcHMsYyk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGMpcmV0dXJuIG51bGw9PT1iLnN0YXRlTm9kZT9BKFwiMTY2XCIpOnZvaWQgMCxudWxsO2Q9Y2coYmcuY3VycmVudCk7Y2coJGYuY3VycmVudCk7Q2coYik/KGQ9Yi5zdGF0ZU5vZGUsYz1iLm1lbW9pemVkUHJvcHMsZFtDXT1iLFZlKGQsYykmJkxnKGIpKTooZD1RZShjLGQpLGRbQ109YixiLnN0YXRlTm9kZT1kKX1yZXR1cm4gbnVsbDtjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTY6cmV0dXJuIG51bGw7Y2FzZSAxMDpyZXR1cm4gbnVsbDtjYXNlIDExOnJldHVybiBudWxsO2Nhc2UgMTU6cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBlZyhiKSxQZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIFlmKGIpLG51bGw7Y2FzZSAxMjpyZXR1cm4gbnVsbDtjYXNlIDA6QShcIjE2N1wiKTtcbmRlZmF1bHQ6QShcIjE1NlwiKX19ZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1iLnNvdXJjZTtudWxsPT09Yi5zdGFjayYmbnVsbCE9PWMmJnZjKGMpO251bGwhPT1jJiZ0YyhjKTtiPWIudmFsdWU7bnVsbCE9PWEmJjI9PT1hLnRhZyYmdGMoYSk7dHJ5e2ImJmIuc3VwcHJlc3NSZWFjdEVycm9yTG9nZ2luZ3x8Y29uc29sZS5lcnJvcihiKX1jYXRjaChkKXtkJiZkLnN1cHByZXNzUmVhY3RFcnJvckxvZ2dpbmd8fGNvbnNvbGUuZXJyb3IoZCl9fWZ1bmN0aW9uIFVnKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe1ZnKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFdnKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBHZiYmR2YoYSk7c3dpdGNoKGEudGFnKXtjYXNlIDI6VWcoYSk7dmFyIGI9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChjKXtWZyhhLGMpfWJyZWFrO2Nhc2UgNTpVZyhhKTticmVhaztjYXNlIDQ6WGcoYSl9fWZ1bmN0aW9uIFlnKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gWmcoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoWWcoYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufUEoXCIxNjBcIik7Yz12b2lkIDB9dmFyIGQ9Yj12b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6Yj1jLnN0YXRlTm9kZTtkPSExO2JyZWFrO2Nhc2UgMzpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDpBKFwiMTYxXCIpfWMuZWZmZWN0VGFnJjE2JiYoR2UoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFlnKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJjIpY29udGludWUgYjtcbmlmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19Zm9yKHZhciBlPWE7Oyl7aWYoNT09PWUudGFnfHw2PT09ZS50YWcpaWYoYylpZihkKXt2YXIgZj1iLGc9ZS5zdGF0ZU5vZGUsaD1jOzg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZyxoKTpmLmluc2VydEJlZm9yZShnLGgpfWVsc2UgYi5pbnNlcnRCZWZvcmUoZS5zdGF0ZU5vZGUsYyk7ZWxzZSBkPyhmPWIsZz1lLnN0YXRlTm9kZSw4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsZik6Zi5hcHBlbmRDaGlsZChnKSk6Yi5hcHBlbmRDaGlsZChlLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09ZS50YWcmJm51bGwhPT1lLmNoaWxkKXtlLmNoaWxkLnJldHVybj1lO2U9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09YSlicmVhaztmb3IoO251bGw9PT1cbmUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1hKXJldHVybjtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm47ZT1lLnNpYmxpbmd9fVxuZnVuY3Rpb24gWGcoYSl7Zm9yKHZhciBiPWEsYz0hMSxkPXZvaWQgMCxlPXZvaWQgMDs7KXtpZighYyl7Yz1iLnJldHVybjthOmZvcig7Oyl7bnVsbD09PWM/QShcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6ZD1jLnN0YXRlTm9kZTtlPSExO2JyZWFrIGE7Y2FzZSAzOmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGE7Y2FzZSA0OmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGF9Yz1jLnJldHVybn1jPSEwfWlmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXthOmZvcih2YXIgZj1iLGc9Zjs7KWlmKFdnKGcpLG51bGwhPT1nLmNoaWxkJiY0IT09Zy50YWcpZy5jaGlsZC5yZXR1cm49ZyxnPWcuY2hpbGQ7ZWxzZXtpZihnPT09ZilicmVhaztmb3IoO251bGw9PT1nLnNpYmxpbmc7KXtpZihudWxsPT09Zy5yZXR1cm58fGcucmV0dXJuPT09ZilicmVhayBhO2c9Zy5yZXR1cm59Zy5zaWJsaW5nLnJldHVybj1nLnJldHVybjtnPWcuc2libGluZ31lP1xuKGY9ZCxnPWIuc3RhdGVOb2RlLDg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChnKTpmLnJlbW92ZUNoaWxkKGcpKTpkLnJlbW92ZUNoaWxkKGIuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1iLnRhZz9kPWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86V2coYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxuZnVuY3Rpb24gJGcoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMjpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzO2E9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7dmFyIGU9Yi50eXBlLGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7bnVsbCE9PWYmJihjW01hXT1kLFRlKGMsZixlLGEsZCkpfWJyZWFrO2Nhc2UgNjpudWxsPT09Yi5zdGF0ZU5vZGU/QShcIjE2MlwiKTp2b2lkIDA7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wczticmVhaztjYXNlIDM6YnJlYWs7Y2FzZSAxNTpicmVhaztjYXNlIDE2OmJyZWFrO2RlZmF1bHQ6QShcIjE2M1wiKX19ZnVuY3Rpb24gYWgoYSxiLGMpe2M9S2YoYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7YmgoZCk7VGcoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBjaChhLGIsYyl7Yz1LZihjKTtjLnRhZz0zO3ZhciBkPWEuc3RhdGVOb2RlO251bGwhPT1kJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtudWxsPT09ZGg/ZGg9bmV3IFNldChbdGhpc10pOmRoLmFkZCh0aGlzKTt2YXIgYz1iLnZhbHVlLGQ9Yi5zdGFjaztUZyhhLGIpO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYyx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWQ/ZDpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIGVoKGEsYixjLGQsZSxmKXtjLmVmZmVjdFRhZ3w9NTEyO2MuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PW51bGw7ZD1UZihkLGMpO2E9Yjtkb3tzd2l0Y2goYS50YWcpe2Nhc2UgMzphLmVmZmVjdFRhZ3w9MTAyNDtkPWFoKGEsZCxmKTtOZihhLGQsZik7cmV0dXJuO2Nhc2UgMjppZihiPWQsYz1hLnN0YXRlTm9kZSwwPT09KGEuZWZmZWN0VGFnJjY0KSYmbnVsbCE9PWMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWRofHwhZGguaGFzKGMpKSl7YS5lZmZlY3RUYWd8PTEwMjQ7ZD1jaChhLGIsZik7TmYoYSxkLGYpO3JldHVybn19YT1hLnJldHVybn13aGlsZShudWxsIT09YSl9XG5mdW5jdGlvbiBmaChhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMjpvZihhKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiYxMDI0PyhhLmVmZmVjdFRhZz1iJi0xMDI1fDY0LGEpOm51bGw7Y2FzZSAzOnJldHVybiBlZyhhKSxwZihhKSxiPWEuZWZmZWN0VGFnLGImMTAyND8oYS5lZmZlY3RUYWc9YiYtMTAyNXw2NCxhKTpudWxsO2Nhc2UgNTpyZXR1cm4gZmcoYSksbnVsbDtjYXNlIDE2OnJldHVybiBiPWEuZWZmZWN0VGFnLGImMTAyND8oYS5lZmZlY3RUYWc9YiYtMTAyNXw2NCxhKTpudWxsO2Nhc2UgNDpyZXR1cm4gZWcoYSksbnVsbDtjYXNlIDEzOnJldHVybiBZZihhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fXZhciBnaD1hZigpLGhoPTIsaWg9Z2gsamg9MCxraD0wLGxoPSExLFM9bnVsbCxtaD1udWxsLFQ9MCxuaD0tMSxvaD0hMSxVPW51bGwscGg9ITEscWg9ITEsZGg9bnVsbDtcbmZ1bmN0aW9uIHJoKCl7aWYobnVsbCE9PVMpZm9yKHZhciBhPVMucmV0dXJuO251bGwhPT1hOyl7dmFyIGI9YTtzd2l0Y2goYi50YWcpe2Nhc2UgMjpvZihiKTticmVhaztjYXNlIDM6ZWcoYik7cGYoYik7YnJlYWs7Y2FzZSA1OmZnKGIpO2JyZWFrO2Nhc2UgNDplZyhiKTticmVhaztjYXNlIDEzOllmKGIpfWE9YS5yZXR1cm59bWg9bnVsbDtUPTA7bmg9LTE7b2g9ITE7Uz1udWxsO3FoPSExfVxuZnVuY3Rpb24gc2goYSl7Zm9yKDs7KXt2YXIgYj1hLmFsdGVybmF0ZSxjPWEucmV0dXJuLGQ9YS5zaWJsaW5nO2lmKDA9PT0oYS5lZmZlY3RUYWcmNTEyKSl7Yj1TZyhiLGEsVCk7dmFyIGU9YTtpZigxMDczNzQxODIzPT09VHx8MTA3Mzc0MTgyMyE9PWUuZXhwaXJhdGlvblRpbWUpe3ZhciBmPTA7c3dpdGNoKGUudGFnKXtjYXNlIDM6Y2FzZSAyOnZhciBnPWUudXBkYXRlUXVldWU7bnVsbCE9PWcmJihmPWcuZXhwaXJhdGlvblRpbWUpfWZvcihnPWUuY2hpbGQ7bnVsbCE9PWc7KTAhPT1nLmV4cGlyYXRpb25UaW1lJiYoMD09PWZ8fGY+Zy5leHBpcmF0aW9uVGltZSkmJihmPWcuZXhwaXJhdGlvblRpbWUpLGc9Zy5zaWJsaW5nO2UuZXhwaXJhdGlvblRpbWU9Zn1pZihudWxsIT09YilyZXR1cm4gYjtudWxsIT09YyYmMD09PShjLmVmZmVjdFRhZyY1MTIpJiYobnVsbD09PWMuZmlyc3RFZmZlY3QmJihjLmZpcnN0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLG51bGwhPT1hLmxhc3RFZmZlY3QmJlxuKG51bGwhPT1jLmxhc3RFZmZlY3QmJihjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxjLmxhc3RFZmZlY3Q9YS5sYXN0RWZmZWN0KSwxPGEuZWZmZWN0VGFnJiYobnVsbCE9PWMubGFzdEVmZmVjdD9jLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hOmMuZmlyc3RFZmZlY3Q9YSxjLmxhc3RFZmZlY3Q9YSkpO2lmKG51bGwhPT1kKXJldHVybiBkO2lmKG51bGwhPT1jKWE9YztlbHNle3FoPSEwO2JyZWFrfX1lbHNle2E9ZmgoYSxvaCxUKTtpZihudWxsIT09YSlyZXR1cm4gYS5lZmZlY3RUYWcmPTUxMSxhO251bGwhPT1jJiYoYy5maXJzdEVmZmVjdD1jLmxhc3RFZmZlY3Q9bnVsbCxjLmVmZmVjdFRhZ3w9NTEyKTtpZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiB0aChhKXt2YXIgYj1LZyhhLmFsdGVybmF0ZSxhLFQpO251bGw9PT1iJiYoYj1zaChhKSk7ZWMuY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gdWgoYSxiLGMpe2xoP0EoXCIyNDNcIik6dm9pZCAwO2xoPSEwO2lmKGIhPT1UfHxhIT09bWh8fG51bGw9PT1TKXJoKCksbWg9YSxUPWIsbmg9LTEsUz12ZihtaC5jdXJyZW50LG51bGwsVCksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZD0hMTtvaD0hY3x8VDw9aGg7ZG97dHJ5e2lmKGMpZm9yKDtudWxsIT09UyYmIXZoKCk7KVM9dGgoUyk7ZWxzZSBmb3IoO251bGwhPT1TOylTPXRoKFMpfWNhdGNoKGYpe2lmKG51bGw9PT1TKWQ9ITAsYmgoZik7ZWxzZXtudWxsPT09Uz9BKFwiMjcxXCIpOnZvaWQgMDtjPVM7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpe2Q9ITA7YmgoZik7YnJlYWt9ZWgoYSxlLGMsZixvaCxULGloKTtTPXNoKGMpfX1icmVha313aGlsZSgxKTtsaD0hMTtpZihkKXJldHVybiBudWxsO2lmKG51bGw9PT1TKXtpZihxaClyZXR1cm4gYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YixhLmN1cnJlbnQuYWx0ZXJuYXRlO29oP0EoXCIyNjJcIik6XG52b2lkIDA7MDw9bmgmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgYj1hLmN1cnJlbnQuZXhwaXJhdGlvblRpbWU7MCE9PWImJigwPT09YS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZXx8YS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZTxiKSYmd2goYSxiKX0sbmgpO3hoKGEuY3VycmVudC5leHBpcmF0aW9uVGltZSl9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBWZyhhLGIpe3ZhciBjO2E6e2xoJiYhcGg/QShcIjI2M1wiKTp2b2lkIDA7Zm9yKGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMjp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21DYXRjaHx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09ZGh8fCFkaC5oYXMoZCkpKXthPVRmKGIsYSk7YT1jaChjLGEsMSk7TWYoYyxhLDEpO2tnKGMsMSk7Yz12b2lkIDA7YnJlYWsgYX1icmVhaztjYXNlIDM6YT1UZihiLGEpO2E9YWgoYyxhLDEpO01mKGMsYSwxKTtrZyhjLDEpO2M9dm9pZCAwO2JyZWFrIGF9Yz1jLnJldHVybn0zPT09YS50YWcmJihjPVRmKGIsYSksYz1haChhLGMsMSksTWYoYSxjLDEpLGtnKGEsMSkpO2M9dm9pZCAwfXJldHVybiBjfVxuZnVuY3Rpb24geWgoKXt2YXIgYT0yKzI1KigoKGlnKCktMis1MDApLzI1fDApKzEpO2E8PWpoJiYoYT1qaCsxKTtyZXR1cm4gamg9YX1mdW5jdGlvbiBqZyhhLGIpe2E9MCE9PWtoP2toOmxoP3BoPzE6VDpiLm1vZGUmMT96aD8yKzEwKigoKGEtMisxNSkvMTB8MCkrMSk6MisyNSooKChhLTIrNTAwKS8yNXwwKSsxKToxO3poJiYoMD09PUFofHxhPkFoKSYmKEFoPWEpO3JldHVybiBhfVxuZnVuY3Rpb24ga2coYSxiKXtmb3IoO251bGwhPT1hOyl7aWYoMD09PWEuZXhwaXJhdGlvblRpbWV8fGEuZXhwaXJhdGlvblRpbWU+YilhLmV4cGlyYXRpb25UaW1lPWI7bnVsbCE9PWEuYWx0ZXJuYXRlJiYoMD09PWEuYWx0ZXJuYXRlLmV4cGlyYXRpb25UaW1lfHxhLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZT5iKSYmKGEuYWx0ZXJuYXRlLmV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1hLnJldHVybilpZigzPT09YS50YWcpe3ZhciBjPWEuc3RhdGVOb2RlOyFsaCYmMCE9PVQmJmI8VCYmcmgoKTt2YXIgZD1jLmN1cnJlbnQuZXhwaXJhdGlvblRpbWU7bGgmJiFwaCYmbWg9PT1jfHx3aChjLGQpO0JoPkNoJiZBKFwiMTg1XCIpfWVsc2UgYnJlYWs7YT1hLnJldHVybn19ZnVuY3Rpb24gaWcoKXtpaD1hZigpLWdoO3JldHVybiBoaD0oaWgvMTB8MCkrMn1cbmZ1bmN0aW9uIERoKGEpe3ZhciBiPWtoO2toPTIrMjUqKCgoaWcoKS0yKzUwMCkvMjV8MCkrMSk7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtraD1ifX1mdW5jdGlvbiBFaChhLGIsYyxkLGUpe3ZhciBmPWtoO2toPTE7dHJ5e3JldHVybiBhKGIsYyxkLGUpfWZpbmFsbHl7a2g9Zn19dmFyIEZoPW51bGwsVj1udWxsLEdoPTAsSGg9LTEsVz0hMSxYPW51bGwsWT0wLEFoPTAsSWg9ITEsSmg9ITEsS2g9bnVsbCxMaD1udWxsLFo9ITEsTWg9ITEsemg9ITEsTmg9bnVsbCxDaD0xRTMsQmg9MCxPaD0xO2Z1bmN0aW9uIFBoKGEpe2lmKDAhPT1HaCl7aWYoYT5HaClyZXR1cm47Y2YoSGgpfXZhciBiPWFmKCktZ2g7R2g9YTtIaD1iZihRaCx7dGltZW91dDoxMCooYS0yKS1ifSl9XG5mdW5jdGlvbiB3aChhLGIpe2lmKG51bGw9PT1hLm5leHRTY2hlZHVsZWRSb290KWEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9YixudWxsPT09Vj8oRmg9Vj1hLGEubmV4dFNjaGVkdWxlZFJvb3Q9YSk6KFY9Vi5uZXh0U2NoZWR1bGVkUm9vdD1hLFYubmV4dFNjaGVkdWxlZFJvb3Q9RmgpO2Vsc2V7dmFyIGM9YS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZTtpZigwPT09Y3x8YjxjKWEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9Yn1XfHwoWj9NaCYmKFg9YSxZPTEsUmgoYSwxLCExKSk6MT09PWI/U2goKTpQaChiKSl9XG5mdW5jdGlvbiBUaCgpe3ZhciBhPTAsYj1udWxsO2lmKG51bGwhPT1WKWZvcih2YXIgYz1WLGQ9Rmg7bnVsbCE9PWQ7KXt2YXIgZT1kLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lO2lmKDA9PT1lKXtudWxsPT09Y3x8bnVsbD09PVY/QShcIjI0NFwiKTp2b2lkIDA7aWYoZD09PWQubmV4dFNjaGVkdWxlZFJvb3Qpe0ZoPVY9ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgaWYoZD09PUZoKUZoPWU9ZC5uZXh0U2NoZWR1bGVkUm9vdCxWLm5leHRTY2hlZHVsZWRSb290PWUsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Vsc2UgaWYoZD09PVYpe1Y9YztWLm5leHRTY2hlZHVsZWRSb290PUZoO2QubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGMubmV4dFNjaGVkdWxlZFJvb3Q9ZC5uZXh0U2NoZWR1bGVkUm9vdCxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZD1jLm5leHRTY2hlZHVsZWRSb290fWVsc2V7aWYoMD09PWF8fGU8YSlhPWUsYj1kO2lmKGQ9PT1WKWJyZWFrO1xuYz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19Yz1YO251bGwhPT1jJiZjPT09YiYmMT09PWE/QmgrKzpCaD0wO1g9YjtZPWF9ZnVuY3Rpb24gUWgoYSl7VWgoMCwhMCxhKX1mdW5jdGlvbiBTaCgpe1VoKDEsITEsbnVsbCl9ZnVuY3Rpb24gVWgoYSxiLGMpe0xoPWM7VGgoKTtpZihiKWZvcig7bnVsbCE9PVgmJjAhPT1ZJiYoMD09PWF8fGE+PVkpJiYoIUlofHxpZygpPj1ZKTspaWcoKSxSaChYLFksIUloKSxUaCgpO2Vsc2UgZm9yKDtudWxsIT09WCYmMCE9PVkmJigwPT09YXx8YT49WSk7KVJoKFgsWSwhMSksVGgoKTtudWxsIT09TGgmJihHaD0wLEhoPS0xKTswIT09WSYmUGgoWSk7TGg9bnVsbDtJaD0hMTtWaCgpfWZ1bmN0aW9uIFdoKGEsYil7Vz9BKFwiMjUzXCIpOnZvaWQgMDtYPWE7WT1iO1JoKGEsYiwhMSk7U2goKTtWaCgpfVxuZnVuY3Rpb24gVmgoKXtCaD0wO2lmKG51bGwhPT1OaCl7dmFyIGE9Tmg7Tmg9bnVsbDtmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTt0cnl7Yy5fb25Db21wbGV0ZSgpfWNhdGNoKGQpe0pofHwoSmg9ITAsS2g9ZCl9fX1pZihKaCl0aHJvdyBhPUtoLEtoPW51bGwsSmg9ITEsYTt9ZnVuY3Rpb24gUmgoYSxiLGMpe1c/QShcIjI0NVwiKTp2b2lkIDA7Vz0hMDtjPyhjPWEuZmluaXNoZWRXb3JrLG51bGwhPT1jP1hoKGEsYyxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxjPXVoKGEsYiwhMCksbnVsbCE9PWMmJih2aCgpP2EuZmluaXNoZWRXb3JrPWM6WGgoYSxjLGIpKSkpOihjPWEuZmluaXNoZWRXb3JrLG51bGwhPT1jP1hoKGEsYyxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxjPXVoKGEsYiwhMSksbnVsbCE9PWMmJlhoKGEsYyxiKSkpO1c9ITF9XG5mdW5jdGlvbiBYaChhLGIsYyl7dmFyIGQ9YS5maXJzdEJhdGNoO2lmKG51bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZTw9YyYmKG51bGw9PT1OaD9OaD1bZF06TmgucHVzaChkKSxkLl9kZWZlcikpe2EuZmluaXNoZWRXb3JrPWI7YS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT0wO3JldHVybn1hLmZpbmlzaGVkV29yaz1udWxsO3BoPWxoPSEwO2M9Yi5zdGF0ZU5vZGU7Yy5jdXJyZW50PT09Yj9BKFwiMTc3XCIpOnZvaWQgMDtkPWMucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOzA9PT1kP0EoXCIyNjFcIik6dm9pZCAwO2MucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7aWcoKTtlYy5jdXJyZW50PW51bGw7aWYoMTxiLmVmZmVjdFRhZylpZihudWxsIT09Yi5sYXN0RWZmZWN0KXtiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iO3ZhciBlPWIuZmlyc3RFZmZlY3R9ZWxzZSBlPWI7ZWxzZSBlPWIuZmlyc3RFZmZlY3Q7WGU9R2Q7dmFyIGY9ZGEoKTtpZihUZChmKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW5cbmYpdmFyIGc9e3N0YXJ0OmYuc2VsZWN0aW9uU3RhcnQsZW5kOmYuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e3ZhciBoPXdpbmRvdy5nZXRTZWxlY3Rpb24mJndpbmRvdy5nZXRTZWxlY3Rpb24oKTtpZihoJiYwIT09aC5yYW5nZUNvdW50KXtnPWguYW5jaG9yTm9kZTt2YXIgaz1oLmFuY2hvck9mZnNldCxuPWguZm9jdXNOb2RlO2g9aC5mb2N1c09mZnNldDt0cnl7Zy5ub2RlVHlwZSxuLm5vZGVUeXBlfWNhdGNoKFdhKXtnPW51bGw7YnJlYWsgYX12YXIgcj0wLHc9LTEsUD0tMSxrYz0wLEhkPTAsRT1mLHQ9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB4Ozspe0UhPT1nfHwwIT09ayYmMyE9PUUubm9kZVR5cGV8fCh3PXIrayk7RSE9PW58fDAhPT1oJiYzIT09RS5ub2RlVHlwZXx8KFA9citoKTszPT09RS5ub2RlVHlwZSYmKHIrPUUubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh4PUUuZmlyc3RDaGlsZCkpYnJlYWs7dD1FO0U9eH1mb3IoOzspe2lmKEU9PT1mKWJyZWFrIGI7dD09PWcmJlxuKytrYz09PWsmJih3PXIpO3Q9PT1uJiYrK0hkPT09aCYmKFA9cik7aWYobnVsbCE9PSh4PUUubmV4dFNpYmxpbmcpKWJyZWFrO0U9dDt0PUUucGFyZW50Tm9kZX1FPXh9Zz0tMT09PXd8fC0xPT09UD9udWxsOntzdGFydDp3LGVuZDpQfX1lbHNlIGc9bnVsbH1nPWd8fHtzdGFydDowLGVuZDowfX1lbHNlIGc9bnVsbDtZZT17Zm9jdXNlZEVsZW06ZixzZWxlY3Rpb25SYW5nZTpnfTtJZCghMSk7Zm9yKFU9ZTtudWxsIT09VTspe2Y9ITE7Zz12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PVU7KXtpZihVLmVmZmVjdFRhZyYyNTYpe3ZhciB1PVUuYWx0ZXJuYXRlO2s9VTtzd2l0Y2goay50YWcpe2Nhc2UgMjppZihrLmVmZmVjdFRhZyYyNTYmJm51bGwhPT11KXt2YXIgeT11Lm1lbW9pemVkUHJvcHMsRD11Lm1lbW9pemVkU3RhdGUsamE9ay5zdGF0ZU5vZGU7amEucHJvcHM9ay5tZW1vaXplZFByb3BzO2phLnN0YXRlPWsubWVtb2l6ZWRTdGF0ZTt2YXIgaGk9amEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoeSxcbkQpO2phLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWhpfWJyZWFrO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpicmVhaztkZWZhdWx0OkEoXCIxNjNcIil9fVU9VS5uZXh0RWZmZWN0fX1jYXRjaChXYSl7Zj0hMCxnPVdhfWYmJihudWxsPT09VT9BKFwiMTc4XCIpOnZvaWQgMCxWZyhVLGcpLG51bGwhPT1VJiYoVT1VLm5leHRFZmZlY3QpKX1mb3IoVT1lO251bGwhPT1VOyl7dT0hMTt5PXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09VTspe3ZhciBxPVUuZWZmZWN0VGFnO3EmMTYmJkdlKFUuc3RhdGVOb2RlLFwiXCIpO2lmKHEmMTI4KXt2YXIgej1VLmFsdGVybmF0ZTtpZihudWxsIT09eil7dmFyIGw9ei5yZWY7bnVsbCE9PWwmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgbD9sKG51bGwpOmwuY3VycmVudD1udWxsKX19c3dpdGNoKHEmMTQpe2Nhc2UgMjpaZyhVKTtVLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OlpnKFUpO1UuZWZmZWN0VGFnJj0tMzskZyhVLmFsdGVybmF0ZSxcblUpO2JyZWFrO2Nhc2UgNDokZyhVLmFsdGVybmF0ZSxVKTticmVhaztjYXNlIDg6RD1VLFhnKEQpLEQucmV0dXJuPW51bGwsRC5jaGlsZD1udWxsLEQuYWx0ZXJuYXRlJiYoRC5hbHRlcm5hdGUuY2hpbGQ9bnVsbCxELmFsdGVybmF0ZS5yZXR1cm49bnVsbCl9VT1VLm5leHRFZmZlY3R9fWNhdGNoKFdhKXt1PSEwLHk9V2F9dSYmKG51bGw9PT1VP0EoXCIxNzhcIik6dm9pZCAwLFZnKFUseSksbnVsbCE9PVUmJihVPVUubmV4dEVmZmVjdCkpfWw9WWU7ej1kYSgpO3E9bC5mb2N1c2VkRWxlbTt1PWwuc2VsZWN0aW9uUmFuZ2U7aWYoeiE9PXEmJmZhKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxxKSl7VGQocSkmJih6PXUuc3RhcnQsbD11LmVuZCx2b2lkIDA9PT1sJiYobD16KSxcInNlbGVjdGlvblN0YXJ0XCJpbiBxPyhxLnNlbGVjdGlvblN0YXJ0PXoscS5zZWxlY3Rpb25FbmQ9TWF0aC5taW4obCxxLnZhbHVlLmxlbmd0aCkpOndpbmRvdy5nZXRTZWxlY3Rpb24mJih6PXdpbmRvdy5nZXRTZWxlY3Rpb24oKSxcbnk9cVtsYigpXS5sZW5ndGgsbD1NYXRoLm1pbih1LnN0YXJ0LHkpLHU9dm9pZCAwPT09dS5lbmQ/bDpNYXRoLm1pbih1LmVuZCx5KSwhei5leHRlbmQmJmw+dSYmKHk9dSx1PWwsbD15KSx5PVNkKHEsbCksRD1TZChxLHUpLHkmJkQmJigxIT09ei5yYW5nZUNvdW50fHx6LmFuY2hvck5vZGUhPT15Lm5vZGV8fHouYW5jaG9yT2Zmc2V0IT09eS5vZmZzZXR8fHouZm9jdXNOb2RlIT09RC5ub2RlfHx6LmZvY3VzT2Zmc2V0IT09RC5vZmZzZXQpJiYoamE9ZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKSxqYS5zZXRTdGFydCh5Lm5vZGUseS5vZmZzZXQpLHoucmVtb3ZlQWxsUmFuZ2VzKCksbD51Pyh6LmFkZFJhbmdlKGphKSx6LmV4dGVuZChELm5vZGUsRC5vZmZzZXQpKTooamEuc2V0RW5kKEQubm9kZSxELm9mZnNldCksei5hZGRSYW5nZShqYSkpKSkpO3o9W107Zm9yKGw9cTtsPWwucGFyZW50Tm9kZTspMT09PWwubm9kZVR5cGUmJnoucHVzaCh7ZWxlbWVudDpsLGxlZnQ6bC5zY3JvbGxMZWZ0LFxudG9wOmwuc2Nyb2xsVG9wfSk7cS5mb2N1cygpO2ZvcihxPTA7cTx6Lmxlbmd0aDtxKyspbD16W3FdLGwuZWxlbWVudC5zY3JvbGxMZWZ0PWwubGVmdCxsLmVsZW1lbnQuc2Nyb2xsVG9wPWwudG9wfVllPW51bGw7SWQoWGUpO1hlPW51bGw7Yy5jdXJyZW50PWI7Zm9yKFU9ZTtudWxsIT09VTspe2U9ITE7cT12b2lkIDA7dHJ5e2Zvcih6PWQ7bnVsbCE9PVU7KXt2YXIgZ2c9VS5lZmZlY3RUYWc7aWYoZ2cmMzYpe3ZhciBsYz1VLmFsdGVybmF0ZTtsPVU7dT16O3N3aXRjaChsLnRhZyl7Y2FzZSAyOnZhciBiYT1sLnN0YXRlTm9kZTtpZihsLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1sYyliYS5wcm9wcz1sLm1lbW9pemVkUHJvcHMsYmEuc3RhdGU9bC5tZW1vaXplZFN0YXRlLGJhLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgcmk9bGMubWVtb2l6ZWRQcm9wcyxzaT1sYy5tZW1vaXplZFN0YXRlO2JhLnByb3BzPWwubWVtb2l6ZWRQcm9wcztiYS5zdGF0ZT1sLm1lbW9pemVkU3RhdGU7XG5iYS5jb21wb25lbnREaWRVcGRhdGUocmksc2ksYmEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfXZhciBNZz1sLnVwZGF0ZVF1ZXVlO251bGwhPT1NZyYmKGJhLnByb3BzPWwubWVtb2l6ZWRQcm9wcyxiYS5zdGF0ZT1sLm1lbW9pemVkU3RhdGUsU2YobCxNZyxiYSx1KSk7YnJlYWs7Y2FzZSAzOnZhciBOZz1sLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1OZyl7eT1udWxsO2lmKG51bGwhPT1sLmNoaWxkKXN3aXRjaChsLmNoaWxkLnRhZyl7Y2FzZSA1Onk9bC5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAyOnk9bC5jaGlsZC5zdGF0ZU5vZGV9U2YobCxOZyx5LHUpfWJyZWFrO2Nhc2UgNTp2YXIgdGk9bC5zdGF0ZU5vZGU7bnVsbD09PWxjJiZsLmVmZmVjdFRhZyY0JiZaZShsLnR5cGUsbC5tZW1vaXplZFByb3BzKSYmdGkuZm9jdXMoKTticmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2Nhc2UgMTU6YnJlYWs7Y2FzZSAxNjpicmVhaztkZWZhdWx0OkEoXCIxNjNcIil9fWlmKGdnJlxuMTI4KXtsPXZvaWQgMDt2YXIgdWM9VS5yZWY7aWYobnVsbCE9PXVjKXt2YXIgT2c9VS5zdGF0ZU5vZGU7c3dpdGNoKFUudGFnKXtjYXNlIDU6bD1PZzticmVhaztkZWZhdWx0Omw9T2d9XCJmdW5jdGlvblwiPT09dHlwZW9mIHVjP3VjKGwpOnVjLmN1cnJlbnQ9bH19dmFyIHVpPVUubmV4dEVmZmVjdDtVLm5leHRFZmZlY3Q9bnVsbDtVPXVpfX1jYXRjaChXYSl7ZT0hMCxxPVdhfWUmJihudWxsPT09VT9BKFwiMTc4XCIpOnZvaWQgMCxWZyhVLHEpLG51bGwhPT1VJiYoVT1VLm5leHRFZmZlY3QpKX1saD1waD0hMTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgRmYmJkZmKGIuc3RhdGVOb2RlKTtiPWMuY3VycmVudC5leHBpcmF0aW9uVGltZTswPT09YiYmKGRoPW51bGwpO2EucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9Yn1mdW5jdGlvbiB2aCgpe3JldHVybiBudWxsPT09TGh8fExoLnRpbWVSZW1haW5pbmcoKT5PaD8hMTpJaD0hMH1cbmZ1bmN0aW9uIGJoKGEpe251bGw9PT1YP0EoXCIyNDZcIik6dm9pZCAwO1gucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9MDtKaHx8KEpoPSEwLEtoPWEpfWZ1bmN0aW9uIHhoKGEpe251bGw9PT1YP0EoXCIyNDZcIik6dm9pZCAwO1gucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9YX1mdW5jdGlvbiBZaChhLGIpe3ZhciBjPVo7Wj0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXsoWj1jKXx8V3x8U2goKX19ZnVuY3Rpb24gWmgoYSxiKXtpZihaJiYhTWgpe01oPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e01oPSExfX1yZXR1cm4gYShiKX1mdW5jdGlvbiAkaChhLGIpe1c/QShcIjE4N1wiKTp2b2lkIDA7dmFyIGM9WjtaPSEwO3RyeXtyZXR1cm4gRWgoYSxiKX1maW5hbGx5e1o9YyxTaCgpfX1mdW5jdGlvbiBhaShhKXt2YXIgYj1aO1o9ITA7dHJ5e0VoKGEpfWZpbmFsbHl7KFo9Yil8fFd8fFVoKDEsITEsbnVsbCl9fVxuZnVuY3Rpb24gYmkoYSxiLGMsZCxlKXt2YXIgZj1iLmN1cnJlbnQ7aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGc7Yjp7Mj09PWlkKGMpJiYyPT09Yy50YWc/dm9pZCAwOkEoXCIxNzBcIik7Zm9yKGc9YzszIT09Zy50YWc7KXtpZihtZihnKSl7Zz1nLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifShnPWcucmV0dXJuKT92b2lkIDA6QShcIjE3MVwiKX1nPWcuc3RhdGVOb2RlLmNvbnRleHR9Yz1tZihjKT9yZihjLGcpOmd9ZWxzZSBjPWhhO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9ZTtlPUtmKGQpO2UucGF5bG9hZD17ZWxlbWVudDphfTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiYoZS5jYWxsYmFjaz1iKTtNZihmLGUsZCk7a2coZixkKTtyZXR1cm4gZH1cbmZ1bmN0aW9uIGNpKGEpe3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2b2lkIDA9PT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyP0EoXCIxODhcIik6QShcIjI2OFwiLE9iamVjdC5rZXlzKGEpKSk7YT1sZChiKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX1mdW5jdGlvbiBkaShhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1pZygpO2U9amcoZixlKTtyZXR1cm4gYmkoYSxiLGMsZSxkKX1mdW5jdGlvbiBlaShhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fVxuZnVuY3Rpb24gZmkoYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gRWYocCh7fSxhLHtmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWxkKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9fSkpfVxudmFyIGdpPXt1cGRhdGVDb250YWluZXJBdEV4cGlyYXRpb25UaW1lOmJpLGNyZWF0ZUNvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIEFmKGEsYixjKX0sdXBkYXRlQ29udGFpbmVyOmRpLGZsdXNoUm9vdDpXaCxyZXF1ZXN0V29yazp3aCxjb21wdXRlVW5pcXVlQXN5bmNFeHBpcmF0aW9uOnloLGJhdGNoZWRVcGRhdGVzOlloLHVuYmF0Y2hlZFVwZGF0ZXM6WmgsZGVmZXJyZWRVcGRhdGVzOkRoLHN5bmNVcGRhdGVzOkVoLGludGVyYWN0aXZlVXBkYXRlczpmdW5jdGlvbihhLGIsYyl7aWYoemgpcmV0dXJuIGEoYixjKTtafHxXfHwwPT09QWh8fChVaChBaCwhMSxudWxsKSxBaD0wKTt2YXIgZD16aCxlPVo7Wj16aD0hMDt0cnl7cmV0dXJuIGEoYixjKX1maW5hbGx5e3poPWQsKFo9ZSl8fFd8fFNoKCl9fSxmbHVzaEludGVyYWN0aXZlVXBkYXRlczpmdW5jdGlvbigpe1d8fDA9PT1BaHx8KFVoKEFoLCExLG51bGwpLEFoPTApfSxmbHVzaENvbnRyb2xsZWQ6YWksZmx1c2hTeW5jOiRoLFxuZ2V0UHVibGljUm9vdEluc3RhbmNlOmVpLGZpbmRIb3N0SW5zdGFuY2U6Y2ksZmluZEhvc3RJbnN0YW5jZVdpdGhOb1BvcnRhbHM6ZnVuY3Rpb24oYSl7YT1tZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0saW5qZWN0SW50b0RldlRvb2xzOmZpfTtmdW5jdGlvbiBpaShhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOmdjLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fUtiLmluamVjdEZpYmVyQ29udHJvbGxlZEhvc3RDb21wb25lbnQoV2UpO1xuZnVuY3Rpb24gamkoYSl7dGhpcy5fZXhwaXJhdGlvblRpbWU9eWgoKTt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfWppLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dGhpcy5fZGVmZXI/dm9pZCAwOkEoXCIyNTBcIik7dGhpcy5faGFzQ2hpbGRyZW49ITA7dGhpcy5fY2hpbGRyZW49YTt2YXIgYj10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYz10aGlzLl9leHBpcmF0aW9uVGltZSxkPW5ldyBraTtiaShhLGIsbnVsbCxjLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07amkucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tcGxldGUpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuamkucHJvdG90eXBlLmNvbW1pdD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxiPWEuZmlyc3RCYXRjaDt0aGlzLl9kZWZlciYmbnVsbCE9PWI/dm9pZCAwOkEoXCIyNTFcIik7aWYodGhpcy5faGFzQ2hpbGRyZW4pe3ZhciBjPXRoaXMuX2V4cGlyYXRpb25UaW1lO2lmKGIhPT10aGlzKXt0aGlzLl9oYXNDaGlsZHJlbiYmKGM9dGhpcy5fZXhwaXJhdGlvblRpbWU9Yi5fZXhwaXJhdGlvblRpbWUsdGhpcy5yZW5kZXIodGhpcy5fY2hpbGRyZW4pKTtmb3IodmFyIGQ9bnVsbCxlPWI7ZSE9PXRoaXM7KWQ9ZSxlPWUuX25leHQ7bnVsbD09PWQ/QShcIjI1MVwiKTp2b2lkIDA7ZC5fbmV4dD1lLl9uZXh0O3RoaXMuX25leHQ9YjthLmZpcnN0QmF0Y2g9dGhpc310aGlzLl9kZWZlcj0hMTtXaChhLGMpO2I9dGhpcy5fbmV4dDt0aGlzLl9uZXh0PW51bGw7Yj1hLmZpcnN0QmF0Y2g9YjtudWxsIT09YiYmYi5faGFzQ2hpbGRyZW4mJmIucmVuZGVyKGIuX2NoaWxkcmVuKX1lbHNlIHRoaXMuX25leHQ9XG5udWxsLHRoaXMuX2RlZmVyPSExfTtqaS5wcm90b3R5cGUuX29uQ29tcGxldGU9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tcGxldGUpe3RoaXMuX2RpZENvbXBsZXRlPSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKykoMCxhW2JdKSgpfX07ZnVuY3Rpb24ga2koKXt0aGlzLl9jYWxsYmFja3M9bnVsbDt0aGlzLl9kaWRDb21taXQ9ITE7dGhpcy5fb25Db21taXQ9dGhpcy5fb25Db21taXQuYmluZCh0aGlzKX1raS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21taXQpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xua2kucHJvdG90eXBlLl9vbkNvbW1pdD1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21taXQpe3RoaXMuX2RpZENvbW1pdD0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/QShcIjE5MVwiLGMpOnZvaWQgMDtjKCl9fX07ZnVuY3Rpb24gbGkoYSxiLGMpe3RoaXMuX2ludGVybmFsUm9vdD1BZihhLGIsYyl9bGkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdCxkPW5ldyBraTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiZkLnRoZW4oYik7ZGkoYSxjLG51bGwsZC5fb25Db21taXQpO3JldHVybiBkfTtcbmxpLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdCxjPW5ldyBraTthPXZvaWQgMD09PWE/bnVsbDphO251bGwhPT1hJiZjLnRoZW4oYSk7ZGkobnVsbCxiLG51bGwsYy5fb25Db21taXQpO3JldHVybiBjfTtsaS5wcm90b3R5cGUubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLl9pbnRlcm5hbFJvb3QsZT1uZXcga2k7Yz12b2lkIDA9PT1jP251bGw6YztudWxsIT09YyYmZS50aGVuKGMpO2RpKGIsZCxhLGUuX29uQ29tbWl0KTtyZXR1cm4gZX07XG5saS5wcm90b3R5cGUuY3JlYXRlQmF0Y2g9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgamkodGhpcyksYj1hLl9leHBpcmF0aW9uVGltZSxjPXRoaXMuX2ludGVybmFsUm9vdCxkPWMuZmlyc3RCYXRjaDtpZihudWxsPT09ZCljLmZpcnN0QmF0Y2g9YSxhLl9uZXh0PW51bGw7ZWxzZXtmb3IoYz1udWxsO251bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZTw9YjspYz1kLGQ9ZC5fbmV4dDthLl9uZXh0PWQ7bnVsbCE9PWMmJihjLl9uZXh0PWEpfXJldHVybiBhfTtmdW5jdGlvbiBtaShhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9U2I9Z2kuYmF0Y2hlZFVwZGF0ZXM7VGI9Z2kuaW50ZXJhY3RpdmVVcGRhdGVzO1ViPWdpLmZsdXNoSW50ZXJhY3RpdmVVcGRhdGVzO1xuZnVuY3Rpb24gbmkoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBsaShhLCExLGIpfVxuZnVuY3Rpb24gb2koYSxiLGMsZCxlKXttaShjKT92b2lkIDA6QShcIjIwMFwiKTt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBnPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWVpKGYuX2ludGVybmFsUm9vdCk7Zy5jYWxsKGEpfX1udWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9bmkoYyxkKTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9ZWkoZi5faW50ZXJuYWxSb290KTtoLmNhbGwoYSl9fVpoKGZ1bmN0aW9uKCl7bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX0pfXJldHVybiBlaShmLl9pbnRlcm5hbFJvb3QpfVxuZnVuY3Rpb24gcGkoYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDttaShiKT92b2lkIDA6QShcIjIwMFwiKTtyZXR1cm4gaWkoYSxiLG51bGwsYyl9XG52YXIgcWk9e2NyZWF0ZVBvcnRhbDpwaSxmaW5kRE9NTm9kZTpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT9udWxsOjE9PT1hLm5vZGVUeXBlP2E6Y2koYSl9LGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBvaShudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gb2kobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe251bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcj9BKFwiMzhcIik6dm9pZCAwO3JldHVybiBvaShhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXttaShhKT92b2lkIDA6QShcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KFpoKGZ1bmN0aW9uKCl7b2kobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gcGkuYXBwbHkodm9pZCAwLFxuYXJndW1lbnRzKX0sdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM6WWgsdW5zdGFibGVfZGVmZXJyZWRVcGRhdGVzOkRoLGZsdXNoU3luYzokaCx1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQ6YWksX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50UGx1Z2luSHViOkthLEV2ZW50UGx1Z2luUmVnaXN0cnk6dmEsRXZlbnRQcm9wYWdhdG9yczokYSxSZWFjdENvbnRyb2xsZWRDb21wb25lbnQ6UmIsUmVhY3RET01Db21wb25lbnRUcmVlOlFhLFJlYWN0RE9NRXZlbnRMaXN0ZW5lcjpNZH0sdW5zdGFibGVfY3JlYXRlUm9vdDpmdW5jdGlvbihhLGIpe3JldHVybiBuZXcgbGkoYSwhMCxudWxsIT1iJiYhMD09PWIuaHlkcmF0ZSl9fTtmaSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6TmEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi40LjBcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtcbnZhciB2aT17ZGVmYXVsdDpxaX0sd2k9dmkmJnFpfHx2aTttb2R1bGUuZXhwb3J0cz13aS5kZWZhdWx0P3dpLmRlZmF1bHQ6d2k7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjQuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGs9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1yZXF1aXJlKFwiZmJqcy9saWIvaW52YXJpYW50XCIpLHA9cmVxdWlyZShcImZianMvbGliL2VtcHR5T2JqZWN0XCIpLHE9cmVxdWlyZShcImZianMvbGliL2VtcHR5RnVuY3Rpb25cIikscj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHQ9cj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyx1PXI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNix2PXI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHc9cj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgseD1yP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx5PXI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHo9cj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxBPXI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsQj1cbnI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyO3ImJlN5bWJvbC5mb3IoXCJyZWFjdC50aW1lb3V0XCIpO3ZhciBDPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBEKGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZT1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0wO2M8YjtjKyspZSs9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbYysxXSk7bighMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGUpfVxudmFyIEU9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319O2Z1bmN0aW9uIEYoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9cDt0aGlzLnVwZGF0ZXI9ZXx8RX1GLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0YucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT9EKFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gRygpe31cbkcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9cDt0aGlzLnVwZGF0ZXI9ZXx8RX12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7ayhJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixlKXt2YXIgYz12b2lkIDAsZD17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihkW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtjXSYmKGRbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnQsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBOKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT10fWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE89L1xcLysvZyxQPVtdO2Z1bmN0aW9uIFEoYSxiLGUsYyl7aWYoUC5sZW5ndGgpe3ZhciBkPVAucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1lO2QuY29udGV4dD1jO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzplLGNvbnRleHQ6Yyxjb3VudDowfX1mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGUsYyl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHQ6Y2FzZSB1Omc9ITB9fWlmKGcpcmV0dXJuIGUoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZD1hW2hdO3ZhciBmPWIrVChkLGgpO2crPVMoZCxmLGUsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhP2Y9bnVsbDooZj1DJiZhW0NdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLFxuaD0wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitUKGQsaCsrKSxnKz1TKGQsZixlLGMpO2Vsc2VcIm9iamVjdFwiPT09ZCYmKGU9XCJcIithLEQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1lP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmUsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFQoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFUoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gVihhLGIsZSl7dmFyIGM9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9XKGEsYyxlLHEudGhhdFJldHVybnNBcmd1bWVudCk6bnVsbCE9YSYmKE4oYSkmJihiPWQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpK2UsYT17JCR0eXBlb2Y6dCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9KSxjLnB1c2goYSkpfWZ1bmN0aW9uIFcoYSxiLGUsYyxkKXt2YXIgZz1cIlwiO251bGwhPWUmJihnPShcIlwiK2UpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIik7Yj1RKGIsZyxjLGQpO251bGw9PWF8fFMoYSxcIlwiLFYsYik7UihiKX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1coYSxjLG51bGwsYixlKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsZSk7bnVsbD09YXx8UyhhLFwiXCIsVSxiKTtSKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT8wOlMoYSxcIlwiLHEudGhhdFJldHVybnNOdWxsLG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1coYSxiLG51bGwscS50aGF0UmV0dXJuc0FyZ3VtZW50KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtOKGEpP3ZvaWQgMDpEKFwiMTQzXCIpO3JldHVybiBhfX0sY3JlYXRlUmVmOmZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19LENvbXBvbmVudDpGLFB1cmVDb21wb25lbnQ6SCxjcmVhdGVDb250ZXh0OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6eixcbl9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9kZWZhdWx0VmFsdWU6YSxfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfY2hhbmdlZEJpdHM6MCxfY2hhbmdlZEJpdHMyOjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp5LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkIscmVuZGVyOmF9fSxGcmFnbWVudDp2LFN0cmljdE1vZGU6dyx1bnN0YWJsZV9Bc3luY01vZGU6QSx1bnN0YWJsZV9Qcm9maWxlcjp4LGNyZWF0ZUVsZW1lbnQ6TSxjbG9uZUVsZW1lbnQ6ZnVuY3Rpb24oYSxiLGUpe251bGw9PT1hfHx2b2lkIDA9PT1hP0QoXCIyNjdcIixhKTp2b2lkIDA7dmFyIGM9dm9pZCAwLGQ9ayh7fSxhLnByb3BzKSxnPWEua2V5LGg9YS5yZWYsZj1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYsZj1KLmN1cnJlbnQpO3ZvaWQgMCE9PVxuYi5rZXkmJihnPVwiXCIrYi5rZXkpO3ZhciBsPXZvaWQgMDthLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMmJihsPWEudHlwZS5kZWZhdWx0UHJvcHMpO2ZvcihjIGluIGIpSy5jYWxsKGIsYykmJiFMLmhhc093blByb3BlcnR5KGMpJiYoZFtjXT12b2lkIDA9PT1iW2NdJiZ2b2lkIDAhPT1sP2xbY106YltjXSl9Yz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWMpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxjKXtsPUFycmF5KGMpO2Zvcih2YXIgbT0wO208YzttKyspbFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWx9cmV0dXJueyQkdHlwZW9mOnQsdHlwZTphLnR5cGUsa2V5OmcscmVmOmgscHJvcHM6ZCxfb3duZXI6Zn19LGNyZWF0ZUZhY3Rvcnk6ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9LGlzVmFsaWRFbGVtZW50Ok4sdmVyc2lvbjpcIjE2LjQuMFwiLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnRPd25lcjpKLFxuYXNzaWduOmt9fSxZPXtkZWZhdWx0Olh9LFo9WSYmWHx8WTttb2R1bGUuZXhwb3J0cz1aLmRlZmF1bHQ/Wi5kZWZhdWx0Olo7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcclxuLy8gaW1wb3J0ICcuL3N0eWxlcy9tYWluLmNzcyc7XHJcbmltcG9ydCBBcHAgZnJvbSAnLi9jb21wb25lbnRzL2FwcC9BcHAnO1xyXG5cclxuUmVhY3RET00ucmVuZGVyKFxyXG4gIDxBcHAvPixcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpXHJcbik7Il0sInNvdXJjZVJvb3QiOiIifQ==